[
  [900.0, 0.0, 0.0],
  [23900.0, 0.0, 0.25],
  [3400.0, 0.25, 0.5],
  [3600.0, 0.5, 0.2777777777777778],
  [12700.0, 0.2777777777777778, 0.5],
  [8400.0, 0.5, 0.3],
  [28000.0, 0.3, 0.5],
  [4900.0, 0.5, 0.4375],
  [6600.0, 0.4375, 0.375],
  [3700.0, 0.375, 0.5],
  [3100.0, 0.5, 0.5],
  [9600.0, 0.5, 0.5],
  [6900.0, 0.5, 0.5],
  [10600.0, 0.5, 0.38461538461538464],
  [1800.0, 0.38461538461538464, 0.125],
  [3200.0, 0.125, 0.5],
  [4900.0, 0.5, 0.125],
  [29000.0, 0.125, 0.5],
  [16300.0, 0.5, 0.5],
  [2400.0, 0.5, 0.25],
  [33200.0, 0.25, 0.5],
  [12300.0, 0.5, 0.21428571428571427],
  [4300.0, 0.21428571428571427, 0.2],
  [3900.0, 0.2, 0.1875],
  [10900.0, 0.1875, 0.5],
  [5600.0, 0.5, 0.5],
  [3000.0, 0.5, 0.15],
  [47200.0, 0.15, 0.5],
  [5900.0, 0.5, 0.5],
  [27900.0, 0.5, 0.25],
  [4800.0, 0.25, 0.5],
  [3500.0, 0.5, 0.045454545454545456],
  [300.0, 0.045454545454545456, 0.4090909090909091],
  [6200.0, 0.4090909090909091, 0.5],
  [6200.0, 0.5, 0.5],
  [1700.0, 0.5, 0.5],
  [6500.0, 0.5, 0.5],
  [300.0, 0.5, 0.3888888888888889],
  [6900.0, 0.3888888888888889, 0.5],
  [6400.0, 0.5, 0.5],
  [4800.0, 0.5, 0.15384615384615385],
  [20800.0, 0.15384615384615385, 0.3],
  [15200.0, 0.3, 0.5],
  [12900.0, 0.5, 0.5],
  [1100.0, 0.5, 0.5],
  [8700.0, 0.5, 0.5],
  [15400.0, 0.5, 0.5],
  [1200.0, 0.5, 0.4],
  [6700.0, 0.4, 0.5],
  [1500.0, 0.5, 0.25],
  [15400.0, 0.25, 0.07142857142857142],
  [4800.0, 0.07142857142857142, 0.5],
  [5900.0, 0.5, 0.5],
  [7300.0, 0.5, 0.5],
  [7600.0, 0.5, 0.5],
  [28700.0, 0.5, 0.25],
  [12100.0, 0.25, 0.25],
  [40900.0, 0.25, 0.5],
  [26400.0, 0.5, 0.2857142857142857],
  [11800.0, 0.2857142857142857, 0.25],
  [17500.0, 0.25, 0.5],
  [24700.0, 0.5, 0.21428571428571427],
  [2200.0, 0.21428571428571427, 0.35714285714285715],
  [2400.0, 0.35714285714285715, 0.5],
  [4300.0, 0.5, 0.25],
  [27800.0, 0.25, 0.5],
  [11800.0, 0.5, 0.0625],
  [400.0, 0.0625, 0.5],
  [7600.0, 0.5, 0.1],
  [5200.0, 0.1, 0.5],
  [4800.0, 0.5, 0.5],
  [500.0, 0.5, 0.4166666666666667],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
