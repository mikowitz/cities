[
  [2200.0, 0.0, 0.0],
  [3100.0, 0.0, 0.2857142857142857],
  [9900.0, 0.2857142857142857, 0.16666666666666666],
  [7500.0, 0.16666666666666666, 0.16666666666666666],
  [2000.0, 0.16666666666666666, 0.16666666666666666],
  [14900.0, 0.16666666666666666, 0.08333333333333333],
  [2100.0, 0.08333333333333333, 0.25],
  [16800.0, 0.25, 0.2222222222222222],
  [5900.0, 0.2222222222222222, 0.19999999999999998],
  [7600.0, 0.19999999999999998, 0.09523809523809523],
  [8200.0, 0.09523809523809523, 0.2222222222222222],
  [1400.0, 0.2222222222222222, 0.2222222222222222],
  [4200.0, 0.2222222222222222, 0.13333333333333333],
  [12000.0, 0.13333333333333333, 0.20833333333333334],
  [1200.0, 0.20833333333333334, 0.16666666666666666],
  [8200.0, 0.16666666666666666, 0.030303030303030304],
  [5200.0, 0.030303030303030304, 0.2380952380952381],
  [2000.0, 0.2380952380952381, 0.16666666666666666],
  [16900.0, 0.16666666666666666, 0.2222222222222222],
  [7400.0, 0.2222222222222222, 0.2857142857142857],
  [4000.0, 0.2857142857142857, 0.16666666666666666],
  [3600.0, 0.16666666666666666, 0.08333333333333333],
  [2000.0, 0.08333333333333333, 0.19999999999999998],
  [3000.0, 0.19999999999999998, 0.19999999999999998],
  [4700.0, 0.19999999999999998, 0.16666666666666666],
  [4300.0, 0.16666666666666666, 0.25925925925925924],
  [2600.0, 0.25925925925925924, 0.25],
  [11400.0, 0.25, 0.16666666666666666],
  [23800.0, 0.16666666666666666, 0.09523809523809523],
  [8100.0, 0.09523809523809523, 0.2380952380952381],
  [3700.0, 0.2380952380952381, 0.26666666666666666],
  [4600.0, 0.26666666666666666, 0.19999999999999998],
  [2600.0, 0.19999999999999998, 0.16666666666666666],
  [8900.0, 0.16666666666666666, 0.26666666666666666],
  [3600.0, 0.26666666666666666, 0.25925925925925924],
  [9300.0, 0.25925925925925924, 0.16666666666666666],
  [3700.0, 0.16666666666666666, 0.25],
  [4200.0, 0.25, 0.26666666666666666],
  [5100.0, 0.26666666666666666, 0.05555555555555555],
  [1100.0, 0.05555555555555555, 0.1388888888888889],
  [2800.0, 0.1388888888888889, 0.19444444444444445],
  [2800.0, 0.19444444444444445, 0.16666666666666666],
  [3400.0, 0.16666666666666666, 0.07407407407407407],
  [6500.0, 0.07407407407407407, 0.2222222222222222],
  [3600.0, 0.2222222222222222, 0.25925925925925924],
  [3200.0, 0.25925925925925924, 0.16666666666666666],
  [7800.0, 0.16666666666666666, 0.26666666666666666],
  [4900.0, 0.26666666666666666, 0.16666666666666666],
  [24500.0, 0.16666666666666666, 0.16666666666666666],
  [1400.0, 0.16666666666666666, 0.2222222222222222],
  [6200.0, 0.2222222222222222, 0.13333333333333333],
  [2100.0, 0.13333333333333333, 0.08333333333333333],
  [3500.0, 0.08333333333333333, 0.16666666666666666],
  [2900.0, 0.16666666666666666, 0.16666666666666666],
  [6100.0, 0.16666666666666666, 0.2222222222222222],
  [8600.0, 0.2222222222222222, 0.26666666666666666],
  [6100.0, 0.26666666666666666, 0.19999999999999998],
  [10600.0, 0.19999999999999998, 0.25925925925925924],
  [3900.0, 0.25925925925925924, 0.25],
  [2500.0, 0.25, 0.13333333333333333],
  [13500.0, 0.13333333333333333, 0.0909090909090909],
  [3400.0, 0.0909090909090909, 0.25925925925925924],
  [1200.0, 0.25925925925925924, 0.05555555555555555],
  [3300.0, 0.05555555555555555, 0.1111111111111111],
  [16600.0, 0.1111111111111111, 0.25],
  [9400.0, 0.25, 0.16666666666666666],
  [2700.0, 0.16666666666666666, 0.19999999999999998],
  [4200.0, 0.19999999999999998, 0.16666666666666666],
  [4500.0, 0.16666666666666666, 0.20833333333333334],
  [1700.0, 0.20833333333333334, 0.13333333333333333],
  [9400.0, 0.13333333333333333, 0.16666666666666666],
  [1600.0, 0.16666666666666666, 0.16666666666666666],
  [32600.0, 0.16666666666666666, 0.047619047619047616],
  [1400.0, 0.047619047619047616, 0.16666666666666666],
  [2000.0, 0.16666666666666666, 0.26666666666666666],
  [10200.0, 0.26666666666666666, 0.16666666666666666],
  [2600.0, 0.16666666666666666, 0.030303030303030304],
  [4800.0, 0.030303030303030304, 0.1818181818181818],
  [11700.0, 0.1818181818181818, 0.2857142857142857],
  [2300.0, 0.2857142857142857, 0.25925925925925924],
  [18600.0, 0.25925925925925924, 0.16666666666666666],
  [6100.0, 0.16666666666666666, 0.13333333333333333],
  [5300.0, 0.13333333333333333, 0.16666666666666666],
  [1300.0, 0.16666666666666666, 0.16666666666666666],
  [5000.0, 0.16666666666666666, 0.25],
  [1300.0, 0.25, 0.21212121212121213],
  [2600.0, 0.21212121212121213, 0.27272727272727276],
  [19200.0, 0.27272727272727276, 0.16666666666666666],
  [3800.0, 0.16666666666666666, 0.2222222222222222],
  [12800.0, 0.2222222222222222, 0.2222222222222222],
  [3100.0, 0.2222222222222222, 0.037037037037037035],
  [7400.0, 0.037037037037037035, 0.1851851851851852],
  [5900.0, 0.1851851851851852, 0.2222222222222222],
  [6300.0, 0.2222222222222222, 0.13333333333333333],
  [1600.0, 0.13333333333333333, 0.19999999999999998],
  [2700.0, 0.19999999999999998, 0.16666666666666666],
  [13300.0, 0.16666666666666666, 0.1851851851851852],
  [10800.0, 0.1851851851851852, 0.14285714285714285],
  [3600.0, 0.14285714285714285, 0.041666666666666664],
  [2800.0, 0.041666666666666664, 0.16666666666666666],
  [5800.0, 0.16666666666666666, 0.08333333333333333],
  [3800.0, 0.08333333333333333, 0.16666666666666666],
  [12400.0, 0.16666666666666666, 0.26666666666666666],
  [6500.0, 0.26666666666666666, 0.08333333333333333],
  [2300.0, 0.08333333333333333, 0.16666666666666666],
  [3300.0, 0.16666666666666666, 0.13333333333333333],
  [1400.0, 0.13333333333333333, 0.25],
  [2600.0, 0.25, 0.030303030303030304],
  [12200.0, 0.030303030303030304, 0.1818181818181818],
  [1200.0, 0.1818181818181818, 0.2380952380952381],
  [1300.0, 0.2380952380952381, 0.16666666666666666],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.33 => p.pan;
900.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
