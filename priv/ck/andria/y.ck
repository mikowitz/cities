[
  [10100.0, 0.0, 0.0],
  [4700.0, 0.0, 0.2],
  [23700.0, 0.2, 0.2],
  [45400.0, 0.2, 0.2],
  [47800.0, 0.2, 0.16],
  [12200.0, 0.16, 0.15],
  [16700.0, 0.15, 0.2],
  [7300.0, 0.2, 0.2],
  [4100.0, 0.2, 0.16],
  [24200.0, 0.16, 0.2],
  [40300.0, 0.2, 0.2],
  [13200.0, 0.2, 0.2],
  [8400.0, 0.2, 0.2],
  [3900.0, 0.2, 0.06666666666666667],
  [37500.0, 0.06666666666666667, 0.02],
  [3700.0, 0.02, 0.05],
  [1300.0, 0.05, 0.2],
  [11300.0, 0.2, 0.05],
  [1700.0, 0.05, 0.2],
  [19700.0, 0.2, 0.2],
  [11900.0, 0.2, 0.2],
  [11200.0, 0.2, 0.2],
  [12700.0, 0.2, 0.2],
  [100200.0, 0.2, 0.2],
  [3700.0, 0.2, 0.05],
  [4500.0, 0.05, 0.16],
  [6900.0, 0.16, 0.1],
  [2800.0, 0.1, 0.2],
  [7400.0, 0.2, 0.2],
  [1200.0, 0.2, 0.2],
  [5500.0, 0.2, 0.2],
  [12400.0, 0.2, 0.2],
  [63900.0, 0.2, 0.2],
  [19300.0, 0.2, 0.03333333333333333],
  [600.0, 0.03333333333333333, 0.2],
  [27600.0, 0.2, 0.2],
  [2800.0, 0.2, 0.2],
  [52500.0, 0.2, 0.2],
  [9100.0, 0.2, 0.2],
  [5900.0, 0.2, 0.2],
  [9500.0, 0.2, 0.15],
  [4600.0, 0.15, 0.2],
  [19500.0, 0.2, 0.2],
  [6400.0, 0.2, 0.2],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.85 => p.pan;
2500.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
