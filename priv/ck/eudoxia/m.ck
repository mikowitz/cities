[
  [49500.0, 0.0, 0.0],
  [11000.0, 0.0, 0.07692307692307693],
  [2800.0, 0.07692307692307693, 0.06153846153846154],
  [18200.0, 0.06153846153846154, 0.04807692307692308],
  [400.0, 0.04807692307692308, 0.020979020979020976],
  [3500.0, 0.020979020979020976, 0.027972027972027972],
  [67900.0, 0.027972027972027972, 0.010989010989010988],
  [8400.0, 0.010989010989010988, 0.04395604395604395],
  [98200.0, 0.04395604395604395, 0.06410256410256411],
  [7200.0, 0.06410256410256411, 0.015384615384615385],
  [7800.0, 0.015384615384615385, 0.02564102564102564],
  [11600.0, 0.02564102564102564, 0.03076923076923077],
  [24700.0, 0.03076923076923077, 0.038461538461538464],
  [18000.0, 0.038461538461538464, 0.07692307692307693],
  [4600.0, 0.07692307692307693, 0.027972027972027972],
  [1400.0, 0.027972027972027972, 0.06410256410256411],
  [57200.0, 0.06410256410256411, 0.019230769230769232],
  [7300.0, 0.019230769230769232, 0.04395604395604395],
  [45500.0, 0.04395604395604395, 0.010989010989010988],
  [6900.0, 0.010989010989010988, 0.028846153846153848],
  [400.0, 0.028846153846153848, 0.019230769230769232],
  [10200.0, 0.019230769230769232, 0.028846153846153848],
  [19600.0, 0.028846153846153848, 0.03076923076923077],
  [31200.0, 0.03076923076923077, 0.03076923076923077],
  [13300.0, 0.03076923076923077, 0.007692307692307693],
  [25900.0, 0.007692307692307693, 0.04615384615384615],
  [31000.0, 0.04615384615384615, 0.07692307692307693],
  [9400.0, 0.07692307692307693, 0.055944055944055944],
  [6800.0, 0.055944055944055944, 0.04615384615384615],
  [1800.0, 0.04615384615384615, 0.057692307692307696],
  [16600.0, 0.057692307692307696, 0.057692307692307696],
  [44000.0, 0.057692307692307696, 0.03076923076923077],
  [3500.0, 0.03076923076923077, 0.02564102564102564],
  [13600.0, 0.02564102564102564, 0.057692307692307696],
  [41000.0, 0.057692307692307696, 0.02564102564102564],
  [7200.0, 0.02564102564102564, 0.04395604395604395],
  [9800.0, 0.04395604395604395, 0.038461538461538464],
  [6400.0, 0.038461538461538464, 0.06593406593406594],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
