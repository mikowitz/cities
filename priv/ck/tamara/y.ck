[
  [0.0, 0.0, 0.0],
  [3700.0, 0.0, 0.06666666666666667],
  [12200.0, 0.06666666666666667, 0.15],
  [2000.0, 0.15, 0.2],
  [10800.0, 0.2, 0.13333333333333333],
  [86900.0, 0.13333333333333333, 0.2],
  [2500.0, 0.2, 0.2],
  [4000.0, 0.2, 0.2],
  [4400.0, 0.2, 0.2],
  [4200.0, 0.2, 0.2],
  [3000.0, 0.2, 0.2],
  [28400.0, 0.2, 0.06666666666666667],
  [131000.0, 0.06666666666666667, 0.13333333333333333],
  [18800.0, 0.13333333333333333, 0.2],
  [20800.0, 0.2, 0.05],
  [33300.0, 0.05, 0.11428571428571428],
  [45200.0, 0.11428571428571428, 0.15555555555555556],
  [5100.0, 0.15555555555555556, 0.11428571428571428],
  [19700.0, 0.11428571428571428, 0.2],
  [16100.0, 0.2, 0.2],
  [26600.0, 0.2, 0.16],
  [20700.0, 0.16, 0.03636363636363636],
  [69200.0, 0.03636363636363636, 0.2],
  [11300.0, 0.2, 0.05],
  [9500.0, 0.05, 0.2],
  [700.0, 0.2, 0.2],
  [1900.0, 0.2, 0.15],
  [3300.0, 0.15, 0.1],
  [6900.0, 0.1, 0.06666666666666667],
  [13100.0, 0.06666666666666667, 0.05],
  [2900.0, 0.05, 0.06666666666666667],
  [9800.0, 0.06666666666666667, 0.06666666666666667],
  [3500.0, 0.06666666666666667, 0.06666666666666667],
  [28500.0, 0.06666666666666667, 0.2],
  [800.0, 0.2, 0.2],
  [2000.0, 0.2, 0.2],
  [18000.0, 0.2, 0.2],
  [6300.0, 0.2, 0.2],
  [22800.0, 0.2, 0.06666666666666667],
  [6800.0, 0.06666666666666667, 0.2],
  [23700.0, 0.2, 0.2],
  [4500.0, 0.2, 0.06666666666666667],
  [25500.0, 0.06666666666666667, 0.2],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.85 => p.pan;
2500.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
