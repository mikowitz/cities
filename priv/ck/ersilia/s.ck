[
  [2800.0, 0.0, 0.0],
  [3100.0, 0.0, 0.022556390977443608],
  [2300.0, 0.022556390977443608, 0.011695906432748537],
  [5500.0, 0.011695906432748537, 0.04678362573099415],
  [2000.0, 0.04678362573099415, 0.03643724696356275],
  [1800.0, 0.03643724696356275, 0.05263157894736842],
  [1100.0, 0.05263157894736842, 0.007518796992481203],
  [5200.0, 0.007518796992481203, 0.022556390977443608],
  [7900.0, 0.022556390977443608, 0.05263157894736842],
  [300.0, 0.05263157894736842, 0.05263157894736842],
  [3000.0, 0.05263157894736842, 0.007518796992481203],
  [4000.0, 0.007518796992481203, 0.007518796992481203],
  [6400.0, 0.007518796992481203, 0.05263157894736842],
  [3000.0, 0.05263157894736842, 0.05263157894736842],
  [400.0, 0.05263157894736842, 0.03508771929824561],
  [28100.0, 0.03508771929824561, 0.05263157894736842],
  [14600.0, 0.05263157894736842, 0.039473684210526314],
  [4000.0, 0.039473684210526314, 0.007518796992481203],
  [1500.0, 0.007518796992481203, 0.05263157894736842],
  [4400.0, 0.05263157894736842, 0.02631578947368421],
  [8100.0, 0.02631578947368421, 0.05263157894736842],
  [300.0, 0.05263157894736842, 0.039473684210526314],
  [9900.0, 0.039473684210526314, 0.05263157894736842],
  [3400.0, 0.05263157894736842, 0.05263157894736842],
  [400.0, 0.05263157894736842, 0.03508771929824561],
  [2800.0, 0.03508771929824561, 0.05263157894736842],
  [4700.0, 0.05263157894736842, 0.015789473684210527],
  [4000.0, 0.015789473684210527, 0.007518796992481203],
  [4400.0, 0.007518796992481203, 0.05263157894736842],
  [3300.0, 0.05263157894736842, 0.006578947368421052],
  [9900.0, 0.006578947368421052, 0.05263157894736842],
  [11200.0, 0.05263157894736842, 0.039473684210526314],
  [2400.0, 0.039473684210526314, 0.023391812865497075],
  [1500.0, 0.023391812865497075, 0.05263157894736842],
  [2500.0, 0.05263157894736842, 0.019736842105263157],
  [3300.0, 0.019736842105263157, 0.05263157894736842],
  [9100.0, 0.05263157894736842, 0.05263157894736842],
  [4000.0, 0.05263157894736842, 0.007518796992481203],
  [2100.0, 0.007518796992481203, 0.05263157894736842],
  [3800.0, 0.05263157894736842, 0.05263157894736842],
  [7700.0, 0.05263157894736842, 0.039473684210526314],
  [4500.0, 0.039473684210526314, 0.05263157894736842],
  [2500.0, 0.05263157894736842, 0.022556390977443608],
  [15600.0, 0.022556390977443608, 0.010526315789473684],
  [2800.0, 0.010526315789473684, 0.022556390977443608],
  [4500.0, 0.022556390977443608, 0.017543859649122806],
  [7500.0, 0.017543859649122806, 0.007518796992481203],
  [4000.0, 0.007518796992481203, 0.007518796992481203],
  [13500.0, 0.007518796992481203, 0.05263157894736842],
  [23600.0, 0.05263157894736842, 0.013157894736842105],
  [800.0, 0.013157894736842105, 0.02631578947368421],
  [5800.0, 0.02631578947368421, 0.05263157894736842],
  [400.0, 0.05263157894736842, 0.03508771929824561],
  [300.0, 0.03508771929824561, 0.05263157894736842],
  [8100.0, 0.05263157894736842, 0.010526315789473684],
  [15600.0, 0.010526315789473684, 0.05263157894736842],
  [10800.0, 0.05263157894736842, 0.022556390977443608],
  [6800.0, 0.022556390977443608, 0.05263157894736842],
  [5400.0, 0.05263157894736842, 0.05263157894736842],
  [4500.0, 0.05263157894736842, 0.05263157894736842],
  [6200.0, 0.05263157894736842, 0.039473684210526314],
  [9200.0, 0.039473684210526314, 0.05263157894736842],
  [1100.0, 0.05263157894736842, 0.05263157894736842],
  [3500.0, 0.05263157894736842, 0.005263157894736842],
  [9200.0, 0.005263157894736842, 0.05263157894736842],
  [2000.0, 0.05263157894736842, 0.03643724696356275],
  [300.0, 0.03643724696356275, 0.05263157894736842],
  [4900.0, 0.05263157894736842, 0.007518796992481203],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.41 => p.pan;
1900.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
