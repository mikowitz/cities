[
  [5500.0, 0.0, 0.0],
  [7100.0, 0.0, 0.15],
  [8900.0, 0.15, 0.06666666666666667],
  [17500.0, 0.06666666666666667, 0.2],
  [20100.0, 0.2, 0.1],
  [7400.0, 0.1, 0.2],
  [2200.0, 0.2, 0.15],
  [12700.0, 0.15, 0.07272727272727272],
  [26300.0, 0.07272727272727272, 0.2],
  [80700.0, 0.2, 0.2],
  [3600.0, 0.2, 0.06666666666666667],
  [27300.0, 0.06666666666666667, 0.16],
  [2400.0, 0.16, 0.2],
  [6600.0, 0.2, 0.06666666666666667],
  [16500.0, 0.06666666666666667, 0.06666666666666667],
  [15100.0, 0.06666666666666667, 0.05],
  [3600.0, 0.05, 0.06666666666666667],
  [3200.0, 0.06666666666666667, 0.2],
  [14300.0, 0.2, 0.06666666666666667],
  [10600.0, 0.06666666666666667, 0.06666666666666667],
  [1900.0, 0.06666666666666667, 0.16666666666666669],
  [3300.0, 0.16666666666666669, 0.1],
  [3900.0, 0.1, 0.06666666666666667],
  [200.0, 0.06666666666666667, 0.2],
  [53800.0, 0.2, 0.06666666666666667],
  [10700.0, 0.06666666666666667, 0.2],
  [200.0, 0.2, 0.2],
  [9000.0, 0.2, 0.06666666666666667],
  [2200.0, 0.06666666666666667, 0.15],
  [2600.0, 0.15, 0.07272727272727272],
  [23600.0, 0.07272727272727272, 0.05],
  [2900.0, 0.05, 0.06666666666666667],
  [3800.0, 0.06666666666666667, 0.06666666666666667],
  [7000.0, 0.06666666666666667, 0.125],
  [1700.0, 0.125, 0.2],
  [3500.0, 0.2, 0.06666666666666667],
  [2700.0, 0.06666666666666667, 0.2],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.85 => p.pan;
2500.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
