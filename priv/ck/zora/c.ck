[
  [21600.0, 0.0, 0.0],
  [10400.0, 0.0, 0.08333333333333333],
  [6700.0, 0.08333333333333333, 0.1111111111111111],
  [8100.0, 0.1111111111111111, 0.14285714285714285],
  [17000.0, 0.14285714285714285, 0.05555555555555555],
  [800.0, 0.05555555555555555, 0.07692307692307693],
  [30700.0, 0.07692307692307693, 0.20512820512820515],
  [200.0, 0.20512820512820515, 0.09999999999999999],
  [37900.0, 0.09999999999999999, 0.13333333333333333],
  [10900.0, 0.13333333333333333, 0.19047619047619047],
  [29500.0, 0.19047619047619047, 0.16666666666666666],
  [900.0, 0.16666666666666666, 0.2380952380952381],
  [6200.0, 0.2380952380952381, 0.13333333333333333],
  [7100.0, 0.13333333333333333, 0.1111111111111111],
  [22800.0, 0.1111111111111111, 0.25925925925925924],
  [26500.0, 0.25925925925925924, 0.1111111111111111],
  [1700.0, 0.1111111111111111, 0.26666666666666666],
  [2100.0, 0.26666666666666666, 0.05555555555555555],
  [500.0, 0.05555555555555555, 0.06666666666666667],
  [61600.0, 0.06666666666666667, 0.26666666666666666],
  [2300.0, 0.26666666666666666, 0.08333333333333333],
  [14600.0, 0.08333333333333333, 0.05555555555555555],
  [3300.0, 0.05555555555555555, 0.08333333333333333],
  [700.0, 0.08333333333333333, 0.26666666666666666],
  [20300.0, 0.26666666666666666, 0.05555555555555555],
  [3800.0, 0.05555555555555555, 0.2222222222222222],
  [1300.0, 0.2222222222222222, 0.06666666666666667],
  [2100.0, 0.06666666666666667, 0.25],
  [1800.0, 0.25, 0.1111111111111111],
  [30600.0, 0.1111111111111111, 0.26666666666666666],
  [3200.0, 0.26666666666666666, 0.022222222222222223],
  [6200.0, 0.022222222222222223, 0.19999999999999998],
  [8200.0, 0.19999999999999998, 0.023809523809523808],
  [2900.0, 0.023809523809523808, 0.2777777777777778],
  [3500.0, 0.2777777777777778, 0.25],
  [16000.0, 0.25, 0.25],
  [3400.0, 0.25, 0.041666666666666664],
  [48100.0, 0.041666666666666664, 0.1111111111111111],
  [3100.0, 0.1111111111111111, 0.08333333333333333],
  [51700.0, 0.08333333333333333, 0.2222222222222222],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
