[
  [55500.0, 0.0, 0.0],
  [16800.0, 0.0, 0.14285714285714285],
  [57900.0, 0.14285714285714285, 0.05357142857142857],
  [14800.0, 0.05357142857142857, 0.03571428571428571],
  [23000.0, 0.03571428571428571, 0.09523809523809523],
  [4300.0, 0.09523809523809523, 0.028571428571428574],
  [29400.0, 0.028571428571428574, 0.028571428571428574],
  [5900.0, 0.028571428571428574, 0.14285714285714285],
  [27800.0, 0.14285714285714285, 0.03571428571428571],
  [24600.0, 0.03571428571428571, 0.14285714285714285],
  [16100.0, 0.14285714285714285, 0.023809523809523808],
  [48800.0, 0.023809523809523808, 0.14285714285714285],
  [18400.0, 0.14285714285714285, 0.028571428571428574],
  [23700.0, 0.028571428571428574, 0.12244897959183673],
  [10900.0, 0.12244897959183673, 0.014285714285714287],
  [48900.0, 0.014285714285714287, 0.06493506493506493],
  [30400.0, 0.06493506493506493, 0.14285714285714285],
  [38100.0, 0.14285714285714285, 0.10204081632653061],
  [24000.0, 0.10204081632653061, 0.14285714285714285],
  [17500.0, 0.14285714285714285, 0.047619047619047616],
  [5700.0, 0.047619047619047616, 0.07936507936507937],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
