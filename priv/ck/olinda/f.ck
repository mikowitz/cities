[
  [4800.0, 0.0, 0.0],
  [8300.0, 0.0, 0.3333333333333333],
  [9300.0, 0.3333333333333333, 0.19999999999999998],
  [3500.0, 0.19999999999999998, 0.1851851851851852],
  [15800.0, 0.1851851851851852, 0.08333333333333333],
  [5500.0, 0.08333333333333333, 0.3333333333333333],
  [17900.0, 0.3333333333333333, 0.3333333333333333],
  [2500.0, 0.3333333333333333, 0.3333333333333333],
  [61800.0, 0.3333333333333333, 0.26666666666666666],
  [5900.0, 0.26666666666666666, 0.08333333333333333],
  [1100.0, 0.08333333333333333, 0.3333333333333333],
  [20900.0, 0.3333333333333333, 0.3333333333333333],
  [20900.0, 0.3333333333333333, 0.041666666666666664],
  [93000.0, 0.041666666666666664, 0.05555555555555555],
  [2300.0, 0.05555555555555555, 0.3333333333333333],
  [21300.0, 0.3333333333333333, 0.08333333333333333],
  [73100.0, 0.08333333333333333, 0.26666666666666666],
  [41800.0, 0.26666666666666666, 0.3333333333333333],
  [13200.0, 0.3333333333333333, 0.1111111111111111],
  [13000.0, 0.1111111111111111, 0.08333333333333333],
  [25600.0, 0.08333333333333333, 0.3333333333333333],
  [5300.0, 0.3333333333333333, 0.041666666666666664],
  [800.0, 0.041666666666666664, 0.08333333333333333],
  [1900.0, 0.08333333333333333, 0.3333333333333333],
  [1200.0, 0.3333333333333333, 0.3333333333333333],
  [6400.0, 0.3333333333333333, 0.06666666666666667],
  [9700.0, 0.06666666666666667, 0.3333333333333333],
  [55700.0, 0.3333333333333333, 0.08333333333333333],
  [3100.0, 0.08333333333333333, 0.13333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
