[
  [18900.0, 0.0, 0.0],
  [14100.0, 0.0, 0.07142857142857142],
  [8300.0, 0.07142857142857142, 0.08333333333333333],
  [12800.0, 0.08333333333333333, 0.25],
  [16100.0, 0.25, 0.0625],
  [3200.0, 0.0625, 0.16666666666666666],
  [5700.0, 0.16666666666666666, 0.16666666666666666],
  [32300.0, 0.16666666666666666, 0.1875],
  [3200.0, 0.1875, 0.5],
  [40400.0, 0.5, 0.2692307692307692],
  [41700.0, 0.2692307692307692, 0.038461538461538464],
  [10300.0, 0.038461538461538464, 0.05555555555555555],
  [4200.0, 0.05555555555555555, 0.21428571428571427],
  [16700.0, 0.21428571428571427, 0.0625],
  [13200.0, 0.0625, 0.05],
  [24200.0, 0.05, 0.1111111111111111],
  [100900.0, 0.1111111111111111, 0.125],
  [7100.0, 0.125, 0.2222222222222222],
  [22300.0, 0.2222222222222222, 0.16666666666666666],
  [6200.0, 0.16666666666666666, 0.1],
  [6400.0, 0.1, 0.3888888888888889],
  [17300.0, 0.3888888888888889, 0.05555555555555555],
  [23400.0, 0.05555555555555555, 0.08333333333333333],
  [45300.0, 0.08333333333333333, 0.125],
  [1700.0, 0.125, 0.35],
  [39500.0, 0.35, 0.05555555555555555],
  [5900.0, 0.05555555555555555, 0.1],
  [8100.0, 0.1, 0.125],
  [3000.0, 0.125, 0.4],
  [3800.0, 0.4, 0.25],
  [6200.0, 0.25, 0.16666666666666666],
  [21400.0, 0.16666666666666666, 0.1],
  [11300.0, 0.1, 0.16666666666666666],
  [11100.0, 0.16666666666666666, 0.16666666666666666],
  [68500.0, 0.16666666666666666, 0.21428571428571427],
  [25100.0, 0.21428571428571427, 0.0625],
  [39500.0, 0.0625, 0.07142857142857142],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
