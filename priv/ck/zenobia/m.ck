[
  [51200.0, 0.0, 0.0],
  [6000.0, 0.0, 0.038461538461538464],
  [4000.0, 0.038461538461538464, 0.019230769230769232],
  [40100.0, 0.019230769230769232, 0.06837606837606837],
  [39000.0, 0.06837606837606837, 0.03076923076923077],
  [500.0, 0.03076923076923077, 0.02564102564102564],
  [6100.0, 0.02564102564102564, 0.042735042735042736],
  [400.0, 0.042735042735042736, 0.03296703296703297],
  [23700.0, 0.03296703296703297, 0.04395604395604395],
  [44100.0, 0.04395604395604395, 0.07692307692307693],
  [5800.0, 0.07692307692307693, 0.03365384615384615],
  [58900.0, 0.03365384615384615, 0.07692307692307693],
  [51900.0, 0.07692307692307693, 0.019230769230769232],
  [4900.0, 0.019230769230769232, 0.02564102564102564],
  [6600.0, 0.02564102564102564, 0.038461538461538464],
  [27800.0, 0.038461538461538464, 0.015384615384615385],
  [7500.0, 0.015384615384615385, 0.03076923076923077],
  [7100.0, 0.03076923076923077, 0.03076923076923077],
  [51400.0, 0.03076923076923077, 0.015384615384615385],
  [27600.0, 0.015384615384615385, 0.06153846153846154],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
