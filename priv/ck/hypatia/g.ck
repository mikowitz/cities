[
  [3500.0, 0.0, 0.0],
  [2400.0, 0.0, 0.10204081632653061],
  [1600.0, 0.10204081632653061, 0.07142857142857142],
  [36200.0, 0.07142857142857142, 0.125],
  [1900.0, 0.125, 0.11904761904761905],
  [9500.0, 0.11904761904761905, 0.061224489795918366],
  [12000.0, 0.061224489795918366, 0.11904761904761905],
  [1400.0, 0.11904761904761905, 0.14285714285714285],
  [2700.0, 0.14285714285714285, 0.05357142857142857],
  [9600.0, 0.05357142857142857, 0.023809523809523808],
  [5200.0, 0.023809523809523808, 0.061224489795918366],
  [2400.0, 0.061224489795918366, 0.14285714285714285],
  [10500.0, 0.14285714285714285, 0.09523809523809523],
  [10500.0, 0.09523809523809523, 0.14285714285714285],
  [15500.0, 0.14285714285714285, 0.14285714285714285],
  [24100.0, 0.14285714285714285, 0.14285714285714285],
  [38800.0, 0.14285714285714285, 0.028571428571428574],
  [32300.0, 0.028571428571428574, 0.061224489795918366],
  [3900.0, 0.061224489795918366, 0.017857142857142856],
  [19100.0, 0.017857142857142856, 0.125],
  [16100.0, 0.125, 0.14285714285714285],
  [20900.0, 0.14285714285714285, 0.07792207792207792],
  [11000.0, 0.07792207792207792, 0.028571428571428574],
  [5300.0, 0.028571428571428574, 0.14285714285714285],
  [10000.0, 0.14285714285714285, 0.14285714285714285],
  [26700.0, 0.14285714285714285, 0.125],
  [34600.0, 0.125, 0.10204081632653061],
  [12100.0, 0.10204081632653061, 0.028571428571428574],
  [13700.0, 0.028571428571428574, 0.10714285714285714],
  [9100.0, 0.10714285714285714, 0.023809523809523808],
  [8500.0, 0.023809523809523808, 0.028571428571428574],
  [15500.0, 0.028571428571428574, 0.14285714285714285],
  [4700.0, 0.14285714285714285, 0.08571428571428572],
  [1600.0, 0.08571428571428572, 0.07142857142857142],
  [24800.0, 0.07142857142857142, 0.125],
  [16200.0, 0.125, 0.09523809523809523],
  [3000.0, 0.09523809523809523, 0.11904761904761905],
  [16600.0, 0.11904761904761905, 0.09523809523809523],
  [2700.0, 0.09523809523809523, 0.14285714285714285],
  [1600.0, 0.14285714285714285, 0.07142857142857142],
  [12800.0, 0.07142857142857142, 0.125],
  [2700.0, 0.125, 0.07142857142857142],
  [8900.0, 0.07142857142857142, 0.14285714285714285],
  [24600.0, 0.14285714285714285, 0.14285714285714285],
  [8900.0, 0.14285714285714285, 0.07142857142857142],
  [3300.0, 0.07142857142857142, 0.14285714285714285],
  [15500.0, 0.14285714285714285, 0.1142857142857143],
  [2800.0, 0.1142857142857143, 0.09523809523809523],
  [12700.0, 0.09523809523809523, 0.02040816326530612],
  [3000.0, 0.02040816326530612, 0.14285714285714285],
  [9000.0, 0.14285714285714285, 0.09523809523809523],
  [22600.0, 0.09523809523809523, 0.14285714285714285],
  [35900.0, 0.14285714285714285, 0.04081632653061224],
  [21100.0, 0.04081632653061224, 0.09523809523809523],
  [2600.0, 0.09523809523809523, 0.028571428571428574],
  [44600.0, 0.028571428571428574, 0.028571428571428574],
  [16100.0, 0.028571428571428574, 0.07142857142857142],
  [12100.0, 0.07142857142857142, 0.061224489795918366],
  [10200.0, 0.061224489795918366, 0.07142857142857142],
  [6500.0, 0.07142857142857142, 0.07142857142857142],
  [1600.0, 0.07142857142857142, 0.07142857142857142],
  [5900.0, 0.07142857142857142, 0.125],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
