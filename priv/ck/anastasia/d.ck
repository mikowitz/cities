[
  [2400.0, 0.0, 0.0],
  [2700.0, 0.0, 0.5],
  [7300.0, 0.5, 0.125],
  [24100.0, 0.125, 0.5],
  [10400.0, 0.5, 0.5],
  [25300.0, 0.5, 0.5],
  [8200.0, 0.5, 0.5],
  [4000.0, 0.5, 0.35],
  [7600.0, 0.35, 0.5],
  [4400.0, 0.5, 0.3333333333333333],
  [8100.0, 0.3333333333333333, 0.5],
  [3800.0, 0.5, 0.5],
  [1100.0, 0.5, 0.5],
  [4000.0, 0.5, 0.5],
  [10000.0, 0.5, 0.5],
  [16200.0, 0.5, 0.5],
  [1900.0, 0.5, 0.3333333333333333],
  [8700.0, 0.3333333333333333, 0.5],
  [10100.0, 0.5, 0.5],
  [7300.0, 0.5, 0.07142857142857142],
  [15900.0, 0.07142857142857142, 0.5],
  [17500.0, 0.5, 0.5],
  [10800.0, 0.5, 0.045454545454545456],
  [35200.0, 0.045454545454545456, 0.07142857142857142],
  [7600.0, 0.07142857142857142, 0.07142857142857142],
  [5100.0, 0.07142857142857142, 0.5],
  [12700.0, 0.5, 0.5],
  [5800.0, 0.5, 0.08333333333333333],
  [8400.0, 0.08333333333333333, 0.5],
  [11300.0, 0.5, 0.5],
  [5200.0, 0.5, 0.25],
  [11700.0, 0.25, 0.25],
  [3600.0, 0.25, 0.08333333333333333],
  [13200.0, 0.08333333333333333, 0.5],
  [33400.0, 0.5, 0.5],
  [25100.0, 0.5, 0.16666666666666666],
  [5700.0, 0.16666666666666666, 0.08333333333333333],
  [7000.0, 0.08333333333333333, 0.08333333333333333],
  [21800.0, 0.08333333333333333, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
