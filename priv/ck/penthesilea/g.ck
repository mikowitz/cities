[
  [11500.0, 0.0, 0.0],
  [7400.0, 0.0, 0.08571428571428572],
  [13500.0, 0.08571428571428572, 0.14285714285714285],
  [4400.0, 0.14285714285714285, 0.08163265306122448],
  [800.0, 0.08163265306122448, 0.14285714285714285],
  [8400.0, 0.14285714285714285, 0.023809523809523808],
  [14300.0, 0.023809523809523808, 0.14285714285714285],
  [1300.0, 0.14285714285714285, 0.03571428571428571],
  [14500.0, 0.03571428571428571, 0.02040816326530612],
  [3200.0, 0.02040816326530612, 0.14285714285714285],
  [84000.0, 0.14285714285714285, 0.02040816326530612],
  [600.0, 0.02040816326530612, 0.07142857142857142],
  [17300.0, 0.07142857142857142, 0.09523809523809523],
  [87100.0, 0.09523809523809523, 0.14285714285714285],
  [6100.0, 0.14285714285714285, 0.12698412698412698],
  [4100.0, 0.12698412698412698, 0.1142857142857143],
  [8200.0, 0.1142857142857143, 0.14285714285714285],
  [13000.0, 0.14285714285714285, 0.061224489795918366],
  [28100.0, 0.061224489795918366, 0.08571428571428572],
  [600.0, 0.08571428571428572, 0.04081632653061224],
  [41100.0, 0.04081632653061224, 0.05102040816326531],
  [80800.0, 0.05102040816326531, 0.08571428571428572],
  [54200.0, 0.08571428571428572, 0.02040816326530612],
  [18500.0, 0.02040816326530612, 0.14285714285714285],
  [36900.0, 0.14285714285714285, 0.08571428571428572],
  [600.0, 0.08571428571428572, 0.025974025974025976],
  [1800.0, 0.025974025974025976, 0.03896103896103896],
  [37700.0, 0.03896103896103896, 0.07792207792207792],
  [11600.0, 0.07792207792207792, 0.03571428571428571],
  [4400.0, 0.03571428571428571, 0.14285714285714285],
  [2300.0, 0.14285714285714285, 0.028571428571428574],
  [4300.0, 0.028571428571428574, 0.14285714285714285],
  [11900.0, 0.14285714285714285, 0.10714285714285714],
  [34400.0, 0.10714285714285714, 0.14285714285714285],
  [6800.0, 0.14285714285714285, 0.05714285714285715],
  [12900.0, 0.05714285714285715, 0.14285714285714285],
  [6100.0, 0.14285714285714285, 0.03571428571428571],
  [7300.0, 0.03571428571428571, 0.08571428571428572],
  [17000.0, 0.08571428571428572, 0.09523809523809523],
  [6800.0, 0.09523809523809523, 0.028571428571428574],
  [31300.0, 0.028571428571428574, 0.14285714285714285],
  [16700.0, 0.14285714285714285, 0.13095238095238096],
  [32800.0, 0.13095238095238096, 0.07936507936507937],
  [3000.0, 0.07936507936507937, 0.07142857142857142],
  [10500.0, 0.07142857142857142, 0.03571428571428571],
  [24300.0, 0.03571428571428571, 0.047619047619047616],
  [21900.0, 0.047619047619047616, 0.07142857142857142],
  [2200.0, 0.07142857142857142, 0.08928571428571429],
  [3100.0, 0.08928571428571429, 0.14285714285714285],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
