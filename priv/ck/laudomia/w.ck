[
  [17200.0, 0.0, 0.0],
  [84000.0, 0.0, 0.008695652173913044],
  [1700.0, 0.008695652173913044, 0.010869565217391304],
  [14500.0, 0.010869565217391304, 0.043478260869565216],
  [17700.0, 0.043478260869565216, 0.024844720496894408],
  [14400.0, 0.024844720496894408, 0.008695652173913044],
  [5400.0, 0.008695652173913044, 0.010869565217391304],
  [13200.0, 0.010869565217391304, 0.043478260869565216],
  [2100.0, 0.043478260869565216, 0.004347826086956522],
  [29000.0, 0.004347826086956522, 0.02608695652173913],
  [29000.0, 0.02608695652173913, 0.00966183574879227],
  [47500.0, 0.00966183574879227, 0.024844720496894408],
  [143700.0, 0.024844720496894408, 0.02898550724637681],
  [44900.0, 0.02898550724637681, 0.010869565217391304],
  [29400.0, 0.010869565217391304, 0.014492753623188404],
  [66700.0, 0.014492753623188404, 0.008695652173913044],
  [49200.0, 0.008695652173913044, 0.024154589371980676],
  [64400.0, 0.024154589371980676, 0.008695652173913044],
  [700.0, 0.008695652173913044, 0.024844720496894408],
  [32600.0, 0.024844720496894408, 0.010869565217391304],
  [24900.0, 0.010869565217391304, 0.010869565217391304],
  [88700.0, 0.010869565217391304, 0.02898550724637681],
  [16600.0, 0.02898550724637681, 0.043478260869565216],
  [17600.0, 0.043478260869565216, 0.021739130434782608],
  [8900.0, 0.021739130434782608, 0.014492753623188404],
  [24300.0, 0.014492753623188404, 0.010869565217391304],
  [10200.0, 0.010869565217391304, 0.008695652173913044],
  [4200.0, 0.008695652173913044, 0.008695652173913044],
  [7100.0, 0.008695652173913044, 0.043478260869565216],
  [128100.0, 0.043478260869565216, 0.02898550724637681],
  [14900.0, 0.02898550724637681, 0.02898550724637681],
  [91400.0, 0.02898550724637681, 0.008695652173913044],
  [38400.0, 0.008695652173913044, 0.010869565217391304],
  [8900.0, 0.010869565217391304, 0.010869565217391304],
  [43400.0, 0.010869565217391304, 0.014492753623188404],
  [9000.0, 0.014492753623188404, 0.010869565217391304],
  [8500.0, 0.010869565217391304, 0.010869565217391304],
  [7100.0, 0.010869565217391304, 0.010869565217391304],
  [8100.0, 0.010869565217391304, 0.008695652173913044],
  [2300.0, 0.008695652173913044, 0.010869565217391304],
  [18800.0, 0.010869565217391304, 0.043478260869565216],
  [28400.0, 0.043478260869565216, 0.010869565217391304],
  [7500.0, 0.010869565217391304, 0.02898550724637681],
  [13200.0, 0.02898550724637681, 0.008695652173913044],
  [21900.0, 0.008695652173913044, 0.024844720496894408],
  [20000.0, 0.024844720496894408, 0.010869565217391304],
  [9900.0, 0.010869565217391304, 0.008695652173913044],
  [3900.0, 0.008695652173913044, 0.006211180124223602],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.7 => p.pan;
2300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
