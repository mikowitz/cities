[
  [0.0, 0.0, 0.0],
  [8900.0, 0.0, 0.06666666666666667],
  [4600.0, 0.06666666666666667, 0.2],
  [12000.0, 0.2, 0.06666666666666667],
  [6600.0, 0.06666666666666667, 0.2],
  [13800.0, 0.2, 0.05],
  [12100.0, 0.05, 0.2],
  [5600.0, 0.2, 0.2],
  [11700.0, 0.2, 0.13333333333333333],
  [5200.0, 0.13333333333333333, 0.06666666666666667],
  [16900.0, 0.06666666666666667, 0.2],
  [23700.0, 0.2, 0.2],
  [8700.0, 0.2, 0.2],
  [7700.0, 0.2, 0.06666666666666667],
  [6400.0, 0.06666666666666667, 0.2],
  [4700.0, 0.2, 0.2],
  [200.0, 0.2, 0.2],
  [6400.0, 0.2, 0.06666666666666667],
  [15600.0, 0.06666666666666667, 0.06666666666666667],
  [26400.0, 0.06666666666666667, 0.2],
  [68000.0, 0.2, 0.2],
  [61500.0, 0.2, 0.2],
  [9500.0, 0.2, 0.06666666666666667],
  [42800.0, 0.06666666666666667, 0.2],
  [300.0, 0.2, 0.2],
  [4000.0, 0.2, 0.1],
  [8300.0, 0.1, 0.2],
  [200.0, 0.2, 0.2],
  [4600.0, 0.2, 0.04],
  [9100.0, 0.04, 0.2],
  [15700.0, 0.2, 0.2],
  [22000.0, 0.2, 0.2],
  [800.0, 0.2, 0.2],
  [7800.0, 0.2, 0.2],
  [2200.0, 0.2, 0.06666666666666667],
  [33000.0, 0.06666666666666667, 0.06666666666666667],
  [15100.0, 0.06666666666666667, 0.2],
  [32200.0, 0.2, 0.2],
  [2800.0, 0.2, 0.2],
  [11100.0, 0.2, 0.2],
  [11000.0, 0.2, 0.2],
  [28100.0, 0.2, 0.2],
  [41400.0, 0.2, 0.2],
  [1600.0, 0.2, 0.06666666666666667],
  [9500.0, 0.06666666666666667, 0.2],
  [3800.0, 0.2, 0.2],
  [8800.0, 0.2, 0.2],
  [20300.0, 0.2, 0.06666666666666667],
  [20800.0, 0.06666666666666667, 0.1],
  [16800.0, 0.1, 0.2],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.85 => p.pan;
2500.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
