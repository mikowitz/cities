[
  [15100.0, 0.0, 0.0],
  [6100.0, 0.0, 0.08333333333333333],
  [9600.0, 0.08333333333333333, 0.041666666666666664],
  [17400.0, 0.041666666666666664, 0.16666666666666666],
  [1800.0, 0.16666666666666666, 0.03333333333333333],
  [4900.0, 0.03333333333333333, 0.19999999999999998],
  [6800.0, 0.19999999999999998, 0.16666666666666666],
  [3700.0, 0.16666666666666666, 0.08333333333333333],
  [4800.0, 0.08333333333333333, 0.25],
  [7800.0, 0.25, 0.25],
  [3800.0, 0.25, 0.1111111111111111],
  [17600.0, 0.1111111111111111, 0.20833333333333334],
  [6400.0, 0.20833333333333334, 0.2380952380952381],
  [17500.0, 0.2380952380952381, 0.041666666666666664],
  [19300.0, 0.041666666666666664, 0.1111111111111111],
  [300.0, 0.1111111111111111, 0.19047619047619047],
  [18100.0, 0.19047619047619047, 0.2857142857142857],
  [9800.0, 0.2857142857142857, 0.25],
  [9300.0, 0.25, 0.06666666666666667],
  [25100.0, 0.06666666666666667, 0.2222222222222222],
  [47400.0, 0.2222222222222222, 0.06666666666666667],
  [18600.0, 0.06666666666666667, 0.03333333333333333],
  [3000.0, 0.03333333333333333, 0.05555555555555555],
  [700.0, 0.05555555555555555, 0.041666666666666664],
  [42400.0, 0.041666666666666664, 0.16666666666666666],
  [19000.0, 0.16666666666666666, 0.1111111111111111],
  [5500.0, 0.1111111111111111, 0.25],
  [30100.0, 0.25, 0.25],
  [25400.0, 0.25, 0.027777777777777776],
  [81500.0, 0.027777777777777776, 0.05555555555555555],
  [16400.0, 0.05555555555555555, 0.19047619047619047],
  [28000.0, 0.19047619047619047, 0.06666666666666667],
  [300.0, 0.06666666666666667, 0.16666666666666666],
  [10400.0, 0.16666666666666666, 0.25],
  [12100.0, 0.25, 0.05555555555555555],
  [1700.0, 0.05555555555555555, 0.20833333333333334],
  [7300.0, 0.20833333333333334, 0.26666666666666666],
  [9000.0, 0.26666666666666666, 0.16666666666666666],
  [7800.0, 0.16666666666666666, 0.25],
  [8400.0, 0.25, 0.041666666666666664],
  [4200.0, 0.041666666666666664, 0.09523809523809523],
  [17300.0, 0.09523809523809523, 0.19047619047619047],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
