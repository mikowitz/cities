[
  [2600.0, 0.0, 0.0],
  [24300.0, 0.0, 0.05555555555555555],
  [14000.0, 0.05555555555555555, 0.047619047619047616],
  [5200.0, 0.047619047619047616, 0.25],
  [16700.0, 0.25, 0.1111111111111111],
  [1700.0, 0.1111111111111111, 0.08333333333333333],
  [18000.0, 0.08333333333333333, 0.06666666666666667],
  [29700.0, 0.06666666666666667, 0.16666666666666666],
  [5700.0, 0.16666666666666666, 0.08333333333333333],
  [3600.0, 0.08333333333333333, 0.030303030303030304],
  [38700.0, 0.030303030303030304, 0.24242424242424243],
  [36900.0, 0.24242424242424243, 0.16666666666666666],
  [2600.0, 0.16666666666666666, 0.047619047619047616],
  [3200.0, 0.047619047619047616, 0.08333333333333333],
  [9700.0, 0.08333333333333333, 0.030303030303030304],
  [14000.0, 0.030303030303030304, 0.027777777777777776],
  [12100.0, 0.027777777777777776, 0.19999999999999998],
  [800.0, 0.19999999999999998, 0.037037037037037035],
  [5500.0, 0.037037037037037035, 0.2222222222222222],
  [18400.0, 0.2222222222222222, 0.06666666666666667],
  [22400.0, 0.06666666666666667, 0.041666666666666664],
  [23500.0, 0.041666666666666664, 0.08333333333333333],
  [10200.0, 0.08333333333333333, 0.26666666666666666],
  [44200.0, 0.26666666666666666, 0.26666666666666666],
  [10200.0, 0.26666666666666666, 0.14285714285714285],
  [11400.0, 0.14285714285714285, 0.14285714285714285],
  [6200.0, 0.14285714285714285, 0.041666666666666664],
  [200.0, 0.041666666666666664, 0.08333333333333333],
  [2600.0, 0.08333333333333333, 0.125],
  [34400.0, 0.125, 0.1111111111111111],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
