[
  [4400.0, 0.0, 0.0],
  [7300.0, 0.0, 0.08333333333333333],
  [15100.0, 0.08333333333333333, 0.05555555555555555],
  [900.0, 0.05555555555555555, 0.2962962962962963],
  [7500.0, 0.2962962962962963, 0.25],
  [8200.0, 0.25, 0.26666666666666666],
  [1700.0, 0.26666666666666666, 0.05555555555555555],
  [8400.0, 0.05555555555555555, 0.2777777777777778],
  [7200.0, 0.2777777777777778, 0.26666666666666666],
  [46600.0, 0.26666666666666666, 0.2916666666666667],
  [14600.0, 0.2916666666666667, 0.25],
  [15700.0, 0.25, 0.125],
  [67700.0, 0.125, 0.2857142857142857],
  [8100.0, 0.2857142857142857, 0.05555555555555555],
  [13000.0, 0.05555555555555555, 0.041666666666666664],
  [23200.0, 0.041666666666666664, 0.037037037037037035],
  [5900.0, 0.037037037037037035, 0.25],
  [17900.0, 0.25, 0.1111111111111111],
  [3400.0, 0.1111111111111111, 0.26666666666666666],
  [5500.0, 0.26666666666666666, 0.2222222222222222],
  [20000.0, 0.2222222222222222, 0.08333333333333333],
  [17600.0, 0.08333333333333333, 0.16666666666666666],
  [8600.0, 0.16666666666666666, 0.2857142857142857],
  [5700.0, 0.2857142857142857, 0.19444444444444445],
  [5700.0, 0.19444444444444445, 0.08333333333333333],
  [12000.0, 0.08333333333333333, 0.2380952380952381],
  [15800.0, 0.2380952380952381, 0.10256410256410257],
  [12500.0, 0.10256410256410257, 0.19047619047619047],
  [32200.0, 0.19047619047619047, 0.08333333333333333],
  [36600.0, 0.08333333333333333, 0.027777777777777776],
  [8300.0, 0.027777777777777776, 0.19047619047619047],
  [7200.0, 0.19047619047619047, 0.26666666666666666],
  [3400.0, 0.26666666666666666, 0.05555555555555555],
  [1300.0, 0.05555555555555555, 0.05555555555555555],
  [11000.0, 0.05555555555555555, 0.03333333333333333],
  [5200.0, 0.03333333333333333, 0.041666666666666664],
  [2000.0, 0.041666666666666664, 0.06666666666666667],
  [1200.0, 0.06666666666666667, 0.030303030303030304],
  [4400.0, 0.030303030303030304, 0.1818181818181818],
  [20200.0, 0.1818181818181818, 0.2380952380952381],
  [9200.0, 0.2380952380952381, 0.14285714285714285],
  [27700.0, 0.14285714285714285, 0.047619047619047616],
  [13700.0, 0.047619047619047616, 0.2222222222222222],
  [56800.0, 0.2222222222222222, 0.1111111111111111],
  [24400.0, 0.1111111111111111, 0.25],
  [1700.0, 0.25, 0.08333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
