[
  [1000.0, 0.0, 0.0],
  [20700.0, 0.0, 0.02564102564102564],
  [21500.0, 0.02564102564102564, 0.07692307692307693],
  [15000.0, 0.07692307692307693, 0.019230769230769232],
  [64100.0, 0.019230769230769232, 0.02564102564102564],
  [19800.0, 0.02564102564102564, 0.04395604395604395],
  [400.0, 0.04395604395604395, 0.013986013986013986],
  [26800.0, 0.013986013986013986, 0.020979020979020976],
  [11600.0, 0.020979020979020976, 0.03296703296703297],
  [3700.0, 0.03296703296703297, 0.07692307692307693],
  [5200.0, 0.07692307692307693, 0.057692307692307696],
  [7800.0, 0.057692307692307696, 0.0673076923076923],
  [6600.0, 0.0673076923076923, 0.02564102564102564],
  [4100.0, 0.02564102564102564, 0.019230769230769232],
  [21500.0, 0.019230769230769232, 0.019230769230769232],
  [39400.0, 0.019230769230769232, 0.07692307692307693],
  [4000.0, 0.07692307692307693, 0.019230769230769232],
  [21800.0, 0.019230769230769232, 0.038461538461538464],
  [12500.0, 0.038461538461538464, 0.054945054945054944],
  [12900.0, 0.054945054945054944, 0.07692307692307693],
  [45400.0, 0.07692307692307693, 0.06153846153846154],
  [3000.0, 0.06153846153846154, 0.019230769230769232],
  [16800.0, 0.019230769230769232, 0.01282051282051282],
  [500.0, 0.01282051282051282, 0.010989010989010988],
  [39900.0, 0.010989010989010988, 0.03296703296703297],
  [7100.0, 0.03296703296703297, 0.07692307692307693],
  [4100.0, 0.07692307692307693, 0.038461538461538464],
  [3700.0, 0.038461538461538464, 0.07692307692307693],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
