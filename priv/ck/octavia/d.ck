[
  [7100.0, 0.0, 0.0],
  [9900.0, 0.0, 0.5],
  [5500.0, 0.5, 0.2222222222222222],
  [23700.0, 0.2222222222222222, 0.375],
  [2100.0, 0.375, 0.5],
  [9600.0, 0.5, 0.5],
  [3900.0, 0.5, 0.5],
  [8400.0, 0.5, 0.5],
  [27400.0, 0.5, 0.3333333333333333],
  [12100.0, 0.3333333333333333, 0.42857142857142855],
  [1400.0, 0.42857142857142855, 0.25],
  [1400.0, 0.25, 0.4375],
  [2200.0, 0.4375, 0.5],
  [1400.0, 0.5, 0.25],
  [3600.0, 0.25, 0.4375],
  [2200.0, 0.4375, 0.4166666666666667],
  [5100.0, 0.4166666666666667, 0.4],
  [9500.0, 0.4, 0.125],
  [6300.0, 0.125, 0.5],
  [14600.0, 0.5, 0.25],
  [10100.0, 0.25, 0.5],
  [12800.0, 0.5, 0.5],
  [200.0, 0.5, 0.21428571428571427],
  [6700.0, 0.21428571428571427, 0.2857142857142857],
  [14500.0, 0.2857142857142857, 0.375],
  [17100.0, 0.375, 0.25],
  [11100.0, 0.25, 0.045454545454545456],
  [7000.0, 0.045454545454545456, 0.5],
  [8400.0, 0.5, 0.2777777777777778],
  [15600.0, 0.2777777777777778, 0.22727272727272727],
  [300.0, 0.22727272727272727, 0.3888888888888889],
  [40500.0, 0.3888888888888889, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
