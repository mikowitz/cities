[
  [1900.0, 0.0, 0.0],
  [18400.0, 0.0, 0.047619047619047616],
  [6800.0, 0.047619047619047616, 0.25],
  [7300.0, 0.25, 0.26666666666666666],
  [5100.0, 0.26666666666666666, 0.08333333333333333],
  [2600.0, 0.08333333333333333, 0.14285714285714285],
  [34400.0, 0.14285714285714285, 0.05555555555555555],
  [19000.0, 0.05555555555555555, 0.2222222222222222],
  [22600.0, 0.2222222222222222, 0.16666666666666666],
  [12400.0, 0.16666666666666666, 0.06666666666666667],
  [12100.0, 0.06666666666666667, 0.16666666666666666],
  [14000.0, 0.16666666666666666, 0.19999999999999998],
  [4000.0, 0.19999999999999998, 0.047619047619047616],
  [6700.0, 0.047619047619047616, 0.14285714285714285],
  [5100.0, 0.14285714285714285, 0.2857142857142857],
  [10700.0, 0.2857142857142857, 0.047619047619047616],
  [8600.0, 0.047619047619047616, 0.2777777777777778],
  [5500.0, 0.2777777777777778, 0.047619047619047616],
  [11900.0, 0.047619047619047616, 0.03333333333333333],
  [15800.0, 0.03333333333333333, 0.047619047619047616],
  [2000.0, 0.047619047619047616, 0.041666666666666664],
  [3600.0, 0.041666666666666664, 0.25],
  [400.0, 0.25, 0.26666666666666666],
  [16100.0, 0.26666666666666666, 0.05555555555555555],
  [16600.0, 0.05555555555555555, 0.2222222222222222],
  [24200.0, 0.2222222222222222, 0.06666666666666667],
  [5500.0, 0.06666666666666667, 0.16666666666666666],
  [20300.0, 0.16666666666666666, 0.03333333333333333],
  [29700.0, 0.03333333333333333, 0.2777777777777778],
  [4600.0, 0.2777777777777778, 0.047619047619047616],
  [7800.0, 0.047619047619047616, 0.06666666666666667],
  [42700.0, 0.06666666666666667, 0.2333333333333333],
  [61900.0, 0.2333333333333333, 0.037037037037037035],
  [8600.0, 0.037037037037037035, 0.26666666666666666],
  [15900.0, 0.26666666666666666, 0.25925925925925924],
  [200.0, 0.25925925925925924, 0.14285714285714285],
  [33700.0, 0.14285714285714285, 0.19047619047619047],
  [1500.0, 0.19047619047619047, 0.041666666666666664],
  [63400.0, 0.041666666666666664, 0.16666666666666666],
  [14100.0, 0.16666666666666666, 0.05555555555555555],
  [55900.0, 0.05555555555555555, 0.2333333333333333],
  [11000.0, 0.2333333333333333, 0.3333333333333333],
  [7100.0, 0.3333333333333333, 0.03333333333333333],
  [21500.0, 0.03333333333333333, 0.1851851851851852],
  [19600.0, 0.1851851851851852, 0.05555555555555555],
  [25200.0, 0.05555555555555555, 0.08333333333333333],
  [3000.0, 0.08333333333333333, 0.06666666666666667],
  [8600.0, 0.06666666666666667, 0.041666666666666664],
  [30000.0, 0.041666666666666664, 0.25],
  [1600.0, 0.25, 0.16666666666666666],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
