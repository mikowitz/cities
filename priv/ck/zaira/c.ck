[
  [16700.0, 0.0, 0.0],
  [5200.0, 0.0, 0.16666666666666666],
  [8600.0, 0.16666666666666666, 0.08333333333333333],
  [29500.0, 0.08333333333333333, 0.06666666666666667],
  [1000.0, 0.06666666666666667, 0.14285714285714285],
  [9100.0, 0.14285714285714285, 0.05555555555555555],
  [500.0, 0.05555555555555555, 0.3333333333333333],
  [1000.0, 0.3333333333333333, 0.1111111111111111],
  [25800.0, 0.1111111111111111, 0.06666666666666667],
  [3600.0, 0.06666666666666667, 0.08333333333333333],
  [23600.0, 0.08333333333333333, 0.047619047619047616],
  [18700.0, 0.047619047619047616, 0.26666666666666666],
  [44600.0, 0.26666666666666666, 0.2916666666666667],
  [3100.0, 0.2916666666666667, 0.125],
  [11100.0, 0.125, 0.05555555555555555],
  [22200.0, 0.05555555555555555, 0.13333333333333333],
  [17200.0, 0.13333333333333333, 0.047619047619047616],
  [30900.0, 0.047619047619047616, 0.08333333333333333],
  [9500.0, 0.08333333333333333, 0.26666666666666666],
  [33500.0, 0.26666666666666666, 0.08333333333333333],
  [56100.0, 0.08333333333333333, 0.25],
  [6100.0, 0.25, 0.047619047619047616],
  [12400.0, 0.047619047619047616, 0.25],
  [12800.0, 0.25, 0.08333333333333333],
  [13700.0, 0.08333333333333333, 0.12121212121212122],
  [8900.0, 0.12121212121212122, 0.047619047619047616],
  [11000.0, 0.047619047619047616, 0.08333333333333333],
  [17900.0, 0.08333333333333333, 0.041666666666666664],
  [56000.0, 0.041666666666666664, 0.047619047619047616],
  [1900.0, 0.047619047619047616, 0.07407407407407407],
  [7000.0, 0.07407407407407407, 0.2222222222222222],
  [2100.0, 0.2222222222222222, 0.09523809523809523],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
