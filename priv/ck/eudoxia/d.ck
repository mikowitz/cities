[
  [2500.0, 0.0, 0.0],
  [5900.0, 0.0, 0.21428571428571427],
  [4400.0, 0.21428571428571427, 0.42857142857142855],
  [1100.0, 0.42857142857142855, 0.5],
  [200.0, 0.5, 0.5],
  [5000.0, 0.5, 0.125],
  [5000.0, 0.125, 0.2857142857142857],
  [500.0, 0.2857142857142857, 0.125],
  [1000.0, 0.125, 0.5],
  [8700.0, 0.5, 0.375],
  [30900.0, 0.375, 0.5],
  [5300.0, 0.5, 0.21428571428571427],
  [7400.0, 0.21428571428571427, 0.08333333333333333],
  [18200.0, 0.08333333333333333, 0.5],
  [7300.0, 0.5, 0.5],
  [20600.0, 0.5, 0.5],
  [14100.0, 0.5, 0.5],
  [14500.0, 0.5, 0.5],
  [12600.0, 0.5, 0.5],
  [12600.0, 0.5, 0.5],
  [7400.0, 0.5, 0.45454545454545453],
  [8500.0, 0.45454545454545453, 0.5],
  [8700.0, 0.5, 0.5],
  [300.0, 0.5, 0.375],
  [2800.0, 0.375, 0.5],
  [6800.0, 0.5, 0.08333333333333333],
  [2000.0, 0.08333333333333333, 0.5],
  [20400.0, 0.5, 0.3333333333333333],
  [3800.0, 0.3333333333333333, 0.05],
  [14500.0, 0.05, 0.5],
  [27600.0, 0.5, 0.1875],
  [66400.0, 0.1875, 0.2857142857142857],
  [10400.0, 0.2857142857142857, 0.08333333333333333],
  [10800.0, 0.08333333333333333, 0.21428571428571427],
  [28500.0, 0.21428571428571427, 0.5],
  [7900.0, 0.5, 0.25],
  [5400.0, 0.25, 0.5],
  [20400.0, 0.5, 0.375],
  [12900.0, 0.375, 0.045454545454545456],
  [12400.0, 0.045454545454545456, 0.21428571428571427],
  [20100.0, 0.21428571428571427, 0.3],
  [4100.0, 0.3, 0.5],
  [2000.0, 0.5, 0.5],
  [28600.0, 0.5, 0.5],
  [8700.0, 0.5, 0.5],
  [5000.0, 0.5, 0.5],
  [10100.0, 0.5, 0.05],
  [14000.0, 0.05, 0.5],
  [6500.0, 0.5, 0.5],
  [7400.0, 0.5, 0.375],
  [10800.0, 0.375, 0.5],
  [34700.0, 0.5, 0.4166666666666667],
  [18100.0, 0.4166666666666667, 0.5],
  [16000.0, 0.5, 0.08333333333333333],
  [19100.0, 0.08333333333333333, 0.5],
  [29900.0, 0.5, 0.5],
  [12700.0, 0.5, 0.21428571428571427],
  [8300.0, 0.21428571428571427, 0.42857142857142855],
  [17100.0, 0.42857142857142855, 0.5],
  [1500.0, 0.5, 0.5],
  [800.0, 0.5, 0.4166666666666667],
  [9500.0, 0.4166666666666667, 0.125],
  [3100.0, 0.125, 0.0625],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
