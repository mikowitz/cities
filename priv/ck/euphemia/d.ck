[
  [1900.0, 0.0, 0.0],
  [15700.0, 0.0, 0.35],
  [30000.0, 0.35, 0.5],
  [7800.0, 0.5, 0.5],
  [12300.0, 0.5, 0.4],
  [11000.0, 0.4, 0.5],
  [1800.0, 0.5, 0.5],
  [9100.0, 0.5, 0.5],
  [1900.0, 0.5, 0.5],
  [1400.0, 0.5, 0.4],
  [10300.0, 0.4, 0.5],
  [300.0, 0.5, 0.375],
  [5900.0, 0.375, 0.5],
  [7600.0, 0.5, 0.5],
  [7000.0, 0.5, 0.42857142857142855],
  [200.0, 0.42857142857142855, 0.15],
  [6400.0, 0.15, 0.2],
  [17100.0, 0.2, 0.3333333333333333],
  [11400.0, 0.3333333333333333, 0.08333333333333333],
  [2200.0, 0.08333333333333333, 0.5],
  [19700.0, 0.5, 0.07142857142857142],
  [2000.0, 0.07142857142857142, 0.5],
  [13300.0, 0.5, 0.5],
  [1200.0, 0.5, 0.4166666666666667],
  [2700.0, 0.4166666666666667, 0.5],
  [11300.0, 0.5, 0.42857142857142855],
  [12500.0, 0.42857142857142855, 0.5],
  [18700.0, 0.5, 0.4],
  [8000.0, 0.4, 0.5],
  [8900.0, 0.5, 0.16666666666666666],
  [10000.0, 0.16666666666666666, 0.25],
  [16600.0, 0.25, 0.5],
  [4700.0, 0.5, 0.5],
  [11000.0, 0.5, 0.5],
  [10000.0, 0.5, 0.5],
  [13200.0, 0.5, 0.5],
  [200.0, 0.5, 0.25],
  [36700.0, 0.25, 0.3333333333333333],
  [12600.0, 0.3333333333333333, 0.5],
  [55600.0, 0.5, 0.5],
  [37100.0, 0.5, 0.05555555555555555],
  [300.0, 0.05555555555555555, 0.3333333333333333],
  [5800.0, 0.3333333333333333, 0.5],
  [5400.0, 0.5, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
