[
  [2200.0, 0.0, 0.0],
  [2300.0, 0.0, 0.16666666666666666],
  [11800.0, 0.16666666666666666, 0.25],
  [1500.0, 0.25, 0.5],
  [1200.0, 0.5, 0.3333333333333333],
  [1300.0, 0.3333333333333333, 0.3333333333333333],
  [2800.0, 0.3333333333333333, 0.375],
  [12600.0, 0.375, 0.0625],
  [1300.0, 0.0625, 0.2],
  [5200.0, 0.2, 0.1875],
  [8500.0, 0.1875, 0.2],
  [2200.0, 0.2, 0.39285714285714285],
  [4800.0, 0.39285714285714285, 0.13636363636363635],
  [1200.0, 0.13636363636363635, 0.375],
  [2400.0, 0.375, 0.375],
  [2000.0, 0.375, 0.375],
  [7700.0, 0.375, 0.2],
  [900.0, 0.2, 0.16666666666666666],
  [19000.0, 0.16666666666666666, 0.3333333333333333],
  [3300.0, 0.3333333333333333, 0.1875],
  [10800.0, 0.1875, 0.25],
  [9300.0, 0.25, 0.16666666666666666],
  [1500.0, 0.16666666666666666, 0.16666666666666666],
  [8200.0, 0.16666666666666666, 0.21428571428571427],
  [8100.0, 0.21428571428571427, 0.375],
  [1900.0, 0.375, 0.25],
  [3300.0, 0.25, 0.21428571428571427],
  [8400.0, 0.21428571428571427, 0.2],
  [3200.0, 0.2, 0.1875],
  [4400.0, 0.1875, 0.16666666666666666],
  [3800.0, 0.16666666666666666, 0.14285714285714285],
  [4500.0, 0.14285714285714285, 0.3125],
  [700.0, 0.3125, 0.375],
  [1100.0, 0.375, 0.25],
  [9800.0, 0.25, 0.16666666666666666],
  [6500.0, 0.16666666666666666, 0.3125],
  [2300.0, 0.3125, 0.05],
  [900.0, 0.05, 0.35],
  [4900.0, 0.35, 0.05555555555555555],
  [7600.0, 0.05555555555555555, 0.3333333333333333],
  [5500.0, 0.3333333333333333, 0.2],
  [9700.0, 0.2, 0.3],
  [7400.0, 0.3, 0.1],
  [3200.0, 0.1, 0.25],
  [7700.0, 0.25, 0.16666666666666666],
  [1200.0, 0.16666666666666666, 0.3333333333333333],
  [3000.0, 0.3333333333333333, 0.3333333333333333],
  [9600.0, 0.3333333333333333, 0.2],
  [18400.0, 0.2, 0.07142857142857142],
  [9600.0, 0.07142857142857142, 0.25],
  [6200.0, 0.25, 0.1],
  [2900.0, 0.1, 0.3333333333333333],
  [5000.0, 0.3333333333333333, 0.16666666666666666],
  [3800.0, 0.16666666666666666, 0.3333333333333333],
  [4900.0, 0.3333333333333333, 0.16666666666666666],
  [11800.0, 0.16666666666666666, 0.25],
  [700.0, 0.25, 0.5],
  [2900.0, 0.5, 0.1875],
  [5200.0, 0.1875, 0.25],
  [1100.0, 0.25, 0.16666666666666666],
  [600.0, 0.16666666666666666, 0.16666666666666666],
  [7800.0, 0.16666666666666666, 0.08333333333333333],
  [3400.0, 0.08333333333333333, 0.16666666666666666],
  [16200.0, 0.16666666666666666, 0.14285714285714285],
  [6700.0, 0.14285714285714285, 0.3333333333333333],
  [2300.0, 0.3333333333333333, 0.16666666666666666],
  [1300.0, 0.16666666666666666, 0.14285714285714285],
  [300.0, 0.14285714285714285, 0.2857142857142857],
  [6600.0, 0.2857142857142857, 0.42857142857142855],
  [2500.0, 0.42857142857142855, 0.3],
  [10600.0, 0.3, 0.375],
  [4500.0, 0.375, 0.4090909090909091],
  [1300.0, 0.4090909090909091, 0.2857142857142857],
  [2300.0, 0.2857142857142857, 0.16666666666666666],
  [1300.0, 0.16666666666666666, 0.14285714285714285],
  [300.0, 0.14285714285714285, 0.2857142857142857],
  [10700.0, 0.2857142857142857, 0.42857142857142855],
  [6100.0, 0.42857142857142855, 0.25],
  [2000.0, 0.25, 0.25],
  [6200.0, 0.25, 0.375],
  [9200.0, 0.375, 0.375],
  [200.0, 0.375, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.93 => p.pan;
100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
