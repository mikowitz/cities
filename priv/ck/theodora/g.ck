[
  [44000.0, 0.0, 0.0],
  [5300.0, 0.0, 0.023809523809523808],
  [33200.0, 0.023809523809523808, 0.10714285714285714],
  [74300.0, 0.10714285714285714, 0.07792207792207792],
  [10600.0, 0.07792207792207792, 0.07142857142857142],
  [10000.0, 0.07142857142857142, 0.14285714285714285],
  [9400.0, 0.14285714285714285, 0.14285714285714285],
  [9100.0, 0.14285714285714285, 0.03571428571428571],
  [12200.0, 0.03571428571428571, 0.1142857142857143],
  [13100.0, 0.1142857142857143, 0.07692307692307691],
  [23800.0, 0.07692307692307691, 0.14285714285714285],
  [8000.0, 0.14285714285714285, 0.07142857142857142],
  [15300.0, 0.07142857142857142, 0.08571428571428572],
  [13200.0, 0.08571428571428572, 0.014285714285714287],
  [12300.0, 0.014285714285714287, 0.10204081632653061],
  [6200.0, 0.10204081632653061, 0.03571428571428571],
  [3800.0, 0.03571428571428571, 0.08163265306122448],
  [44200.0, 0.08163265306122448, 0.08163265306122448],
  [23300.0, 0.08163265306122448, 0.14285714285714285],
  [13900.0, 0.14285714285714285, 0.047619047619047616],
  [9200.0, 0.047619047619047616, 0.14285714285714285],
  [10700.0, 0.14285714285714285, 0.028571428571428574],
  [28200.0, 0.028571428571428574, 0.08163265306122448],
  [32800.0, 0.08163265306122448, 0.028571428571428574],
  [65200.0, 0.028571428571428574, 0.14285714285714285],
  [3800.0, 0.14285714285714285, 0.06349206349206349],
  [3700.0, 0.06349206349206349, 0.14285714285714285],
  [10500.0, 0.14285714285714285, 0.06349206349206349],
  [6500.0, 0.06349206349206349, 0.14285714285714285],
  [2300.0, 0.14285714285714285, 0.125],
  [3900.0, 0.125, 0.07936507936507937],
  [8200.0, 0.07936507936507937, 0.14285714285714285],
  [28600.0, 0.14285714285714285, 0.14285714285714285],
  [4100.0, 0.14285714285714285, 0.14285714285714285],
  [26300.0, 0.14285714285714285, 0.08571428571428572],
  [16000.0, 0.08571428571428572, 0.14285714285714285],
  [10100.0, 0.14285714285714285, 0.14285714285714285],
  [9300.0, 0.14285714285714285, 0.017857142857142856],
  [27000.0, 0.017857142857142856, 0.08163265306122448],
  [9000.0, 0.08163265306122448, 0.14285714285714285],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
