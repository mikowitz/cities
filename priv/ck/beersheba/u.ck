[
  [14600.0, 0.0, 0.0],
  [27900.0, 0.0, 0.031746031746031744],
  [59200.0, 0.031746031746031744, 0.10204081632653061],
  [27100.0, 0.10204081632653061, 0.07142857142857142],
  [4400.0, 0.07142857142857142, 0.12244897959183673],
  [1800.0, 0.12244897959183673, 0.12698412698412698],
  [5700.0, 0.12698412698412698, 0.08571428571428572],
  [12700.0, 0.08571428571428572, 0.08928571428571429],
  [5000.0, 0.08928571428571429, 0.12244897959183673],
  [23100.0, 0.12244897959183673, 0.10714285714285714],
  [13000.0, 0.10714285714285714, 0.03571428571428571],
  [1200.0, 0.03571428571428571, 0.05714285714285715],
  [13400.0, 0.05714285714285715, 0.08571428571428572],
  [15900.0, 0.08571428571428572, 0.08928571428571429],
  [22500.0, 0.08928571428571429, 0.11111111111111112],
  [4700.0, 0.11111111111111112, 0.012987012987012988],
  [12600.0, 0.012987012987012988, 0.1168831168831169],
  [58400.0, 0.1168831168831169, 0.017857142857142856],
  [4700.0, 0.017857142857142856, 0.012987012987012988],
  [6200.0, 0.012987012987012988, 0.1168831168831169],
  [4000.0, 0.1168831168831169, 0.08571428571428572],
  [23400.0, 0.08571428571428572, 0.04081632653061224],
  [22700.0, 0.04081632653061224, 0.02040816326530612],
  [18800.0, 0.02040816326530612, 0.031746031746031744],
  [15800.0, 0.031746031746031744, 0.08571428571428572],
  [3100.0, 0.08571428571428572, 0.08571428571428572],
  [9600.0, 0.08571428571428572, 0.05714285714285715],
  [13900.0, 0.05714285714285715, 0.028571428571428574],
  [16100.0, 0.028571428571428574, 0.023809523809523808],
  [4700.0, 0.023809523809523808, 0.04081632653061224],
  [31800.0, 0.04081632653061224, 0.03571428571428571],
  [11500.0, 0.03571428571428571, 0.08571428571428572],
  [27800.0, 0.08571428571428572, 0.10714285714285714],
  [11100.0, 0.10714285714285714, 0.09523809523809523],
  [21100.0, 0.09523809523809523, 0.1142857142857143],
  [15000.0, 0.1142857142857143, 0.04081632653061224],
  [10500.0, 0.04081632653061224, 0.02197802197802198],
  [32300.0, 0.02197802197802198, 0.05714285714285715],
  [39900.0, 0.05714285714285715, 0.025974025974025976],
  [17600.0, 0.025974025974025976, 0.07142857142857142],
  [33400.0, 0.07142857142857142, 0.11904761904761905],
  [62300.0, 0.11904761904761905, 0.125],
  [10100.0, 0.125, 0.10714285714285714],
  [9800.0, 0.10714285714285714, 0.07142857142857142],
  [24600.0, 0.07142857142857142, 0.015873015873015872],
  [7900.0, 0.015873015873015872, 0.09523809523809523],
  [69700.0, 0.09523809523809523, 0.08928571428571429],
  [6100.0, 0.08928571428571429, 0.06493506493506493],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.56 => p.pan;
2100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
