[
  [9500.0, 0.0, 0.0],
  [3800.0, 0.0, 0.5],
  [4700.0, 0.5, 0.5],
  [10000.0, 0.5, 0.125],
  [10400.0, 0.125, 0.3],
  [13600.0, 0.3, 0.16666666666666666],
  [3100.0, 0.16666666666666666, 0.5],
  [1800.0, 0.5, 0.5],
  [13700.0, 0.5, 0.07142857142857142],
  [1400.0, 0.07142857142857142, 0.42857142857142855],
  [10300.0, 0.42857142857142855, 0.5],
  [4900.0, 0.5, 0.3333333333333333],
  [9400.0, 0.3333333333333333, 0.125],
  [7300.0, 0.125, 0.5],
  [2300.0, 0.5, 0.2222222222222222],
  [23600.0, 0.2222222222222222, 0.2],
  [10100.0, 0.2, 0.08333333333333333],
  [31900.0, 0.08333333333333333, 0.5],
  [2300.0, 0.5, 0.375],
  [8800.0, 0.375, 0.3333333333333333],
  [8100.0, 0.3333333333333333, 0.08333333333333333],
  [3000.0, 0.08333333333333333, 0.4],
  [4700.0, 0.4, 0.13636363636363635],
  [4800.0, 0.13636363636363635, 0.5],
  [7100.0, 0.5, 0.3333333333333333],
  [13100.0, 0.3333333333333333, 0.375],
  [300.0, 0.375, 0.3888888888888889],
  [9600.0, 0.3888888888888889, 0.5],
  [16600.0, 0.5, 0.25],
  [12000.0, 0.25, 0.2],
  [4100.0, 0.2, 0.2857142857142857],
  [3700.0, 0.2857142857142857, 0.3333333333333333],
  [3700.0, 0.3333333333333333, 0.2222222222222222],
  [8600.0, 0.2222222222222222, 0.125],
  [33100.0, 0.125, 0.05555555555555555],
  [11600.0, 0.05555555555555555, 0.5],
  [6400.0, 0.5, 0.35714285714285715],
  [22300.0, 0.35714285714285715, 0.2777777777777778],
  [22700.0, 0.2777777777777778, 0.08333333333333333],
  [17200.0, 0.08333333333333333, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
