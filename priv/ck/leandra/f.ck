[
  [1300.0, 0.0, 0.0],
  [8500.0, 0.0, 0.3333333333333333],
  [28600.0, 0.3333333333333333, 0.3333333333333333],
  [22900.0, 0.3333333333333333, 0.3333333333333333],
  [2000.0, 0.3333333333333333, 0.05555555555555555],
  [21200.0, 0.05555555555555555, 0.041666666666666664],
  [18000.0, 0.041666666666666664, 0.3333333333333333],
  [13300.0, 0.3333333333333333, 0.13333333333333333],
  [15500.0, 0.13333333333333333, 0.08333333333333333],
  [31900.0, 0.08333333333333333, 0.05555555555555555],
  [10500.0, 0.05555555555555555, 0.16666666666666666],
  [12300.0, 0.16666666666666666, 0.3333333333333333],
  [12100.0, 0.3333333333333333, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.3333333333333333],
  [1100.0, 0.3333333333333333, 0.06666666666666667],
  [800.0, 0.06666666666666667, 0.19999999999999998],
  [14300.0, 0.19999999999999998, 0.041666666666666664],
  [12400.0, 0.041666666666666664, 0.06666666666666667],
  [21800.0, 0.06666666666666667, 0.3333333333333333],
  [74300.0, 0.3333333333333333, 0.06666666666666667],
  [6600.0, 0.06666666666666667, 0.05555555555555555],
  [17300.0, 0.05555555555555555, 0.08333333333333333],
  [1600.0, 0.08333333333333333, 0.19999999999999998],
  [29000.0, 0.19999999999999998, 0.1111111111111111],
  [29000.0, 0.1111111111111111, 0.3333333333333333],
  [13800.0, 0.3333333333333333, 0.1111111111111111],
  [12300.0, 0.1111111111111111, 0.3333333333333333],
  [1500.0, 0.3333333333333333, 0.08333333333333333],
  [9200.0, 0.08333333333333333, 0.3333333333333333],
  [14900.0, 0.3333333333333333, 0.08333333333333333],
  [6500.0, 0.08333333333333333, 0.27272727272727276],
  [7700.0, 0.27272727272727276, 0.3333333333333333],
  [17200.0, 0.3333333333333333, 0.3333333333333333],
  [67400.0, 0.3333333333333333, 0.3333333333333333],
  [16200.0, 0.3333333333333333, 0.08333333333333333],
  [41600.0, 0.08333333333333333, 0.16666666666666666],
  [41600.0, 0.16666666666666666, 0.05555555555555555],
  [2200.0, 0.05555555555555555, 0.05555555555555555],
  [14800.0, 0.05555555555555555, 0.3333333333333333],
  [26000.0, 0.3333333333333333, 0.16666666666666666],
  [10700.0, 0.16666666666666666, 0.3333333333333333],
  [33000.0, 0.3333333333333333, 0.05555555555555555],
  [8400.0, 0.05555555555555555, 0.3333333333333333],
  [5500.0, 0.3333333333333333, 0.3333333333333333],
  [18300.0, 0.3333333333333333, 0.1851851851851852],
  [25500.0, 0.1851851851851852, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.14285714285714285],
  [14600.0, 0.14285714285714285, 0.19047619047619047],
  [4600.0, 0.19047619047619047, 0.19047619047619047],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
