[
  [4300.0, 0.0, 0.0],
  [3000.0, 0.0, 0.3333333333333333],
  [8600.0, 0.3333333333333333, 0.3333333333333333],
  [4900.0, 0.3333333333333333, 0.25925925925925924],
  [29700.0, 0.25925925925925924, 0.047619047619047616],
  [9300.0, 0.047619047619047616, 0.3333333333333333],
  [47100.0, 0.3333333333333333, 0.1851851851851852],
  [23900.0, 0.1851851851851852, 0.26666666666666666],
  [26300.0, 0.26666666666666666, 0.08333333333333333],
  [12500.0, 0.08333333333333333, 0.041666666666666664],
  [17600.0, 0.041666666666666664, 0.08333333333333333],
  [32300.0, 0.08333333333333333, 0.2222222222222222],
  [2800.0, 0.2222222222222222, 0.08333333333333333],
  [22200.0, 0.08333333333333333, 0.06666666666666667],
  [8200.0, 0.06666666666666667, 0.3333333333333333],
  [11200.0, 0.3333333333333333, 0.3333333333333333],
  [3000.0, 0.3333333333333333, 0.3333333333333333],
  [42100.0, 0.3333333333333333, 0.25],
  [200.0, 0.25, 0.1111111111111111],
  [2800.0, 0.1111111111111111, 0.14814814814814814],
  [26600.0, 0.14814814814814814, 0.08333333333333333],
  [1700.0, 0.08333333333333333, 0.3333333333333333],
  [29100.0, 0.3333333333333333, 0.06666666666666667],
  [66200.0, 0.06666666666666667, 0.2333333333333333],
  [29000.0, 0.2333333333333333, 0.06666666666666667],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
