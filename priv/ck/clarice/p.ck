[
  [34600.0, 0.0, 0.0],
  [12200.0, 0.0, 0.2857142857142857],
  [6000.0, 0.2857142857142857, 0.125],
  [3400.0, 0.125, 0.125],
  [7700.0, 0.125, 0.25],
  [31800.0, 0.25, 0.07142857142857142],
  [2400.0, 0.07142857142857142, 0.21428571428571427],
  [11200.0, 0.21428571428571427, 0.07142857142857142],
  [23600.0, 0.07142857142857142, 0.3],
  [300.0, 0.3, 0.2857142857142857],
  [1400.0, 0.2857142857142857, 0.35714285714285715],
  [20900.0, 0.35714285714285715, 0.5],
  [400.0, 0.5, 0.05555555555555555],
  [56200.0, 0.05555555555555555, 0.16666666666666666],
  [30100.0, 0.16666666666666666, 0.1],
  [7500.0, 0.1, 0.16666666666666666],
  [17400.0, 0.16666666666666666, 0.1],
  [14900.0, 0.1, 0.5],
  [43200.0, 0.5, 0.07142857142857142],
  [28100.0, 0.07142857142857142, 0.16666666666666666],
  [32300.0, 0.16666666666666666, 0.4],
  [24000.0, 0.4, 0.125],
  [300.0, 0.125, 0.09090909090909091],
  [1500.0, 0.09090909090909091, 0.13636363636363635],
  [20700.0, 0.13636363636363635, 0.2727272727272727],
  [13000.0, 0.2727272727272727, 0.07142857142857142],
  [50300.0, 0.07142857142857142, 0.2222222222222222],
  [500.0, 0.2222222222222222, 0.08333333333333333],
  [46800.0, 0.08333333333333333, 0.3333333333333333],
  [5600.0, 0.3333333333333333, 0.25],
  [36400.0, 0.25, 0.1],
  [10200.0, 0.1, 0.21428571428571427],
  [3300.0, 0.21428571428571427, 0.2857142857142857],
  [28600.0, 0.2857142857142857, 0.1],
  [14200.0, 0.1, 0.35714285714285715],
  [8300.0, 0.35714285714285715, 0.125],
  [21200.0, 0.125, 0.25],
  [14000.0, 0.25, 0.05555555555555555],
  [29600.0, 0.05555555555555555, 0.2857142857142857],
  [500.0, 0.2857142857142857, 0.08333333333333333],
  [48900.0, 0.08333333333333333, 0.3333333333333333],
  [400.0, 0.3333333333333333, 0.045454545454545456],
  [38300.0, 0.045454545454545456, 0.13636363636363635],
  [56900.0, 0.13636363636363635, 0.2857142857142857],
  [4700.0, 0.2857142857142857, 0.1875],
  [31800.0, 0.1875, 0.5],
  [300.0, 0.5, 0.16666666666666666],
  [28400.0, 0.16666666666666666, 0.2222222222222222],
  [9800.0, 0.2222222222222222, 0.1875],
  [33900.0, 0.1875, 0.1111111111111111],
  [9600.0, 0.1111111111111111, 0.3],
  [3700.0, 0.3, 0.08333333333333333],
  [300.0, 0.08333333333333333, 0.21428571428571427],
  [4600.0, 0.21428571428571427, 0.2857142857142857],
  [22300.0, 0.2857142857142857, 0.1875],
  [10700.0, 0.1875, 0.2857142857142857],
  [45100.0, 0.2857142857142857, 0.07142857142857142],
  [10400.0, 0.07142857142857142, 0.2],
  [19800.0, 0.2, 0.1875],
  [2200.0, 0.1875, 0.07142857142857142],
  [14300.0, 0.07142857142857142, 0.42857142857142855],
  [300.0, 0.42857142857142855, 0.2857142857142857],
  [10300.0, 0.2857142857142857, 0.35714285714285715],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
