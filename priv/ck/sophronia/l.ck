[
  [12100.0, 0.0, 0.0],
  [13700.0, 0.0, 0.09999999999999999],
  [200.0, 0.09999999999999999, 0.16666666666666666],
  [14700.0, 0.16666666666666666, 0.2222222222222222],
  [13200.0, 0.2222222222222222, 0.3333333333333333],
  [21500.0, 0.3333333333333333, 0.3333333333333333],
  [8900.0, 0.3333333333333333, 0.23076923076923075],
  [13200.0, 0.23076923076923075, 0.13333333333333333],
  [4200.0, 0.13333333333333333, 0.2777777777777778],
  [8300.0, 0.2777777777777778, 0.125],
  [13700.0, 0.125, 0.2777777777777778],
  [2300.0, 0.2777777777777778, 0.14285714285714285],
  [7900.0, 0.14285714285714285, 0.047619047619047616],
  [1500.0, 0.047619047619047616, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.2222222222222222],
  [6000.0, 0.2222222222222222, 0.3333333333333333],
  [39400.0, 0.3333333333333333, 0.09999999999999999],
  [8400.0, 0.09999999999999999, 0.2962962962962963],
  [8300.0, 0.2962962962962963, 0.1794871794871795],
  [5100.0, 0.1794871794871795, 0.08333333333333333],
  [19700.0, 0.08333333333333333, 0.125],
  [4000.0, 0.125, 0.2380952380952381],
  [4700.0, 0.2380952380952381, 0.06666666666666667],
  [200.0, 0.06666666666666667, 0.19999999999999998],
  [3900.0, 0.19999999999999998, 0.26666666666666666],
  [18900.0, 0.26666666666666666, 0.16666666666666666],
  [9600.0, 0.16666666666666666, 0.2222222222222222],
  [200.0, 0.2222222222222222, 0.3333333333333333],
  [5500.0, 0.3333333333333333, 0.08333333333333333],
  [2500.0, 0.08333333333333333, 0.20833333333333334],
  [200.0, 0.20833333333333334, 0.16666666666666666],
  [12000.0, 0.16666666666666666, 0.2222222222222222],
  [13000.0, 0.2222222222222222, 0.3333333333333333],
  [10300.0, 0.3333333333333333, 0.07692307692307693],
  [200.0, 0.07692307692307693, 0.21568627450980393],
  [7600.0, 0.21568627450980393, 0.23529411764705885],
  [13600.0, 0.23529411764705885, 0.2962962962962963],
  [2800.0, 0.2962962962962963, 0.20833333333333334],
  [200.0, 0.20833333333333334, 0.16666666666666666],
  [34400.0, 0.16666666666666666, 0.2222222222222222],
  [800.0, 0.2222222222222222, 0.20833333333333334],
  [7700.0, 0.20833333333333334, 0.08333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.11 => p.pan;
1200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
