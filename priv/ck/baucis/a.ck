[
  [0.0, 0.0, 0.0],
  [2000.0, 0.0, 0.1],
  [1700.0, 0.1, 0.5],
  [1100.0, 0.5, 0.25],
  [6800.0, 0.25, 0.2],
  [3600.0, 0.2, 0.375],
  [5700.0, 0.375, 0.1875],
  [1800.0, 0.1875, 0.3333333333333333],
  [2600.0, 0.3333333333333333, 0.16666666666666666],
  [5300.0, 0.16666666666666666, 0.16666666666666666],
  [2900.0, 0.16666666666666666, 0.16666666666666666],
  [500.0, 0.16666666666666666, 0.3333333333333333],
  [10800.0, 0.3333333333333333, 0.07142857142857142],
  [9300.0, 0.07142857142857142, 0.375],
  [600.0, 0.375, 0.25],
  [2000.0, 0.25, 0.5],
  [2400.0, 0.5, 0.4],
  [3900.0, 0.4, 0.3125],
  [3100.0, 0.3125, 0.07142857142857142],
  [1100.0, 0.07142857142857142, 0.16666666666666666],
  [3000.0, 0.16666666666666666, 0.16666666666666666],
  [16300.0, 0.16666666666666666, 0.1],
  [10500.0, 0.1, 0.14285714285714285],
  [1800.0, 0.14285714285714285, 0.18181818181818182],
  [2700.0, 0.18181818181818182, 0.36363636363636365],
  [5900.0, 0.36363636363636365, 0.16666666666666666],
  [2500.0, 0.16666666666666666, 0.16666666666666666],
  [1600.0, 0.16666666666666666, 0.07142857142857142],
  [29100.0, 0.07142857142857142, 0.35714285714285715],
  [6900.0, 0.35714285714285715, 0.2],
  [10700.0, 0.2, 0.1875],
  [3800.0, 0.1875, 0.16666666666666666],
  [700.0, 0.16666666666666666, 0.25],
  [4100.0, 0.25, 0.16666666666666666],
  [3100.0, 0.16666666666666666, 0.5],
  [2500.0, 0.5, 0.07142857142857142],
  [2100.0, 0.07142857142857142, 0.42857142857142855],
  [1600.0, 0.42857142857142855, 0.25],
  [800.0, 0.25, 0.375],
  [4100.0, 0.375, 0.2],
  [3100.0, 0.2, 0.35714285714285715],
  [6400.0, 0.35714285714285715, 0.16666666666666666],
  [4900.0, 0.16666666666666666, 0.1],
  [1800.0, 0.1, 0.18181818181818182],
  [2200.0, 0.18181818181818182, 0.36363636363636365],
  [3300.0, 0.36363636363636365, 0.16666666666666666],
  [2300.0, 0.16666666666666666, 0.375],
  [1800.0, 0.375, 0.25],
  [3100.0, 0.25, 0.2],
  [9100.0, 0.2, 0.375],
  [1500.0, 0.375, 0.1],
  [2000.0, 0.1, 0.16666666666666666],
  [1700.0, 0.16666666666666666, 0.35714285714285715],
  [3600.0, 0.35714285714285715, 0.375],
  [2000.0, 0.375, 0.25],
  [5800.0, 0.25, 0.3333333333333333],
  [4700.0, 0.3333333333333333, 0.16666666666666666],
  [1200.0, 0.16666666666666666, 0.3],
  [3200.0, 0.3, 0.16666666666666666],
  [3200.0, 0.16666666666666666, 0.1],
  [7900.0, 0.1, 0.375],
  [6000.0, 0.375, 0.16666666666666666],
  [1200.0, 0.16666666666666666, 0.375],
  [4100.0, 0.375, 0.375],
  [1800.0, 0.375, 0.16666666666666666],
  [3700.0, 0.16666666666666666, 0.16666666666666666],
  [5000.0, 0.16666666666666666, 0.34615384615384615],
  [2300.0, 0.34615384615384615, 0.09090909090909091],
  [6300.0, 0.09090909090909091, 0.3181818181818182],
  [1900.0, 0.3181818181818182, 0.07142857142857142],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.93 => p.pan;
100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
