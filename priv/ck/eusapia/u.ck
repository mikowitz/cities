[
  [11200.0, 0.0, 0.0],
  [21300.0, 0.0, 0.04081632653061224],
  [11700.0, 0.04081632653061224, 0.09523809523809523],
  [12200.0, 0.09523809523809523, 0.09090909090909091],
  [4700.0, 0.09090909090909091, 0.012987012987012988],
  [9100.0, 0.012987012987012988, 0.1168831168831169],
  [29700.0, 0.1168831168831169, 0.07142857142857142],
  [44800.0, 0.07142857142857142, 0.125],
  [23300.0, 0.125, 0.09523809523809523],
  [2600.0, 0.09523809523809523, 0.05357142857142857],
  [15400.0, 0.05357142857142857, 0.09523809523809523],
  [9800.0, 0.09523809523809523, 0.04081632653061224],
  [57900.0, 0.04081632653061224, 0.09523809523809523],
  [1900.0, 0.09523809523809523, 0.031746031746031744],
  [16300.0, 0.031746031746031744, 0.11111111111111112],
  [19600.0, 0.11111111111111112, 0.08571428571428572],
  [18100.0, 0.08571428571428572, 0.05357142857142857],
  [4600.0, 0.05357142857142857, 0.05357142857142857],
  [11300.0, 0.05357142857142857, 0.08571428571428572],
  [40500.0, 0.08571428571428572, 0.07142857142857142],
  [15400.0, 0.07142857142857142, 0.04081632653061224],
  [2900.0, 0.04081632653061224, 0.031746031746031744],
  [71400.0, 0.031746031746031744, 0.04285714285714286],
  [13000.0, 0.04285714285714286, 0.04081632653061224],
  [60400.0, 0.04081632653061224, 0.1142857142857143],
  [3800.0, 0.1142857142857143, 0.04081632653061224],
  [13400.0, 0.04081632653061224, 0.05714285714285715],
  [4200.0, 0.05714285714285715, 0.09523809523809523],
  [3800.0, 0.09523809523809523, 0.125],
  [15800.0, 0.125, 0.07142857142857142],
  [7100.0, 0.07142857142857142, 0.031746031746031744],
  [33300.0, 0.031746031746031744, 0.04081632653061224],
  [19700.0, 0.04081632653061224, 0.04081632653061224],
  [1500.0, 0.04081632653061224, 0.09523809523809523],
  [4700.0, 0.09523809523809523, 0.047619047619047616],
  [25300.0, 0.047619047619047616, 0.08571428571428572],
  [6200.0, 0.08571428571428572, 0.04081632653061224],
  [12900.0, 0.04081632653061224, 0.01020408163265306],
  [22800.0, 0.01020408163265306, 0.07142857142857142],
  [8600.0, 0.07142857142857142, 0.1142857142857143],
  [15100.0, 0.1142857142857143, 0.04081632653061224],
  [4700.0, 0.04081632653061224, 0.012987012987012988],
  [10600.0, 0.012987012987012988, 0.1168831168831169],
  [3500.0, 0.1168831168831169, 0.07142857142857142],
  [4900.0, 0.07142857142857142, 0.1142857142857143],
  [6400.0, 0.1142857142857143, 0.07142857142857142],
  [3300.0, 0.07142857142857142, 0.05714285714285715],
  [2700.0, 0.05714285714285715, 0.028571428571428574],
  [43200.0, 0.028571428571428574, 0.04081632653061224],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.56 => p.pan;
2100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
