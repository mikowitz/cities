[
  [3500.0, 0.0, 0.0],
  [22100.0, 0.0, 0.05555555555555555],
  [2400.0, 0.05555555555555555, 0.08333333333333333],
  [5400.0, 0.08333333333333333, 0.16666666666666666],
  [52300.0, 0.16666666666666666, 0.3333333333333333],
  [13000.0, 0.3333333333333333, 0.3333333333333333],
  [27100.0, 0.3333333333333333, 0.3333333333333333],
  [6900.0, 0.3333333333333333, 0.3333333333333333],
  [41200.0, 0.3333333333333333, 0.06666666666666667],
  [6700.0, 0.06666666666666667, 0.3333333333333333],
  [3600.0, 0.3333333333333333, 0.08333333333333333],
  [29200.0, 0.08333333333333333, 0.3333333333333333],
  [7900.0, 0.3333333333333333, 0.3333333333333333],
  [5600.0, 0.3333333333333333, 0.05555555555555555],
  [2400.0, 0.05555555555555555, 0.05555555555555555],
  [12600.0, 0.05555555555555555, 0.3333333333333333],
  [7100.0, 0.3333333333333333, 0.1111111111111111],
  [200.0, 0.1111111111111111, 0.3333333333333333],
  [5800.0, 0.3333333333333333, 0.08333333333333333],
  [34000.0, 0.08333333333333333, 0.08333333333333333],
  [19500.0, 0.08333333333333333, 0.3333333333333333],
  [400.0, 0.3333333333333333, 0.3333333333333333],
  [7900.0, 0.3333333333333333, 0.08333333333333333],
  [4400.0, 0.08333333333333333, 0.3333333333333333],
  [25900.0, 0.3333333333333333, 0.05555555555555555],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
