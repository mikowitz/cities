[
  [10700.0, 0.0, 0.0],
  [14700.0, 0.0, 0.25],
  [7000.0, 0.25, 0.3333333333333333],
  [10300.0, 0.3333333333333333, 0.3333333333333333],
  [3900.0, 0.3333333333333333, 0.3333333333333333],
  [6900.0, 0.3333333333333333, 0.3333333333333333],
  [5000.0, 0.3333333333333333, 0.3333333333333333],
  [12000.0, 0.3333333333333333, 0.3333333333333333],
  [7700.0, 0.3333333333333333, 0.2222222222222222],
  [1200.0, 0.2222222222222222, 0.3333333333333333],
  [2400.0, 0.3333333333333333, 0.25],
  [11200.0, 0.25, 0.3333333333333333],
  [26000.0, 0.3333333333333333, 0.25],
  [6200.0, 0.25, 0.3333333333333333],
  [3500.0, 0.3333333333333333, 0.25],
  [2000.0, 0.25, 0.25],
  [4100.0, 0.25, 0.3333333333333333],
  [2000.0, 0.3333333333333333, 0.5],
  [2800.0, 0.5, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.3333333333333333],
  [4100.0, 0.3333333333333333, 0.3333333333333333],
  [1000.0, 0.3333333333333333, 0.5],
  [2100.0, 0.5, 0.3],
  [2000.0, 0.3, 0.16666666666666666],
  [13800.0, 0.16666666666666666, 0.5],
  [8200.0, 0.5, 0.3333333333333333],
  [3900.0, 0.3333333333333333, 0.3333333333333333],
  [11700.0, 0.3333333333333333, 0.3333333333333333],
  [7400.0, 0.3333333333333333, 0.3333333333333333],
  [7000.0, 0.3333333333333333, 0.1111111111111111],
  [21300.0, 0.1111111111111111, 0.1],
  [12900.0, 0.1, 0.2],
  [19100.0, 0.2, 0.2],
  [12900.0, 0.2, 0.16666666666666666],
  [4200.0, 0.16666666666666666, 0.2],
  [16900.0, 0.2, 0.08333333333333333],
  [2600.0, 0.08333333333333333, 0.3333333333333333],
  [1900.0, 0.3333333333333333, 0.2777777777777778],
  [10900.0, 0.2777777777777778, 0.16666666666666666],
  [7500.0, 0.16666666666666666, 0.08333333333333333],
  [5800.0, 0.08333333333333333, 0.3333333333333333],
  [16600.0, 0.3333333333333333, 0.2],
  [4600.0, 0.2, 0.25],
  [7400.0, 0.25, 0.35714285714285715],
  [900.0, 0.35714285714285715, 0.3333333333333333],
  [4900.0, 0.3333333333333333, 0.14285714285714285],
  [1100.0, 0.14285714285714285, 0.5],
  [4200.0, 0.5, 0.2],
  [20500.0, 0.2, 0.25],
  [1600.0, 0.25, 0.07692307692307693],
  [13200.0, 0.07692307692307693, 0.3076923076923077],
  [2300.0, 0.3076923076923077, 0.3333333333333333],
  [10300.0, 0.3333333333333333, 0.3333333333333333],
  [5000.0, 0.3333333333333333, 0.3333333333333333],
  [8500.0, 0.3333333333333333, 0.3333333333333333],
  [1000.0, 0.3333333333333333, 0.3888888888888889],
  [1700.0, 0.3888888888888889, 0.25],
  [30100.0, 0.25, 0.3333333333333333],
  [7700.0, 0.3333333333333333, 0.16666666666666666],
  [19300.0, 0.16666666666666666, 0.2],
  [1100.0, 0.2, 0.16666666666666666],
  [8000.0, 0.16666666666666666, 0.4166666666666667],
  [9100.0, 0.4166666666666667, 0.3333333333333333],
  [4100.0, 0.3333333333333333, 0.25],
  [2400.0, 0.25, 0.25],
  [14600.0, 0.25, 0.16666666666666666],
  [3300.0, 0.16666666666666666, 0.3333333333333333],
  [7900.0, 0.3333333333333333, 0.3333333333333333],
  [700.0, 0.3333333333333333, 0.5],
  [13300.0, 0.5, 0.16666666666666666],
  [21400.0, 0.16666666666666666, 0.2],
  [5500.0, 0.2, 0.3333333333333333],
  [10600.0, 0.3333333333333333, 0.16666666666666666],
  [7300.0, 0.16666666666666666, 0.3333333333333333],
  [8300.0, 0.3333333333333333, 0.3333333333333333],
  [3600.0, 0.3333333333333333, 0.3333333333333333],
  [700.0, 0.3333333333333333, 0.5],
  [8700.0, 0.5, 0.16666666666666666],
  [1900.0, 0.16666666666666666, 0.3],
  [10200.0, 0.3, 0.14285714285714285],
  [3300.0, 0.14285714285714285, 0.3333333333333333],
  [3800.0, 0.3333333333333333, 0.3333333333333333],
  [7200.0, 0.3333333333333333, 0.3333333333333333],
  [3900.0, 0.3333333333333333, 0.3333333333333333],
  [800.0, 0.3333333333333333, 0.3333333333333333],
  [9300.0, 0.3333333333333333, 0.1111111111111111],
  [11500.0, 0.1111111111111111, 0.13636363636363635],
  [18400.0, 0.13636363636363635, 0.5],
  [9500.0, 0.5, 0.25],
  [6900.0, 0.25, 0.3333333333333333],
  [14600.0, 0.3333333333333333, 0.3333333333333333],
  [3700.0, 0.3333333333333333, 0.25],
  [9300.0, 0.25, 0.3333333333333333],
  [5000.0, 0.3333333333333333, 0.1],
  [5800.0, 0.1, 0.3333333333333333],
  [2700.0, 0.3333333333333333, 0.3333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.41 => p.pan;
800.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
