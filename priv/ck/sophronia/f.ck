[
  [2800.0, 0.0, 0.0],
  [7700.0, 0.0, 0.3333333333333333],
  [1800.0, 0.3333333333333333, 0.3333333333333333],
  [37000.0, 0.3333333333333333, 0.13333333333333333],
  [4900.0, 0.13333333333333333, 0.05555555555555555],
  [31900.0, 0.05555555555555555, 0.3333333333333333],
  [15800.0, 0.3333333333333333, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.16666666666666666],
  [13600.0, 0.16666666666666666, 0.3333333333333333],
  [21000.0, 0.3333333333333333, 0.037037037037037035],
  [2100.0, 0.037037037037037035, 0.3333333333333333],
  [22900.0, 0.3333333333333333, 0.13333333333333333],
  [21300.0, 0.13333333333333333, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.2222222222222222],
  [12600.0, 0.2222222222222222, 0.3333333333333333],
  [4200.0, 0.3333333333333333, 0.3333333333333333],
  [53900.0, 0.3333333333333333, 0.16666666666666666],
  [14800.0, 0.16666666666666666, 0.125],
  [1000.0, 0.125, 0.05555555555555555],
  [24700.0, 0.05555555555555555, 0.08333333333333333],
  [4500.0, 0.08333333333333333, 0.10256410256410257],
  [20000.0, 0.10256410256410257, 0.3333333333333333],
  [4800.0, 0.3333333333333333, 0.08333333333333333],
  [27600.0, 0.08333333333333333, 0.3333333333333333],
  [13900.0, 0.3333333333333333, 0.16666666666666666],
  [6600.0, 0.16666666666666666, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
