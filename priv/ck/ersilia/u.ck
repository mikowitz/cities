[
  [17800.0, 0.0, 0.0],
  [29800.0, 0.0, 0.04081632653061224],
  [35000.0, 0.04081632653061224, 0.07142857142857142],
  [15500.0, 0.07142857142857142, 0.031746031746031744],
  [2500.0, 0.031746031746031744, 0.03571428571428571],
  [2900.0, 0.03571428571428571, 0.125],
  [18800.0, 0.125, 0.14285714285714285],
  [17400.0, 0.14285714285714285, 0.07142857142857142],
  [9200.0, 0.07142857142857142, 0.03571428571428571],
  [14100.0, 0.03571428571428571, 0.03571428571428571],
  [8900.0, 0.03571428571428571, 0.047619047619047616],
  [9500.0, 0.047619047619047616, 0.07142857142857142],
  [38100.0, 0.07142857142857142, 0.10714285714285714],
  [26200.0, 0.10714285714285714, 0.08163265306122448],
  [15700.0, 0.08163265306122448, 0.08571428571428572],
  [23100.0, 0.08571428571428572, 0.08163265306122448],
  [8800.0, 0.08163265306122448, 0.07142857142857142],
  [19200.0, 0.07142857142857142, 0.10714285714285714],
  [1600.0, 0.10714285714285714, 0.14285714285714285],
  [4000.0, 0.14285714285714285, 0.03571428571428571],
  [11600.0, 0.03571428571428571, 0.05714285714285715],
  [10300.0, 0.05714285714285715, 0.12244897959183673],
  [33600.0, 0.12244897959183673, 0.12244897959183673],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.56 => p.pan;
2100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
