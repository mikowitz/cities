[
  [10300.0, 0.0, 0.0],
  [14800.0, 0.0, 0.007692307692307693],
  [3200.0, 0.007692307692307693, 0.02564102564102564],
  [58000.0, 0.02564102564102564, 0.02564102564102564],
  [32300.0, 0.02564102564102564, 0.05128205128205128],
  [18500.0, 0.05128205128205128, 0.038461538461538464],
  [6300.0, 0.038461538461538464, 0.04615384615384615],
  [3300.0, 0.04615384615384615, 0.009615384615384616],
  [9600.0, 0.009615384615384616, 0.07692307692307693],
  [83500.0, 0.07692307692307693, 0.054945054945054944],
  [16500.0, 0.054945054945054944, 0.019230769230769232],
  [18600.0, 0.019230769230769232, 0.03296703296703297],
  [21700.0, 0.03296703296703297, 0.07692307692307693],
  [15300.0, 0.07692307692307693, 0.04615384615384615],
  [25200.0, 0.04615384615384615, 0.07692307692307693],
  [5100.0, 0.07692307692307693, 0.07692307692307693],
  [53400.0, 0.07692307692307693, 0.006993006993006993],
  [6100.0, 0.006993006993006993, 0.010989010989010988],
  [5400.0, 0.010989010989010988, 0.06410256410256411],
  [2200.0, 0.06410256410256411, 0.019230769230769232],
  [3800.0, 0.019230769230769232, 0.07692307692307693],
  [11200.0, 0.07692307692307693, 0.019230769230769232],
  [29000.0, 0.019230769230769232, 0.07692307692307693],
  [14900.0, 0.07692307692307693, 0.023076923076923075],
  [17000.0, 0.023076923076923075, 0.04615384615384615],
  [3000.0, 0.04615384615384615, 0.05982905982905983],
  [13900.0, 0.05982905982905983, 0.07692307692307693],
  [11000.0, 0.07692307692307693, 0.05128205128205128],
  [15800.0, 0.05128205128205128, 0.05384615384615384],
  [16700.0, 0.05384615384615384, 0.07692307692307693],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
