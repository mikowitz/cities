[
  [5700.0, 0.0, 0.0],
  [52400.0, 0.0, 0.25],
  [16300.0, 0.25, 0.06666666666666667],
  [28700.0, 0.06666666666666667, 0.08333333333333333],
  [23700.0, 0.08333333333333333, 0.05555555555555555],
  [200.0, 0.05555555555555555, 0.3333333333333333],
  [11600.0, 0.3333333333333333, 0.047619047619047616],
  [12700.0, 0.047619047619047616, 0.3333333333333333],
  [11200.0, 0.3333333333333333, 0.3333333333333333],
  [108000.0, 0.3333333333333333, 0.3333333333333333],
  [12700.0, 0.3333333333333333, 0.3333333333333333],
  [3700.0, 0.3333333333333333, 0.08333333333333333],
  [1900.0, 0.08333333333333333, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.12121212121212122],
  [26800.0, 0.12121212121212122, 0.15151515151515152],
  [30900.0, 0.15151515151515152, 0.3333333333333333],
  [29800.0, 0.3333333333333333, 0.26666666666666666],
  [200.0, 0.26666666666666666, 0.09523809523809523],
  [28800.0, 0.09523809523809523, 0.14285714285714285],
  [10200.0, 0.14285714285714285, 0.05555555555555555],
  [4300.0, 0.05555555555555555, 0.037037037037037035],
  [10100.0, 0.037037037037037035, 0.05555555555555555],
  [1700.0, 0.05555555555555555, 0.06666666666666667],
  [18100.0, 0.06666666666666667, 0.08333333333333333],
  [3100.0, 0.08333333333333333, 0.047619047619047616],
  [18800.0, 0.047619047619047616, 0.047619047619047616],
  [22800.0, 0.047619047619047616, 0.3333333333333333],
  [29600.0, 0.3333333333333333, 0.3333333333333333],
  [58900.0, 0.3333333333333333, 0.1111111111111111],
  [5800.0, 0.1111111111111111, 0.3333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
