[
  [1400.0, 0.0, 0.0],
  [4700.0, 0.0, 0.3],
  [88200.0, 0.3, 0.2],
  [7600.0, 0.2, 0.16666666666666666],
  [2100.0, 0.16666666666666666, 0.2],
  [10400.0, 0.2, 0.1],
  [80800.0, 0.1, 0.22727272727272727],
  [15900.0, 0.22727272727272727, 0.1],
  [24700.0, 0.1, 0.07142857142857142],
  [55600.0, 0.07142857142857142, 0.14285714285714285],
  [15100.0, 0.14285714285714285, 0.1],
  [16200.0, 0.1, 0.125],
  [21500.0, 0.125, 0.25],
  [26100.0, 0.25, 0.08333333333333333],
  [2400.0, 0.08333333333333333, 0.08333333333333333],
  [11200.0, 0.08333333333333333, 0.16666666666666666],
  [10800.0, 0.16666666666666666, 0.2],
  [19600.0, 0.2, 0.16666666666666666],
  [7200.0, 0.16666666666666666, 0.07142857142857142],
  [26700.0, 0.07142857142857142, 0.16666666666666666],
  [143400.0, 0.16666666666666666, 0.07142857142857142],
  [34300.0, 0.07142857142857142, 0.08333333333333333],
  [15700.0, 0.08333333333333333, 0.07142857142857142],
  [11800.0, 0.07142857142857142, 0.16666666666666666],
  [46000.0, 0.16666666666666666, 0.25],
  [31400.0, 0.25, 0.2727272727272727],
  [600.0, 0.2727272727272727, 0.21428571428571427],
  [46700.0, 0.21428571428571427, 0.42857142857142855],
  [7400.0, 0.42857142857142855, 0.125],
  [20300.0, 0.125, 0.16666666666666666],
  [11400.0, 0.16666666666666666, 0.2],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.85 => p.pan;
200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
