[
  [600.0, 0.0, 0.0],
  [7600.0, 0.0, 0.35714285714285715],
  [14300.0, 0.35714285714285715, 0.4],
  [1400.0, 0.4, 0.14285714285714285],
  [2600.0, 0.14285714285714285, 0.35714285714285715],
  [1700.0, 0.35714285714285715, 0.25],
  [2100.0, 0.25, 0.25],
  [2000.0, 0.25, 0.2],
  [15400.0, 0.2, 0.16666666666666666],
  [17600.0, 0.16666666666666666, 0.25],
  [8900.0, 0.25, 0.35714285714285715],
  [1500.0, 0.35714285714285715, 0.375],
  [4700.0, 0.375, 0.25],
  [1100.0, 0.25, 0.25],
  [3800.0, 0.25, 0.375],
  [1200.0, 0.375, 0.14285714285714285],
  [7700.0, 0.14285714285714285, 0.2857142857142857],
  [4000.0, 0.2857142857142857, 0.25],
  [1300.0, 0.25, 0.16666666666666666],
  [4700.0, 0.16666666666666666, 0.3333333333333333],
  [2700.0, 0.3333333333333333, 0.35714285714285715],
  [2700.0, 0.35714285714285715, 0.35714285714285715],
  [1400.0, 0.35714285714285715, 0.375],
  [8400.0, 0.375, 0.25],
  [8700.0, 0.25, 0.2857142857142857],
  [9000.0, 0.2857142857142857, 0.35714285714285715],
  [9700.0, 0.35714285714285715, 0.35714285714285715],
  [5900.0, 0.35714285714285715, 0.20833333333333334],
  [20500.0, 0.20833333333333334, 0.14285714285714285],
  [2500.0, 0.14285714285714285, 0.3],
  [2000.0, 0.3, 0.3],
  [11300.0, 0.3, 0.25],
  [6500.0, 0.25, 0.2857142857142857],
  [3200.0, 0.2857142857142857, 0.2],
  [2200.0, 0.2, 0.35714285714285715],
  [2300.0, 0.35714285714285715, 0.05555555555555555],
  [2900.0, 0.05555555555555555, 0.3333333333333333],
  [4000.0, 0.3333333333333333, 0.375],
  [7900.0, 0.375, 0.3],
  [1400.0, 0.3, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.33 => p.pan;
900.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
