[
  [5900.0, 0.0, 0.0],
  [1000.0, 0.0, 0.3333333333333333],
  [21900.0, 0.3333333333333333, 0.125],
  [3500.0, 0.125, 0.125],
  [2200.0, 0.125, 0.3333333333333333],
  [10400.0, 0.3333333333333333, 0.13636363636363635],
  [3200.0, 0.13636363636363635, 0.1],
  [4500.0, 0.1, 0.3333333333333333],
  [14200.0, 0.3333333333333333, 0.25],
  [8100.0, 0.25, 0.3333333333333333],
  [11700.0, 0.3333333333333333, 0.35714285714285715],
  [6200.0, 0.35714285714285715, 0.3333333333333333],
  [17300.0, 0.3333333333333333, 0.3333333333333333],
  [6300.0, 0.3333333333333333, 0.3333333333333333],
  [3100.0, 0.3333333333333333, 0.35],
  [4100.0, 0.35, 0.25],
  [4100.0, 0.25, 0.3333333333333333],
  [6100.0, 0.3333333333333333, 0.4375],
  [8100.0, 0.4375, 0.3333333333333333],
  [900.0, 0.3333333333333333, 0.5],
  [25700.0, 0.5, 0.3333333333333333],
  [13800.0, 0.3333333333333333, 0.3333333333333333],
  [1600.0, 0.3333333333333333, 0.3333333333333333],
  [2800.0, 0.3333333333333333, 0.4166666666666667],
  [2800.0, 0.4166666666666667, 0.3333333333333333],
  [2400.0, 0.3333333333333333, 0.25],
  [15000.0, 0.25, 0.3333333333333333],
  [2400.0, 0.3333333333333333, 0.25],
  [5100.0, 0.25, 0.3333333333333333],
  [3300.0, 0.3333333333333333, 0.3333333333333333],
  [10400.0, 0.3333333333333333, 0.25],
  [4800.0, 0.25, 0.25],
  [2300.0, 0.25, 0.3333333333333333],
  [800.0, 0.3333333333333333, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.16666666666666666],
  [8600.0, 0.16666666666666666, 0.3333333333333333],
  [4700.0, 0.3333333333333333, 0.3333333333333333],
  [5900.0, 0.3333333333333333, 0.3333333333333333],
  [2400.0, 0.3333333333333333, 0.3333333333333333],
  [4200.0, 0.3333333333333333, 0.07142857142857142],
  [2600.0, 0.07142857142857142, 0.3333333333333333],
  [5000.0, 0.3333333333333333, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.25],
  [5900.0, 0.25, 0.3333333333333333],
  [7700.0, 0.3333333333333333, 0.3333333333333333],
  [3900.0, 0.3333333333333333, 0.3333333333333333],
  [4800.0, 0.3333333333333333, 0.25],
  [9200.0, 0.25, 0.3333333333333333],
  [7500.0, 0.3333333333333333, 0.3333333333333333],
  [5900.0, 0.3333333333333333, 0.35714285714285715],
  [4400.0, 0.35714285714285715, 0.3333333333333333],
  [4800.0, 0.3333333333333333, 0.3333333333333333],
  [1600.0, 0.3333333333333333, 0.3333333333333333],
  [6400.0, 0.3333333333333333, 0.3333333333333333],
  [6000.0, 0.3333333333333333, 0.3333333333333333],
  [6100.0, 0.3333333333333333, 0.3333333333333333],
  [5100.0, 0.3333333333333333, 0.3333333333333333],
  [5000.0, 0.3333333333333333, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.3333333333333333],
  [1500.0, 0.3333333333333333, 0.3333333333333333],
  [3100.0, 0.3333333333333333, 0.20833333333333334],
  [6100.0, 0.20833333333333334, 0.25],
  [13200.0, 0.25, 0.3333333333333333],
  [8600.0, 0.3333333333333333, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.41 => p.pan;
800.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
