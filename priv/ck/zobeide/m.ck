[
  [1400.0, 0.0, 0.0],
  [28100.0, 0.0, 0.07692307692307693],
  [10800.0, 0.07692307692307693, 0.019230769230769232],
  [17300.0, 0.019230769230769232, 0.03076923076923077],
  [15500.0, 0.03076923076923077, 0.02564102564102564],
  [2800.0, 0.02564102564102564, 0.07692307692307693],
  [24700.0, 0.07692307692307693, 0.04615384615384615],
  [16300.0, 0.04615384615384615, 0.07692307692307693],
  [19100.0, 0.07692307692307693, 0.054945054945054944],
  [7700.0, 0.054945054945054944, 0.07692307692307693],
  [41900.0, 0.07692307692307693, 0.07692307692307693],
  [52900.0, 0.07692307692307693, 0.07692307692307693],
  [3000.0, 0.07692307692307693, 0.07692307692307693],
  [41300.0, 0.07692307692307693, 0.07692307692307693],
  [7100.0, 0.07692307692307693, 0.07692307692307693],
  [28600.0, 0.07692307692307693, 0.04615384615384615],
  [4800.0, 0.04615384615384615, 0.019230769230769232],
  [7200.0, 0.019230769230769232, 0.054945054945054944],
  [11000.0, 0.054945054945054944, 0.01282051282051282],
  [6300.0, 0.01282051282051282, 0.02564102564102564],
  [9900.0, 0.02564102564102564, 0.07692307692307693],
  [18500.0, 0.07692307692307693, 0.07692307692307693],
  [5000.0, 0.07692307692307693, 0.02564102564102564],
  [7000.0, 0.02564102564102564, 0.07692307692307693],
  [19800.0, 0.07692307692307693, 0.07692307692307693],
  [1000.0, 0.07692307692307693, 0.04807692307692308],
  [10600.0, 0.04807692307692308, 0.019230769230769232],
  [17200.0, 0.019230769230769232, 0.04615384615384615],
  [39300.0, 0.04615384615384615, 0.038461538461538464],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
