[
  [5500.0, 0.0, 0.0],
  [6100.0, 0.0, 0.08333333333333333],
  [43400.0, 0.08333333333333333, 0.26666666666666666],
  [8700.0, 0.26666666666666666, 0.3333333333333333],
  [3000.0, 0.3333333333333333, 0.14814814814814814],
  [11200.0, 0.14814814814814814, 0.2222222222222222],
  [26600.0, 0.2222222222222222, 0.041666666666666664],
  [30300.0, 0.041666666666666664, 0.03333333333333333],
  [11800.0, 0.03333333333333333, 0.05555555555555555],
  [19200.0, 0.05555555555555555, 0.047619047619047616],
  [24300.0, 0.047619047619047616, 0.08333333333333333],
  [7000.0, 0.08333333333333333, 0.08333333333333333],
  [12300.0, 0.08333333333333333, 0.26666666666666666],
  [200.0, 0.26666666666666666, 0.09999999999999999],
  [18400.0, 0.09999999999999999, 0.13333333333333333],
  [9300.0, 0.13333333333333333, 0.11904761904761905],
  [19200.0, 0.11904761904761905, 0.047619047619047616],
  [14700.0, 0.047619047619047616, 0.16666666666666666],
  [60200.0, 0.16666666666666666, 0.08333333333333333],
  [27000.0, 0.08333333333333333, 0.037037037037037035],
  [8900.0, 0.037037037037037035, 0.16666666666666666],
  [7000.0, 0.16666666666666666, 0.03333333333333333],
  [17700.0, 0.03333333333333333, 0.05555555555555555],
  [7700.0, 0.05555555555555555, 0.05555555555555555],
  [24200.0, 0.05555555555555555, 0.19047619047619047],
  [2600.0, 0.19047619047619047, 0.047619047619047616],
  [20400.0, 0.047619047619047616, 0.041666666666666664],
  [9600.0, 0.041666666666666664, 0.26666666666666666],
  [8100.0, 0.26666666666666666, 0.08333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
