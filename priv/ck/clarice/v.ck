[
  [18300.0, 0.0, 0.0],
  [32700.0, 0.0, 0.03896103896103896],
  [26200.0, 0.03896103896103896, 0.03636363636363637],
  [87200.0, 0.03636363636363637, 0.03636363636363637],
  [1000.0, 0.03636363636363637, 0.0404040404040404],
  [27500.0, 0.0404040404040404, 0.0606060606060606],
  [32800.0, 0.0606060606060606, 0.0606060606060606],
  [27000.0, 0.0606060606060606, 0.018181818181818184],
  [90400.0, 0.018181818181818184, 0.07272727272727274],
  [1000.0, 0.07272727272727274, 0.0404040404040404],
  [13900.0, 0.0404040404040404, 0.0606060606060606],
  [74500.0, 0.0606060606060606, 0.045454545454545456],
  [46400.0, 0.045454545454545456, 0.03896103896103896],
  [90500.0, 0.03896103896103896, 0.022727272727272728],
  [78400.0, 0.022727272727272728, 0.045454545454545456],
  [25700.0, 0.045454545454545456, 0.05454545454545454],
  [14600.0, 0.05454545454545454, 0.0707070707070707],
  [400.0, 0.0707070707070707, 0.01515151515151515],
  [65000.0, 0.01515151515151515, 0.0606060606060606],
  [18600.0, 0.0606060606060606, 0.06818181818181818],
  [3100.0, 0.06818181818181818, 0.06818181818181818],
  [29900.0, 0.06818181818181818, 0.03896103896103896],
  [113800.0, 0.03896103896103896, 0.045454545454545456],
  [71800.0, 0.045454545454545456, 0.05454545454545454],
  [27100.0, 0.05454545454545454, 0.06818181818181818],
  [29800.0, 0.06818181818181818, 0.06818181818181818],
  [15500.0, 0.06818181818181818, 0.05454545454545454],
  [58500.0, 0.05454545454545454, 0.05454545454545454],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.63 => p.pan;
2200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
