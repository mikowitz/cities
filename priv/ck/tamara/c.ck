[
  [33900.0, 0.0, 0.0],
  [28400.0, 0.0, 0.09999999999999999],
  [13500.0, 0.09999999999999999, 0.1851851851851852],
  [8800.0, 0.1851851851851852, 0.25925925925925924],
  [20500.0, 0.25925925925925924, 0.25],
  [24100.0, 0.25, 0.13333333333333333],
  [16600.0, 0.13333333333333333, 0.08333333333333333],
  [40500.0, 0.08333333333333333, 0.26666666666666666],
  [26500.0, 0.26666666666666666, 0.19047619047619047],
  [1000.0, 0.19047619047619047, 0.25],
  [3800.0, 0.25, 0.1111111111111111],
  [9300.0, 0.1111111111111111, 0.19047619047619047],
  [61300.0, 0.19047619047619047, 0.2777777777777778],
  [56200.0, 0.2777777777777778, 0.26666666666666666],
  [17700.0, 0.26666666666666666, 0.047619047619047616],
  [14800.0, 0.047619047619047616, 0.25],
  [2900.0, 0.25, 0.03333333333333333],
  [18100.0, 0.03333333333333333, 0.19999999999999998],
  [2300.0, 0.19999999999999998, 0.1111111111111111],
  [12700.0, 0.1111111111111111, 0.1111111111111111],
  [2600.0, 0.1111111111111111, 0.037037037037037035],
  [29700.0, 0.037037037037037035, 0.2222222222222222],
  [200.0, 0.2222222222222222, 0.08333333333333333],
  [5200.0, 0.08333333333333333, 0.125],
  [7000.0, 0.125, 0.06666666666666667],
  [3500.0, 0.06666666666666667, 0.2857142857142857],
  [4200.0, 0.2857142857142857, 0.20833333333333334],
  [4000.0, 0.20833333333333334, 0.16666666666666666],
  [13800.0, 0.16666666666666666, 0.26666666666666666],
  [9900.0, 0.26666666666666666, 0.1111111111111111],
  [44900.0, 0.1111111111111111, 0.26666666666666666],
  [24400.0, 0.26666666666666666, 0.2916666666666667],
  [9900.0, 0.2916666666666667, 0.16666666666666666],
  [15700.0, 0.16666666666666666, 0.13333333333333333],
  [21800.0, 0.13333333333333333, 0.08333333333333333],
  [23200.0, 0.08333333333333333, 0.14814814814814814],
  [10100.0, 0.14814814814814814, 0.1111111111111111],
  [15500.0, 0.1111111111111111, 0.26666666666666666],
  [11100.0, 0.26666666666666666, 0.08333333333333333],
  [400.0, 0.08333333333333333, 0.26666666666666666],
  [11000.0, 0.26666666666666666, 0.047619047619047616],
  [4400.0, 0.047619047619047616, 0.047619047619047616],
  [1000.0, 0.047619047619047616, 0.047619047619047616],
  [10600.0, 0.047619047619047616, 0.19047619047619047],
  [10600.0, 0.19047619047619047, 0.13333333333333333],
  [16000.0, 0.13333333333333333, 0.2222222222222222],
  [7300.0, 0.2222222222222222, 0.05555555555555555],
  [1600.0, 0.05555555555555555, 0.05555555555555555],
  [6100.0, 0.05555555555555555, 0.2777777777777778],
  [11700.0, 0.2777777777777778, 0.05555555555555555],
  [20100.0, 0.05555555555555555, 0.0909090909090909],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
