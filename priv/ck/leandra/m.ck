[
  [23500.0, 0.0, 0.0],
  [29700.0, 0.0, 0.028846153846153848],
  [5900.0, 0.028846153846153848, 0.019230769230769232],
  [4600.0, 0.019230769230769232, 0.015384615384615385],
  [7800.0, 0.015384615384615385, 0.028846153846153848],
  [5700.0, 0.028846153846153848, 0.03076923076923077],
  [5600.0, 0.03076923076923077, 0.057692307692307696],
  [31600.0, 0.057692307692307696, 0.055944055944055944],
  [5100.0, 0.055944055944055944, 0.04395604395604395],
  [12200.0, 0.04395604395604395, 0.07692307692307693],
  [12200.0, 0.07692307692307693, 0.038461538461538464],
  [26000.0, 0.038461538461538464, 0.038461538461538464],
  [30700.0, 0.038461538461538464, 0.03076923076923077],
  [15900.0, 0.03076923076923077, 0.028846153846153848],
  [12100.0, 0.028846153846153848, 0.007692307692307693],
  [3700.0, 0.007692307692307693, 0.019230769230769232],
  [87900.0, 0.019230769230769232, 0.04615384615384615],
  [400.0, 0.04615384615384615, 0.03296703296703297],
  [2800.0, 0.03296703296703297, 0.04395604395604395],
  [32900.0, 0.04395604395604395, 0.038461538461538464],
  [11400.0, 0.038461538461538464, 0.07692307692307693],
  [11000.0, 0.07692307692307693, 0.07692307692307693],
  [11300.0, 0.07692307692307693, 0.019230769230769232],
  [14400.0, 0.019230769230769232, 0.06593406593406594],
  [4500.0, 0.06593406593406594, 0.019230769230769232],
  [35800.0, 0.019230769230769232, 0.03076923076923077],
  [64600.0, 0.03076923076923077, 0.07692307692307693],
  [3200.0, 0.07692307692307693, 0.07692307692307693],
  [13800.0, 0.07692307692307693, 0.019230769230769232],
  [6800.0, 0.019230769230769232, 0.02564102564102564],
  [25300.0, 0.02564102564102564, 0.013986013986013986],
  [31100.0, 0.013986013986013986, 0.07692307692307693],
  [16000.0, 0.07692307692307693, 0.038461538461538464],
  [400.0, 0.038461538461538464, 0.038461538461538464],
  [9300.0, 0.038461538461538464, 0.05128205128205128],
  [41600.0, 0.05128205128205128, 0.038461538461538464],
  [14600.0, 0.038461538461538464, 0.038461538461538464],
  [14800.0, 0.038461538461538464, 0.055944055944055944],
  [5900.0, 0.055944055944055944, 0.019230769230769232],
  [500.0, 0.019230769230769232, 0.009615384615384616],
  [6300.0, 0.009615384615384616, 0.028846153846153848],
  [36400.0, 0.028846153846153848, 0.07692307692307693],
  [3500.0, 0.07692307692307693, 0.015384615384615385],
  [31300.0, 0.015384615384615385, 0.06410256410256411],
  [8100.0, 0.06410256410256411, 0.07692307692307693],
  [2300.0, 0.07692307692307693, 0.008547008547008546],
  [28100.0, 0.008547008547008546, 0.034188034188034185],
  [11600.0, 0.034188034188034185, 0.038461538461538464],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
