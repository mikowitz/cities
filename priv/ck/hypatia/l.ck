[
  [500.0, 0.0, 0.0],
  [200.0, 0.0, 0.2222222222222222],
  [4100.0, 0.2222222222222222, 0.3333333333333333],
  [5500.0, 0.3333333333333333, 0.041666666666666664],
  [6100.0, 0.041666666666666664, 0.25],
  [7100.0, 0.25, 0.06666666666666667],
  [46400.0, 0.06666666666666667, 0.2777777777777778],
  [6300.0, 0.2777777777777778, 0.25],
  [3100.0, 0.25, 0.14814814814814814],
  [1100.0, 0.14814814814814814, 0.16666666666666666],
  [3500.0, 0.16666666666666666, 0.047619047619047616],
  [9800.0, 0.047619047619047616, 0.16666666666666666],
  [10600.0, 0.16666666666666666, 0.26666666666666666],
  [200.0, 0.26666666666666666, 0.3333333333333333],
  [51500.0, 0.3333333333333333, 0.05555555555555555],
  [14000.0, 0.05555555555555555, 0.25],
  [2600.0, 0.25, 0.16666666666666666],
  [10100.0, 0.16666666666666666, 0.09523809523809523],
  [14000.0, 0.09523809523809523, 0.16666666666666666],
  [15100.0, 0.16666666666666666, 0.19999999999999998],
  [900.0, 0.19999999999999998, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.25],
  [17200.0, 0.25, 0.3333333333333333],
  [11200.0, 0.3333333333333333, 0.13333333333333333],
  [4500.0, 0.13333333333333333, 0.19047619047619047],
  [900.0, 0.19047619047619047, 0.2777777777777778],
  [18000.0, 0.2777777777777778, 0.1111111111111111],
  [1200.0, 0.1111111111111111, 0.26666666666666666],
  [6600.0, 0.26666666666666666, 0.25],
  [10000.0, 0.25, 0.1111111111111111],
  [6200.0, 0.1111111111111111, 0.047619047619047616],
  [3900.0, 0.047619047619047616, 0.08333333333333333],
  [1000.0, 0.08333333333333333, 0.19047619047619047],
  [200.0, 0.19047619047619047, 0.09999999999999999],
  [7300.0, 0.09999999999999999, 0.13333333333333333],
  [200.0, 0.13333333333333333, 0.16666666666666666],
  [7200.0, 0.16666666666666666, 0.2222222222222222],
  [200.0, 0.2222222222222222, 0.125],
  [2000.0, 0.125, 0.16666666666666666],
  [3300.0, 0.16666666666666666, 0.05555555555555555],
  [6300.0, 0.05555555555555555, 0.3333333333333333],
  [6400.0, 0.3333333333333333, 0.07407407407407407],
  [200.0, 0.07407407407407407, 0.19999999999999998],
  [21200.0, 0.19999999999999998, 0.26666666666666666],
  [7000.0, 0.26666666666666666, 0.13333333333333333],
  [6600.0, 0.13333333333333333, 0.13333333333333333],
  [4300.0, 0.13333333333333333, 0.1111111111111111],
  [2300.0, 0.1111111111111111, 0.08333333333333333],
  [31700.0, 0.08333333333333333, 0.13333333333333333],
  [15400.0, 0.13333333333333333, 0.14814814814814814],
  [6500.0, 0.14814814814814814, 0.12121212121212122],
  [8300.0, 0.12121212121212122, 0.08333333333333333],
  [16400.0, 0.08333333333333333, 0.041666666666666664],
  [6400.0, 0.041666666666666664, 0.16666666666666666],
  [26200.0, 0.16666666666666666, 0.2777777777777778],
  [3200.0, 0.2777777777777778, 0.25],
  [12700.0, 0.25, 0.26666666666666666],
  [10000.0, 0.26666666666666666, 0.041666666666666664],
  [45100.0, 0.041666666666666664, 0.25],
  [15400.0, 0.25, 0.2380952380952381],
  [6800.0, 0.2380952380952381, 0.3333333333333333],
  [11600.0, 0.3333333333333333, 0.2777777777777778],
  [16200.0, 0.2777777777777778, 0.16666666666666666],
  [7200.0, 0.16666666666666666, 0.13333333333333333],
  [16400.0, 0.13333333333333333, 0.19999999999999998],
  [18200.0, 0.19999999999999998, 0.2380952380952381],
  [44500.0, 0.2380952380952381, 0.25],
  [3900.0, 0.25, 0.13333333333333333],
  [200.0, 0.13333333333333333, 0.2222222222222222],
  [14200.0, 0.2222222222222222, 0.2777777777777778],
  [7600.0, 0.2777777777777778, 0.16666666666666666],
  [200.0, 0.16666666666666666, 0.25],
  [3900.0, 0.25, 0.3333333333333333],
  [4200.0, 0.3333333333333333, 0.25],
  [200.0, 0.25, 0.25],
  [1100.0, 0.25, 0.3333333333333333],
  [16200.0, 0.3333333333333333, 0.06666666666666667],
  [4800.0, 0.06666666666666667, 0.13333333333333333],
  [6800.0, 0.13333333333333333, 0.2916666666666667],
  [14300.0, 0.2916666666666667, 0.2916666666666667],
  [200.0, 0.2916666666666667, 0.25],
  [8300.0, 0.25, 0.3333333333333333],
  [8600.0, 0.3333333333333333, 0.041666666666666664],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.11 => p.pan;
1200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
