[
  [15500.0, 0.0, 0.0],
  [35300.0, 0.0, 0.010989010989010988],
  [3000.0, 0.010989010989010988, 0.07692307692307693],
  [22700.0, 0.07692307692307693, 0.015384615384615385],
  [7900.0, 0.015384615384615385, 0.038461538461538464],
  [1400.0, 0.038461538461538464, 0.07692307692307693],
  [22100.0, 0.07692307692307693, 0.019230769230769232],
  [72900.0, 0.019230769230769232, 0.03296703296703297],
  [11300.0, 0.03296703296703297, 0.019230769230769232],
  [12500.0, 0.019230769230769232, 0.00641025641025641],
  [27100.0, 0.00641025641025641, 0.010989010989010988],
  [2200.0, 0.010989010989010988, 0.019230769230769232],
  [27700.0, 0.019230769230769232, 0.07692307692307693],
  [40000.0, 0.07692307692307693, 0.05128205128205128],
  [16300.0, 0.05128205128205128, 0.019230769230769232],
  [10900.0, 0.019230769230769232, 0.057692307692307696],
  [65800.0, 0.057692307692307696, 0.028846153846153848],
  [74600.0, 0.028846153846153848, 0.07692307692307693],
  [13700.0, 0.07692307692307693, 0.06410256410256411],
  [5300.0, 0.06410256410256411, 0.042735042735042736],
  [7600.0, 0.042735042735042736, 0.019230769230769232],
  [4000.0, 0.019230769230769232, 0.01282051282051282],
  [5900.0, 0.01282051282051282, 0.008547008547008546],
  [7800.0, 0.008547008547008546, 0.019230769230769232],
  [11600.0, 0.019230769230769232, 0.019230769230769232],
  [1900.0, 0.019230769230769232, 0.057692307692307696],
  [3300.0, 0.057692307692307696, 0.038461538461538464],
  [4500.0, 0.038461538461538464, 0.02366863905325444],
  [25400.0, 0.02366863905325444, 0.020979020979020976],
  [14400.0, 0.020979020979020976, 0.023076923076923075],
  [12700.0, 0.023076923076923075, 0.008547008547008546],
  [7400.0, 0.008547008547008546, 0.019230769230769232],
  [4400.0, 0.019230769230769232, 0.019230769230769232],
  [3400.0, 0.019230769230769232, 0.03496503496503496],
  [21000.0, 0.03496503496503496, 0.07692307692307693],
  [27500.0, 0.07692307692307693, 0.03296703296703297],
  [51600.0, 0.03296703296703297, 0.07692307692307693],
  [41000.0, 0.07692307692307693, 0.07692307692307693],
  [12800.0, 0.07692307692307693, 0.008547008547008546],
  [37000.0, 0.008547008547008546, 0.03076923076923077],
  [33500.0, 0.03076923076923077, 0.007692307692307693],
  [20100.0, 0.007692307692307693, 0.028846153846153848],
  [15400.0, 0.028846153846153848, 0.01282051282051282],
  [9500.0, 0.01282051282051282, 0.019230769230769232],
  [40500.0, 0.019230769230769232, 0.06153846153846154],
  [17100.0, 0.06153846153846154, 0.03296703296703297],
  [26000.0, 0.03296703296703297, 0.03076923076923077],
  [25900.0, 0.03076923076923077, 0.009615384615384616],
  [7900.0, 0.009615384615384616, 0.07692307692307693],
  [15600.0, 0.07692307692307693, 0.009615384615384616],
  [73800.0, 0.009615384615384616, 0.007692307692307693],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
