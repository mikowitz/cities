[
  [14500.0, 0.0, 0.0],
  [13700.0, 0.0, 0.2222222222222222],
  [8900.0, 0.2222222222222222, 0.16666666666666666],
  [8600.0, 0.16666666666666666, 0.4166666666666667],
  [7300.0, 0.4166666666666667, 0.5],
  [9800.0, 0.5, 0.5],
  [4200.0, 0.5, 0.5],
  [21200.0, 0.5, 0.5],
  [1100.0, 0.5, 0.5],
  [200.0, 0.5, 0.21428571428571427],
  [2600.0, 0.21428571428571427, 0.2857142857142857],
  [5600.0, 0.2857142857142857, 0.5],
  [6100.0, 0.5, 0.16666666666666666],
  [3400.0, 0.16666666666666666, 0.5],
  [1000.0, 0.5, 0.5],
  [22400.0, 0.5, 0.3],
  [4000.0, 0.3, 0.5],
  [10600.0, 0.5, 0.5],
  [3400.0, 0.5, 0.5],
  [1400.0, 0.5, 0.5],
  [2700.0, 0.5, 0.08333333333333333],
  [6200.0, 0.08333333333333333, 0.1],
  [13400.0, 0.1, 0.3125],
  [16100.0, 0.3125, 0.5],
  [6500.0, 0.5, 0.5],
  [32800.0, 0.5, 0.3],
  [28200.0, 0.3, 0.10714285714285714],
  [35500.0, 0.10714285714285714, 0.0625],
  [4300.0, 0.0625, 0.5],
  [300.0, 0.5, 0.3888888888888889],
  [11900.0, 0.3888888888888889, 0.5],
  [13600.0, 0.5, 0.05555555555555555],
  [6700.0, 0.05555555555555555, 0.5],
  [2500.0, 0.5, 0.07142857142857142],
  [13000.0, 0.07142857142857142, 0.5],
  [4000.0, 0.5, 0.3],
  [10400.0, 0.3, 0.5],
  [1400.0, 0.5, 0.08333333333333333],
  [11100.0, 0.08333333333333333, 0.4166666666666667],
  [19000.0, 0.4166666666666667, 0.5],
  [2100.0, 0.5, 0.08333333333333333],
  [31000.0, 0.08333333333333333, 0.4166666666666667],
  [15500.0, 0.4166666666666667, 0.5],
  [3900.0, 0.5, 0.07142857142857142],
  [5500.0, 0.07142857142857142, 0.5],
  [15000.0, 0.5, 0.07142857142857142],
  [2000.0, 0.07142857142857142, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
