[
  [17700.0, 0.0, 0.0],
  [2200.0, 0.0, 0.014492753623188404],
  [12500.0, 0.014492753623188404, 0.010869565217391304],
  [18200.0, 0.010869565217391304, 0.014492753623188404],
  [4900.0, 0.014492753623188404, 0.014492753623188404],
  [3600.0, 0.014492753623188404, 0.010869565217391304],
  [2700.0, 0.010869565217391304, 0.014492753623188404],
  [5500.0, 0.014492753623188404, 0.014492753623188404],
  [8900.0, 0.014492753623188404, 0.004830917874396135],
  [24700.0, 0.004830917874396135, 0.014492753623188404],
  [11400.0, 0.014492753623188404, 0.010869565217391304],
  [17100.0, 0.010869565217391304, 0.03260869565217391],
  [3500.0, 0.03260869565217391, 0.014492753623188404],
  [2400.0, 0.014492753623188404, 0.010869565217391304],
  [15700.0, 0.010869565217391304, 0.014492753623188404],
  [29300.0, 0.014492753623188404, 0.014492753623188404],
  [7800.0, 0.014492753623188404, 0.043478260869565216],
  [4000.0, 0.043478260869565216, 0.043478260869565216],
  [46000.0, 0.043478260869565216, 0.02898550724637681],
  [52800.0, 0.02898550724637681, 0.008695652173913044],
  [6800.0, 0.008695652173913044, 0.010869565217391304],
  [39400.0, 0.010869565217391304, 0.010869565217391304],
  [700.0, 0.010869565217391304, 0.014492753623188404],
  [28500.0, 0.014492753623188404, 0.005434782608695652],
  [9400.0, 0.005434782608695652, 0.018633540372670808],
  [10400.0, 0.018633540372670808, 0.014492753623188404],
  [22800.0, 0.014492753623188404, 0.014492753623188404],
  [19400.0, 0.014492753623188404, 0.014492753623188404],
  [8600.0, 0.014492753623188404, 0.010869565217391304],
  [32800.0, 0.010869565217391304, 0.034782608695652174],
  [56200.0, 0.034782608695652174, 0.043478260869565216],
  [8900.0, 0.043478260869565216, 0.010869565217391304],
  [1400.0, 0.010869565217391304, 0.043478260869565216],
  [9800.0, 0.043478260869565216, 0.010869565217391304],
  [11100.0, 0.010869565217391304, 0.010869565217391304],
  [29900.0, 0.010869565217391304, 0.010869565217391304],
  [4100.0, 0.010869565217391304, 0.021739130434782608],
  [9100.0, 0.021739130434782608, 0.034782608695652174],
  [3800.0, 0.034782608695652174, 0.043478260869565216],
  [16800.0, 0.043478260869565216, 0.014492753623188404],
  [47700.0, 0.014492753623188404, 0.021739130434782608],
  [800.0, 0.021739130434782608, 0.014492753623188404],
  [12900.0, 0.014492753623188404, 0.014492753623188404],
  [24800.0, 0.014492753623188404, 0.014492753623188404],
  [19700.0, 0.014492753623188404, 0.005434782608695652],
  [9200.0, 0.005434782608695652, 0.008695652173913044],
  [12000.0, 0.008695652173913044, 0.008695652173913044],
  [23500.0, 0.008695652173913044, 0.034782608695652174],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.7 => p.pan;
2300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
