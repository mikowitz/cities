[
  [0.0, 0.0, 0.0],
  [6400.0, 0.0, 0.07142857142857142],
  [11400.0, 0.07142857142857142, 0.5],
  [17100.0, 0.5, 0.0625],
  [1100.0, 0.0625, 0.5],
  [400.0, 0.5, 0.5],
  [16400.0, 0.5, 0.05555555555555555],
  [13100.0, 0.05555555555555555, 0.08333333333333333],
  [16900.0, 0.08333333333333333, 0.5],
  [8600.0, 0.5, 0.3],
  [1400.0, 0.3, 0.5],
  [2000.0, 0.5, 0.5],
  [44000.0, 0.5, 0.2222222222222222],
  [4200.0, 0.2222222222222222, 0.08333333333333333],
  [13400.0, 0.08333333333333333, 0.2],
  [12300.0, 0.2, 0.42857142857142855],
  [22400.0, 0.42857142857142855, 0.5],
  [15800.0, 0.5, 0.5],
  [7100.0, 0.5, 0.36363636363636365],
  [2000.0, 0.36363636363636365, 0.5],
  [9100.0, 0.5, 0.1],
  [15600.0, 0.1, 0.05555555555555555],
  [4200.0, 0.05555555555555555, 0.4],
  [3500.0, 0.4, 0.5],
  [3700.0, 0.5, 0.2727272727272727],
  [24000.0, 0.2727272727272727, 0.2857142857142857],
  [15800.0, 0.2857142857142857, 0.0625],
  [1500.0, 0.0625, 0.3181818181818182],
  [700.0, 0.3181818181818182, 0.5],
  [200.0, 0.5, 0.25],
  [16200.0, 0.25, 0.3333333333333333],
  [2700.0, 0.3333333333333333, 0.5],
  [4500.0, 0.5, 0.1111111111111111],
  [29400.0, 0.1111111111111111, 0.5],
  [3000.0, 0.5, 0.5],
  [1200.0, 0.5, 0.2857142857142857],
  [3600.0, 0.2857142857142857, 0.5],
  [6200.0, 0.5, 0.125],
  [2000.0, 0.125, 0.5],
  [6800.0, 0.5, 0.42857142857142855],
  [13400.0, 0.42857142857142855, 0.5],
  [6100.0, 0.5, 0.08333333333333333],
  [13300.0, 0.08333333333333333, 0.5],
  [1200.0, 0.5, 0.5],
  [2300.0, 0.5, 0.4],
  [7600.0, 0.4, 0.5],
  [2900.0, 0.5, 0.5],
  [9600.0, 0.5, 0.5],
  [16300.0, 0.5, 0.07142857142857142],
  [200.0, 0.07142857142857142, 0.35],
  [7000.0, 0.35, 0.4],
  [3200.0, 0.4, 0.5],
  [12000.0, 0.5, 0.5],
  [5900.0, 0.5, 0.08333333333333333],
  [2700.0, 0.08333333333333333, 0.5],
  [4400.0, 0.5, 0.08333333333333333],
  [4500.0, 0.08333333333333333, 0.5],
  [4400.0, 0.5, 0.07142857142857142],
  [5700.0, 0.07142857142857142, 0.3333333333333333],
  [2500.0, 0.3333333333333333, 0.07142857142857142],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
