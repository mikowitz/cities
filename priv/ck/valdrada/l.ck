[
  [6500.0, 0.0, 0.0],
  [900.0, 0.0, 0.26666666666666666],
  [6800.0, 0.26666666666666666, 0.125],
  [5000.0, 0.125, 0.08333333333333333],
  [200.0, 0.08333333333333333, 0.2222222222222222],
  [17700.0, 0.2222222222222222, 0.3333333333333333],
  [3400.0, 0.3333333333333333, 0.2222222222222222],
  [11200.0, 0.2222222222222222, 0.08333333333333333],
  [15900.0, 0.08333333333333333, 0.25],
  [6400.0, 0.25, 0.08333333333333333],
  [18500.0, 0.08333333333333333, 0.14814814814814814],
  [7100.0, 0.14814814814814814, 0.125],
  [24700.0, 0.125, 0.125],
  [2200.0, 0.125, 0.26666666666666666],
  [11500.0, 0.26666666666666666, 0.14814814814814814],
  [13400.0, 0.14814814814814814, 0.125],
  [600.0, 0.125, 0.25],
  [200.0, 0.25, 0.2222222222222222],
  [1400.0, 0.2222222222222222, 0.3333333333333333],
  [17900.0, 0.3333333333333333, 0.08333333333333333],
  [2400.0, 0.08333333333333333, 0.08333333333333333],
  [12400.0, 0.08333333333333333, 0.16666666666666666],
  [4000.0, 0.16666666666666666, 0.16666666666666666],
  [8700.0, 0.16666666666666666, 0.1111111111111111],
  [200.0, 0.1111111111111111, 0.19999999999999998],
  [11700.0, 0.19999999999999998, 0.26666666666666666],
  [41600.0, 0.26666666666666666, 0.1111111111111111],
  [28900.0, 0.1111111111111111, 0.3333333333333333],
  [9400.0, 0.3333333333333333, 0.2777777777777778],
  [4100.0, 0.2777777777777778, 0.23076923076923075],
  [28100.0, 0.23076923076923075, 0.05555555555555555],
  [200.0, 0.05555555555555555, 0.25],
  [5300.0, 0.25, 0.3333333333333333],
  [15600.0, 0.3333333333333333, 0.08333333333333333],
  [8900.0, 0.08333333333333333, 0.1111111111111111],
  [8400.0, 0.1111111111111111, 0.13333333333333333],
  [1700.0, 0.13333333333333333, 0.09523809523809523],
  [12100.0, 0.09523809523809523, 0.1111111111111111],
  [2500.0, 0.1111111111111111, 0.13333333333333333],
  [17500.0, 0.13333333333333333, 0.13333333333333333],
  [17400.0, 0.13333333333333333, 0.16666666666666666],
  [13900.0, 0.16666666666666666, 0.16666666666666666],
  [4400.0, 0.16666666666666666, 0.05555555555555555],
  [23700.0, 0.05555555555555555, 0.3333333333333333],
  [16300.0, 0.3333333333333333, 0.19999999999999998],
  [1500.0, 0.19999999999999998, 0.125],
  [31200.0, 0.125, 0.2916666666666667],
  [15300.0, 0.2916666666666667, 0.3333333333333333],
  [7900.0, 0.3333333333333333, 0.125],
  [35400.0, 0.125, 0.3333333333333333],
  [2400.0, 0.3333333333333333, 0.1111111111111111],
  [12800.0, 0.1111111111111111, 0.08333333333333333],
  [6700.0, 0.08333333333333333, 0.1818181818181818],
  [3800.0, 0.1818181818181818, 0.08333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.11 => p.pan;
1200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
