[
  [3900.0, 0.0, 0.0],
  [24600.0, 0.0, 0.017857142857142856],
  [2000.0, 0.017857142857142856, 0.06349206349206349],
  [6000.0, 0.06349206349206349, 0.05714285714285715],
  [38600.0, 0.05714285714285715, 0.14285714285714285],
  [5800.0, 0.14285714285714285, 0.08571428571428572],
  [17900.0, 0.08571428571428572, 0.14285714285714285],
  [4900.0, 0.14285714285714285, 0.08163265306122448],
  [7800.0, 0.08163265306122448, 0.09523809523809523],
  [26300.0, 0.09523809523809523, 0.14285714285714285],
  [1900.0, 0.14285714285714285, 0.12244897959183673],
  [18600.0, 0.12244897959183673, 0.061224489795918366],
  [10400.0, 0.061224489795918366, 0.05714285714285715],
  [18000.0, 0.05714285714285715, 0.10204081632653061],
  [16300.0, 0.10204081632653061, 0.14285714285714285],
  [1800.0, 0.14285714285714285, 0.12244897959183673],
  [13400.0, 0.12244897959183673, 0.03571428571428571],
  [4600.0, 0.03571428571428571, 0.14285714285714285],
  [6900.0, 0.14285714285714285, 0.02040816326530612],
  [58500.0, 0.02040816326530612, 0.14285714285714285],
  [4300.0, 0.14285714285714285, 0.06493506493506493],
  [3900.0, 0.06493506493506493, 0.017857142857142856],
  [18900.0, 0.017857142857142856, 0.125],
  [11900.0, 0.125, 0.14285714285714285],
  [24500.0, 0.14285714285714285, 0.05357142857142857],
  [10800.0, 0.05357142857142857, 0.14285714285714285],
  [6300.0, 0.14285714285714285, 0.14285714285714285],
  [7700.0, 0.14285714285714285, 0.08571428571428572],
  [22000.0, 0.08571428571428572, 0.14285714285714285],
  [57600.0, 0.14285714285714285, 0.10714285714285714],
  [4100.0, 0.10714285714285714, 0.10204081632653061],
  [600.0, 0.10204081632653061, 0.05357142857142857],
  [30900.0, 0.05357142857142857, 0.07142857142857142],
  [16500.0, 0.07142857142857142, 0.12698412698412698],
  [62900.0, 0.12698412698412698, 0.14285714285714285],
  [8700.0, 0.14285714285714285, 0.14285714285714285],
  [38000.0, 0.14285714285714285, 0.14285714285714285],
  [20300.0, 0.14285714285714285, 0.07792207792207792],
  [13500.0, 0.07792207792207792, 0.07142857142857142],
  [10200.0, 0.07142857142857142, 0.14285714285714285],
  [15000.0, 0.14285714285714285, 0.05714285714285715],
  [22900.0, 0.05714285714285715, 0.028571428571428574],
  [10300.0, 0.028571428571428574, 0.08571428571428572],
  [15800.0, 0.08571428571428572, 0.14285714285714285],
  [13500.0, 0.14285714285714285, 0.12244897959183673],
  [9500.0, 0.12244897959183673, 0.14285714285714285],
  [3100.0, 0.14285714285714285, 0.05194805194805195],
  [22000.0, 0.05194805194805195, 0.12987012987012986],
  [32900.0, 0.12987012987012986, 0.10204081632653061],
  [15300.0, 0.10204081632653061, 0.14285714285714285],
  [15300.0, 0.14285714285714285, 0.047619047619047616],
  [12500.0, 0.047619047619047616, 0.05194805194805195],
  [59900.0, 0.05194805194805195, 0.14285714285714285],
  [600.0, 0.14285714285714285, 0.07142857142857142],
  [135700.0, 0.07142857142857142, 0.10714285714285714],
  [15500.0, 0.10714285714285714, 0.028571428571428574],
  [50300.0, 0.028571428571428574, 0.028571428571428574],
  [9700.0, 0.028571428571428574, 0.015873015873015872],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
