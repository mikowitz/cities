[
  [3500.0, 0.0, 0.0],
  [8000.0, 0.0, 0.13333333333333333],
  [4800.0, 0.13333333333333333, 0.14285714285714285],
  [2200.0, 0.14285714285714285, 0.14285714285714285],
  [2500.0, 0.14285714285714285, 0.2222222222222222],
  [2700.0, 0.2222222222222222, 0.1111111111111111],
  [6100.0, 0.1111111111111111, 0.2962962962962963],
  [17600.0, 0.2962962962962963, 0.3333333333333333],
  [14800.0, 0.3333333333333333, 0.3333333333333333],
  [5100.0, 0.3333333333333333, 0.15384615384615385],
  [1400.0, 0.15384615384615385, 0.1111111111111111],
  [3100.0, 0.1111111111111111, 0.1851851851851852],
  [8000.0, 0.1851851851851852, 0.125],
  [5700.0, 0.125, 0.1111111111111111],
  [5000.0, 0.1111111111111111, 0.3333333333333333],
  [6300.0, 0.3333333333333333, 0.25],
  [2800.0, 0.25, 0.3333333333333333],
  [6400.0, 0.3333333333333333, 0.3333333333333333],
  [5700.0, 0.3333333333333333, 0.25],
  [4200.0, 0.25, 0.16666666666666666],
  [3300.0, 0.16666666666666666, 0.14285714285714285],
  [3300.0, 0.14285714285714285, 0.3333333333333333],
  [3700.0, 0.3333333333333333, 0.3333333333333333],
  [8200.0, 0.3333333333333333, 0.16666666666666666],
  [1100.0, 0.16666666666666666, 0.3333333333333333],
  [16500.0, 0.3333333333333333, 0.047619047619047616],
  [4000.0, 0.047619047619047616, 0.3333333333333333],
  [1800.0, 0.3333333333333333, 0.3333333333333333],
  [5700.0, 0.3333333333333333, 0.041666666666666664],
  [3000.0, 0.041666666666666664, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.3333333333333333],
  [21700.0, 0.3333333333333333, 0.07407407407407407],
  [3100.0, 0.07407407407407407, 0.3333333333333333],
  [3500.0, 0.3333333333333333, 0.26666666666666666],
  [4300.0, 0.26666666666666666, 0.19999999999999998],
  [4000.0, 0.19999999999999998, 0.09523809523809523],
  [5500.0, 0.09523809523809523, 0.19999999999999998],
  [23300.0, 0.19999999999999998, 0.08333333333333333],
  [5200.0, 0.08333333333333333, 0.2777777777777778],
  [2400.0, 0.2777777777777778, 0.3333333333333333],
  [1700.0, 0.3333333333333333, 0.16666666666666666],
  [1100.0, 0.16666666666666666, 0.1111111111111111],
  [2600.0, 0.1111111111111111, 0.16666666666666666],
  [1800.0, 0.16666666666666666, 0.26666666666666666],
  [13100.0, 0.26666666666666666, 0.07407407407407407],
  [9800.0, 0.07407407407407407, 0.2222222222222222],
  [2000.0, 0.2222222222222222, 0.3333333333333333],
  [2000.0, 0.3333333333333333, 0.13333333333333333],
  [17500.0, 0.13333333333333333, 0.3],
  [6500.0, 0.3, 0.14814814814814814],
  [25700.0, 0.14814814814814814, 0.1111111111111111],
  [5700.0, 0.1111111111111111, 0.3333333333333333],
  [1300.0, 0.3333333333333333, 0.3333333333333333],
  [2600.0, 0.3333333333333333, 0.16666666666666666],
  [4700.0, 0.16666666666666666, 0.08333333333333333],
  [2200.0, 0.08333333333333333, 0.3333333333333333],
  [1900.0, 0.3333333333333333, 0.1111111111111111],
  [1300.0, 0.1111111111111111, 0.3333333333333333],
  [12700.0, 0.3333333333333333, 0.08333333333333333],
  [1200.0, 0.08333333333333333, 0.3333333333333333],
  [14800.0, 0.3333333333333333, 0.3333333333333333],
  [13000.0, 0.3333333333333333, 0.2777777777777778],
  [3200.0, 0.2777777777777778, 0.1111111111111111],
  [12200.0, 0.1111111111111111, 0.2222222222222222],
  [10100.0, 0.2222222222222222, 0.25],
  [15700.0, 0.25, 0.3333333333333333],
  [8200.0, 0.3333333333333333, 0.05555555555555555],
  [8400.0, 0.05555555555555555, 0.14814814814814814],
  [20000.0, 0.14814814814814814, 0.26666666666666666],
  [2600.0, 0.26666666666666666, 0.3333333333333333],
  [1700.0, 0.3333333333333333, 0.25925925925925924],
  [2400.0, 0.25925925925925924, 0.1111111111111111],
  [7200.0, 0.1111111111111111, 0.26666666666666666],
  [9500.0, 0.26666666666666666, 0.16666666666666666],
  [2700.0, 0.16666666666666666, 0.26666666666666666],
  [4100.0, 0.26666666666666666, 0.125],
  [6500.0, 0.125, 0.07407407407407407],
  [7900.0, 0.07407407407407407, 0.1568627450980392],
  [6300.0, 0.1568627450980392, 0.12121212121212122],
  [8800.0, 0.12121212121212122, 0.125],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.33 => p.pan;
1800.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
