[
  [16100.0, 0.0, 0.0],
  [5700.0, 0.0, 0.1111111111111111],
  [18700.0, 0.1111111111111111, 0.07142857142857142],
  [8500.0, 0.07142857142857142, 0.25],
  [10900.0, 0.25, 0.08333333333333333],
  [35600.0, 0.08333333333333333, 0.045454545454545456],
  [24600.0, 0.045454545454545456, 0.25],
  [300.0, 0.25, 0.21428571428571427],
  [1600.0, 0.21428571428571427, 0.2857142857142857],
  [2900.0, 0.2857142857142857, 0.4],
  [27100.0, 0.4, 0.125],
  [24000.0, 0.125, 0.125],
  [30100.0, 0.125, 0.2857142857142857],
  [41100.0, 0.2857142857142857, 0.08333333333333333],
  [11800.0, 0.08333333333333333, 0.08333333333333333],
  [34300.0, 0.08333333333333333, 0.16666666666666666],
  [21100.0, 0.16666666666666666, 0.08333333333333333],
  [10500.0, 0.08333333333333333, 0.2857142857142857],
  [50200.0, 0.2857142857142857, 0.22727272727272727],
  [10900.0, 0.22727272727272727, 0.1],
  [9500.0, 0.1, 0.08333333333333333],
  [20000.0, 0.08333333333333333, 0.3125],
  [16200.0, 0.3125, 0.3888888888888889],
  [59400.0, 0.3888888888888889, 0.07142857142857142],
  [7600.0, 0.07142857142857142, 0.16666666666666666],
  [22400.0, 0.16666666666666666, 0.08333333333333333],
  [12700.0, 0.08333333333333333, 0.07142857142857142],
  [4700.0, 0.07142857142857142, 0.25],
  [2400.0, 0.25, 0.1],
  [10900.0, 0.1, 0.13636363636363635],
  [42000.0, 0.13636363636363635, 0.07142857142857142],
  [10800.0, 0.07142857142857142, 0.07142857142857142],
  [4900.0, 0.07142857142857142, 0.25],
  [27900.0, 0.25, 0.1],
  [5400.0, 0.1, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.85 => p.pan;
200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
