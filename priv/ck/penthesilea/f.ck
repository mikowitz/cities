[
  [40800.0, 0.0, 0.0],
  [5800.0, 0.0, 0.3333333333333333],
  [65900.0, 0.3333333333333333, 0.08333333333333333],
  [4800.0, 0.08333333333333333, 0.08333333333333333],
  [41500.0, 0.08333333333333333, 0.3333333333333333],
  [1300.0, 0.3333333333333333, 0.3333333333333333],
  [8800.0, 0.3333333333333333, 0.05555555555555555],
  [19000.0, 0.05555555555555555, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.1111111111111111],
  [5400.0, 0.1111111111111111, 0.14814814814814814],
  [52300.0, 0.14814814814814814, 0.1111111111111111],
  [29400.0, 0.1111111111111111, 0.1111111111111111],
  [5500.0, 0.1111111111111111, 0.05555555555555555],
  [20100.0, 0.05555555555555555, 0.05555555555555555],
  [7000.0, 0.05555555555555555, 0.3333333333333333],
  [10100.0, 0.3333333333333333, 0.3333333333333333],
  [21000.0, 0.3333333333333333, 0.047619047619047616],
  [23300.0, 0.047619047619047616, 0.08333333333333333],
  [18600.0, 0.08333333333333333, 0.08333333333333333],
  [16700.0, 0.08333333333333333, 0.3333333333333333],
  [14700.0, 0.3333333333333333, 0.05555555555555555],
  [6900.0, 0.05555555555555555, 0.3333333333333333],
  [4800.0, 0.3333333333333333, 0.06666666666666667],
  [9000.0, 0.06666666666666667, 0.3333333333333333],
  [29000.0, 0.3333333333333333, 0.3333333333333333],
  [103400.0, 0.3333333333333333, 0.047619047619047616],
  [26500.0, 0.047619047619047616, 0.3333333333333333],
  [43300.0, 0.3333333333333333, 0.3333333333333333],
  [23100.0, 0.3333333333333333, 0.08333333333333333],
  [5400.0, 0.08333333333333333, 0.1111111111111111],
  [12800.0, 0.1111111111111111, 0.3333333333333333],
  [8700.0, 0.3333333333333333, 0.3333333333333333],
  [11100.0, 0.3333333333333333, 0.041666666666666664],
  [48800.0, 0.041666666666666664, 0.06666666666666667],
  [51900.0, 0.06666666666666667, 0.3333333333333333],
  [2100.0, 0.3333333333333333, 0.3333333333333333],
  [42800.0, 0.3333333333333333, 0.3333333333333333],
  [3300.0, 0.3333333333333333, 0.1111111111111111],
  [9400.0, 0.1111111111111111, 0.08333333333333333],
  [17100.0, 0.08333333333333333, 0.08333333333333333],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
