[
  [52200.0, 0.0, 0.0],
  [15700.0, 0.0, 0.1],
  [66900.0, 0.1, 0.07142857142857142],
  [49600.0, 0.07142857142857142, 0.05555555555555555],
  [3600.0, 0.05555555555555555, 0.07142857142857142],
  [37700.0, 0.07142857142857142, 0.1],
  [4500.0, 0.1, 0.25],
  [30200.0, 0.25, 0.25],
  [27100.0, 0.25, 0.2857142857142857],
  [26600.0, 0.2857142857142857, 0.1],
  [17900.0, 0.1, 0.125],
  [13800.0, 0.125, 0.07142857142857142],
  [7800.0, 0.07142857142857142, 0.2857142857142857],
  [9200.0, 0.2857142857142857, 0.2857142857142857],
  [17300.0, 0.2857142857142857, 0.05555555555555555],
  [16300.0, 0.05555555555555555, 0.4],
  [13200.0, 0.4, 0.3888888888888889],
  [30500.0, 0.3888888888888889, 0.07142857142857142],
  [6300.0, 0.07142857142857142, 0.0625],
  [22200.0, 0.0625, 0.3125],
  [2000.0, 0.3125, 0.1],
  [7800.0, 0.1, 0.08333333333333333],
  [20300.0, 0.08333333333333333, 0.045454545454545456],
  [42700.0, 0.045454545454545456, 0.2857142857142857],
  [4200.0, 0.2857142857142857, 0.05555555555555555],
  [18900.0, 0.05555555555555555, 0.1],
  [20900.0, 0.1, 0.17857142857142858],
  [20200.0, 0.17857142857142858, 0.1],
  [47400.0, 0.1, 0.25],
  [56200.0, 0.25, 0.1],
  [7800.0, 0.1, 0.3],
  [3700.0, 0.3, 0.2],
  [8300.0, 0.2, 0.125],
  [35900.0, 0.125, 0.4],
  [3400.0, 0.4, 0.5],
  [2100.0, 0.5, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
