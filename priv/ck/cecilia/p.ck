[
  [2300.0, 0.0, 0.0],
  [33600.0, 0.0, 0.1875],
  [33800.0, 0.1875, 0.2],
  [56200.0, 0.2, 0.4166666666666667],
  [300.0, 0.4166666666666667, 0.25],
  [21200.0, 0.25, 0.3125],
  [55000.0, 0.3125, 0.3333333333333333],
  [48300.0, 0.3333333333333333, 0.125],
  [16100.0, 0.125, 0.4],
  [6000.0, 0.4, 0.08333333333333333],
  [5300.0, 0.08333333333333333, 0.15],
  [37800.0, 0.15, 0.07142857142857142],
  [8100.0, 0.07142857142857142, 0.5],
  [300.0, 0.5, 0.125],
  [38800.0, 0.125, 0.1875],
  [7600.0, 0.1875, 0.08333333333333333],
  [19300.0, 0.08333333333333333, 0.5],
  [50600.0, 0.5, 0.5],
  [8600.0, 0.5, 0.0625],
  [61900.0, 0.0625, 0.07142857142857142],
  [49700.0, 0.07142857142857142, 0.2857142857142857],
  [300.0, 0.2857142857142857, 0.2857142857142857],
  [1800.0, 0.2857142857142857, 0.35714285714285715],
  [500.0, 0.35714285714285715, 0.3],
  [41900.0, 0.3, 0.4],
  [3000.0, 0.4, 0.3333333333333333],
  [48000.0, 0.3333333333333333, 0.3333333333333333],
  [22300.0, 0.3333333333333333, 0.08333333333333333],
  [31700.0, 0.08333333333333333, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
