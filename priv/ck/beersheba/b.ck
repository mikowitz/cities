[
  [2100.0, 0.0, 0.0],
  [7700.0, 0.0, 0.08333333333333333],
  [2500.0, 0.08333333333333333, 0.05555555555555555],
  [17100.0, 0.05555555555555555, 0.4444444444444444],
  [2500.0, 0.4444444444444444, 0.05555555555555555],
  [31100.0, 0.05555555555555555, 0.4444444444444444],
  [2500.0, 0.4444444444444444, 0.05555555555555555],
  [16500.0, 0.05555555555555555, 0.4444444444444444],
  [8800.0, 0.4444444444444444, 0.08333333333333333],
  [39900.0, 0.08333333333333333, 0.25],
  [31200.0, 0.25, 0.16666666666666666],
  [1800.0, 0.16666666666666666, 0.08333333333333333],
  [2500.0, 0.08333333333333333, 0.05],
  [3100.0, 0.05, 0.4],
  [28900.0, 0.4, 0.22727272727272727],
  [30800.0, 0.22727272727272727, 0.3],
  [5500.0, 0.3, 0.07142857142857142],
  [7800.0, 0.07142857142857142, 0.22727272727272727],
  [2500.0, 0.22727272727272727, 0.05555555555555555],
  [18000.0, 0.05555555555555555, 0.4444444444444444],
  [30300.0, 0.4444444444444444, 0.125],
  [600.0, 0.125, 0.35714285714285715],
  [2500.0, 0.35714285714285715, 0.05555555555555555],
  [6700.0, 0.05555555555555555, 0.4444444444444444],
  [36000.0, 0.4444444444444444, 0.2727272727272727],
  [300.0, 0.2727272727272727, 0.21428571428571427],
  [2000.0, 0.21428571428571427, 0.2857142857142857],
  [27500.0, 0.2857142857142857, 0.125],
  [16300.0, 0.125, 0.0625],
  [7500.0, 0.0625, 0.16666666666666666],
  [31500.0, 0.16666666666666666, 0.3888888888888889],
  [3000.0, 0.3888888888888889, 0.08333333333333333],
  [2500.0, 0.08333333333333333, 0.1],
  [16700.0, 0.1, 0.1],
  [15000.0, 0.1, 0.125],
  [1100.0, 0.125, 0.07142857142857142],
  [300.0, 0.07142857142857142, 0.21428571428571427],
  [900.0, 0.21428571428571427, 0.2857142857142857],
  [21000.0, 0.2857142857142857, 0.1],
  [2500.0, 0.1, 0.05],
  [800.0, 0.05, 0.4],
  [31500.0, 0.4, 0.07142857142857142],
  [17700.0, 0.07142857142857142, 0.25],
  [11000.0, 0.25, 0.16666666666666666],
  [15000.0, 0.16666666666666666, 0.2],
  [7300.0, 0.2, 0.08333333333333333],
  [2100.0, 0.08333333333333333, 0.21428571428571427],
  [2500.0, 0.21428571428571427, 0.05555555555555555],
  [6700.0, 0.05555555555555555, 0.4444444444444444],
  [13100.0, 0.4444444444444444, 0.25],
  [82000.0, 0.25, 0.1],
  [2500.0, 0.1, 0.05555555555555555],
  [40300.0, 0.05555555555555555, 0.4444444444444444],
  [7800.0, 0.4444444444444444, 0.14285714285714285],
  [20500.0, 0.14285714285714285, 0.07142857142857142],
  [2500.0, 0.07142857142857142, 0.05555555555555555],
  [9800.0, 0.05555555555555555, 0.4444444444444444],
  [37800.0, 0.4444444444444444, 0.125],
  [3700.0, 0.125, 0.08333333333333333],
  [81000.0, 0.08333333333333333, 0.16666666666666666],
  [2500.0, 0.16666666666666666, 0.05555555555555555],
  [23600.0, 0.05555555555555555, 0.4444444444444444],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.85 => p.pan;
200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
