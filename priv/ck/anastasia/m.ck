[
  [6000.0, 0.0, 0.0],
  [8000.0, 0.0, 0.01282051282051282],
  [101600.0, 0.01282051282051282, 0.057692307692307696],
  [3000.0, 0.057692307692307696, 0.019230769230769232],
  [3500.0, 0.019230769230769232, 0.009615384615384616],
  [4000.0, 0.009615384615384616, 0.07692307692307693],
  [16800.0, 0.07692307692307693, 0.04615384615384615],
  [1800.0, 0.04615384615384615, 0.02564102564102564],
  [21600.0, 0.02564102564102564, 0.05982905982905983],
  [3800.0, 0.05982905982905983, 0.07692307692307693],
  [47700.0, 0.07692307692307693, 0.07692307692307693],
  [8600.0, 0.07692307692307693, 0.057692307692307696],
  [13900.0, 0.057692307692307696, 0.07692307692307693],
  [87800.0, 0.07692307692307693, 0.010989010989010988],
  [1800.0, 0.010989010989010988, 0.02564102564102564],
  [1900.0, 0.02564102564102564, 0.05982905982905983],
  [4700.0, 0.05982905982905983, 0.008547008547008546],
  [1800.0, 0.008547008547008546, 0.02564102564102564],
  [50900.0, 0.02564102564102564, 0.05982905982905983],
  [6200.0, 0.05982905982905983, 0.07692307692307693],
  [6100.0, 0.07692307692307693, 0.07692307692307693],
  [23100.0, 0.07692307692307693, 0.07692307692307693],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
