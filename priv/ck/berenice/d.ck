[
  [2800.0, 0.0, 0.0],
  [37800.0, 0.0, 0.5],
  [11000.0, 0.5, 0.375],
  [22000.0, 0.375, 0.5],
  [1500.0, 0.5, 0.4090909090909091],
  [22400.0, 0.4090909090909091, 0.5],
  [1100.0, 0.5, 0.5],
  [8800.0, 0.5, 0.5],
  [3000.0, 0.5, 0.5],
  [4900.0, 0.5, 0.5],
  [200.0, 0.5, 0.25],
  [11800.0, 0.25, 0.3333333333333333],
  [13200.0, 0.3333333333333333, 0.25],
  [5200.0, 0.25, 0.2857142857142857],
  [3600.0, 0.2857142857142857, 0.5],
  [17700.0, 0.5, 0.5],
  [3000.0, 0.5, 0.5],
  [3200.0, 0.5, 0.5],
  [4100.0, 0.5, 0.5],
  [28100.0, 0.5, 0.5],
  [6900.0, 0.5, 0.5],
  [1100.0, 0.5, 0.2857142857142857],
  [32900.0, 0.2857142857142857, 0.5],
  [500.0, 0.5, 0.5],
  [10900.0, 0.5, 0.05],
  [18600.0, 0.05, 0.5],
  [14800.0, 0.5, 0.5],
  [3600.0, 0.5, 0.5],
  [14800.0, 0.5, 0.5],
  [6500.0, 0.5, 0.5],
  [6000.0, 0.5, 0.1],
  [12100.0, 0.1, 0.5],
  [8400.0, 0.5, 0.4],
  [42200.0, 0.4, 0.5],
  [21300.0, 0.5, 0.5],
  [5300.0, 0.5, 0.5],
  [5400.0, 0.5, 0.3125],
  [1100.0, 0.3125, 0.5],
  [4000.0, 0.5, 0.5],
  [22300.0, 0.5, 0.4],
  [5100.0, 0.4, 0.3333333333333333],
  [5200.0, 0.3333333333333333, 0.5],
  [4100.0, 0.5, 0.5],
  [7900.0, 0.5, 0.5],
  [6400.0, 0.5, 0.125],
  [300.0, 0.125, 0.08333333333333333],
  [51200.0, 0.08333333333333333, 0.25],
  [12900.0, 0.25, 0.3],
  [10700.0, 0.3, 0.5],
  [11400.0, 0.5, 0.5],
  [2800.0, 0.5, 0.5],
  [200.0, 0.5, 0.25],
  [13300.0, 0.25, 0.3333333333333333],
  [2500.0, 0.3333333333333333, 0.5],
  [11000.0, 0.5, 0.4],
  [27500.0, 0.4, 0.5],
  [18700.0, 0.5, 0.5],
  [4800.0, 0.5, 0.5],
  [13500.0, 0.5, 0.08333333333333333],
  [12800.0, 0.08333333333333333, 0.5],
  [3200.0, 0.5, 0.5],
  [11400.0, 0.5, 0.25],
  [10800.0, 0.25, 0.05555555555555555],
  [13100.0, 0.05555555555555555, 0.07142857142857142],
  [9300.0, 0.07142857142857142, 0.08333333333333333],
  [10300.0, 0.08333333333333333, 0.5],
  [3200.0, 0.5, 0.5],
  [8500.0, 0.5, 0.25],
  [3500.0, 0.25, 0.05555555555555555],
  [5600.0, 0.05555555555555555, 0.5],
  [38700.0, 0.5, 0.125],
  [8000.0, 0.125, 0.4166666666666667],
  [17600.0, 0.4166666666666667, 0.5],
  [5700.0, 0.5, 0.5],
  [13600.0, 0.5, 0.2857142857142857],
  [38300.0, 0.2857142857142857, 0.5],
  [14900.0, 0.5, 0.08333333333333333],
  [11700.0, 0.08333333333333333, 0.07142857142857142],
  [10600.0, 0.07142857142857142, 0.3333333333333333],
  [19200.0, 0.3333333333333333, 0.25],
  [21300.0, 0.25, 0.5],
  [6200.0, 0.5, 0.4],
  [21400.0, 0.4, 0.5],
  [13300.0, 0.5, 0.05555555555555555],
  [8900.0, 0.05555555555555555, 0.5],
  [23700.0, 0.5, 0.5],
  [12900.0, 0.5, 0.42857142857142855],
  [10800.0, 0.42857142857142855, 0.5],
  [2600.0, 0.5, 0.5],
  [5500.0, 0.5, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
