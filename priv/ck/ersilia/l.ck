[
  [4000.0, 0.0, 0.0],
  [3100.0, 0.0, 0.2380952380952381],
  [4100.0, 0.2380952380952381, 0.2222222222222222],
  [12900.0, 0.2222222222222222, 0.07692307692307693],
  [28600.0, 0.07692307692307693, 0.08333333333333333],
  [5600.0, 0.08333333333333333, 0.13333333333333333],
  [16100.0, 0.13333333333333333, 0.05128205128205129],
  [5100.0, 0.05128205128205129, 0.08333333333333333],
  [26700.0, 0.08333333333333333, 0.13333333333333333],
  [13800.0, 0.13333333333333333, 0.05555555555555555],
  [8300.0, 0.05555555555555555, 0.06666666666666667],
  [1300.0, 0.06666666666666667, 0.26666666666666666],
  [35200.0, 0.26666666666666666, 0.25],
  [4100.0, 0.25, 0.2962962962962963],
  [4900.0, 0.2962962962962963, 0.20833333333333334],
  [2200.0, 0.20833333333333334, 0.08333333333333333],
  [12400.0, 0.08333333333333333, 0.037037037037037035],
  [7400.0, 0.037037037037037035, 0.19999999999999998],
  [10100.0, 0.19999999999999998, 0.13333333333333333],
  [2900.0, 0.13333333333333333, 0.2380952380952381],
  [200.0, 0.2380952380952381, 0.26666666666666666],
  [12200.0, 0.26666666666666666, 0.3333333333333333],
  [2800.0, 0.3333333333333333, 0.2857142857142857],
  [1400.0, 0.2857142857142857, 0.2380952380952381],
  [7200.0, 0.2380952380952381, 0.07407407407407407],
  [13900.0, 0.07407407407407407, 0.2380952380952381],
  [400.0, 0.2380952380952381, 0.26666666666666666],
  [5000.0, 0.26666666666666666, 0.08333333333333333],
  [10300.0, 0.08333333333333333, 0.2380952380952381],
  [16900.0, 0.2380952380952381, 0.2380952380952381],
  [8500.0, 0.2380952380952381, 0.2333333333333333],
  [200.0, 0.2333333333333333, 0.26666666666666666],
  [10000.0, 0.26666666666666666, 0.3333333333333333],
  [13100.0, 0.3333333333333333, 0.2222222222222222],
  [21400.0, 0.2222222222222222, 0.2380952380952381],
  [200.0, 0.2380952380952381, 0.19999999999999998],
  [4300.0, 0.19999999999999998, 0.26666666666666666],
  [15400.0, 0.26666666666666666, 0.08333333333333333],
  [200.0, 0.08333333333333333, 0.19999999999999998],
  [11500.0, 0.19999999999999998, 0.26666666666666666],
  [9700.0, 0.26666666666666666, 0.07692307692307693],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.11 => p.pan;
1200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
