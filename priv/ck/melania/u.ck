[
  [7000.0, 0.0, 0.0],
  [4700.0, 0.0, 0.14285714285714285],
  [2500.0, 0.14285714285714285, 0.07142857142857142],
  [3100.0, 0.07142857142857142, 0.14285714285714285],
  [3100.0, 0.14285714285714285, 0.05357142857142857],
  [6300.0, 0.05357142857142857, 0.07142857142857142],
  [22900.0, 0.07142857142857142, 0.125],
  [10200.0, 0.125, 0.08571428571428572],
  [16800.0, 0.08571428571428572, 0.1142857142857143],
  [15100.0, 0.1142857142857143, 0.023809523809523808],
  [1500.0, 0.023809523809523808, 0.12244897959183673],
  [10100.0, 0.12244897959183673, 0.05357142857142857],
  [18000.0, 0.05357142857142857, 0.09090909090909091],
  [2900.0, 0.09090909090909091, 0.07936507936507937],
  [2400.0, 0.07936507936507937, 0.14285714285714285],
  [11100.0, 0.14285714285714285, 0.09523809523809523],
  [7000.0, 0.09523809523809523, 0.14285714285714285],
  [24500.0, 0.14285714285714285, 0.125],
  [10700.0, 0.125, 0.07936507936507937],
  [11600.0, 0.07936507936507937, 0.09523809523809523],
  [1500.0, 0.09523809523809523, 0.12244897959183673],
  [26500.0, 0.12244897959183673, 0.05357142857142857],
  [21500.0, 0.05357142857142857, 0.07142857142857142],
  [19600.0, 0.07142857142857142, 0.05714285714285715],
  [44000.0, 0.05714285714285715, 0.11111111111111112],
  [28200.0, 0.11111111111111112, 0.07142857142857142],
  [13300.0, 0.07142857142857142, 0.028571428571428574],
  [25300.0, 0.028571428571428574, 0.09523809523809523],
  [1100.0, 0.09523809523809523, 0.023809523809523808],
  [17200.0, 0.023809523809523808, 0.07142857142857142],
  [3400.0, 0.07142857142857142, 0.08571428571428572],
  [6800.0, 0.08571428571428572, 0.05714285714285715],
  [21800.0, 0.05714285714285715, 0.08333333333333334],
  [17500.0, 0.08333333333333334, 0.125],
  [2500.0, 0.125, 0.04081632653061224],
  [25400.0, 0.04081632653061224, 0.11224489795918367],
  [2000.0, 0.11224489795918367, 0.061224489795918366],
  [8500.0, 0.061224489795918366, 0.028571428571428574],
  [4300.0, 0.028571428571428574, 0.04081632653061224],
  [13900.0, 0.04081632653061224, 0.07142857142857142],
  [13300.0, 0.07142857142857142, 0.07142857142857142],
  [8500.0, 0.07142857142857142, 0.07142857142857142],
  [4100.0, 0.07142857142857142, 0.04081632653061224],
  [57900.0, 0.04081632653061224, 0.07142857142857142],
  [6500.0, 0.07142857142857142, 0.10204081632653061],
  [2600.0, 0.10204081632653061, 0.11111111111111112],
  [12300.0, 0.11111111111111112, 0.031746031746031744],
  [9100.0, 0.031746031746031744, 0.07142857142857142],
  [27500.0, 0.07142857142857142, 0.11111111111111112],
  [5000.0, 0.11111111111111112, 0.14285714285714285],
  [4100.0, 0.14285714285714285, 0.07142857142857142],
  [5700.0, 0.07142857142857142, 0.028571428571428574],
  [10600.0, 0.028571428571428574, 0.14285714285714285],
  [28800.0, 0.14285714285714285, 0.125],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.56 => p.pan;
2100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
