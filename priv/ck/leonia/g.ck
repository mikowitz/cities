[
  [19400.0, 0.0, 0.0],
  [28500.0, 0.0, 0.14285714285714285],
  [10300.0, 0.14285714285714285, 0.14285714285714285],
  [15100.0, 0.14285714285714285, 0.07142857142857142],
  [8500.0, 0.07142857142857142, 0.14285714285714285],
  [23000.0, 0.14285714285714285, 0.08163265306122448],
  [14100.0, 0.08163265306122448, 0.10714285714285714],
  [2400.0, 0.10714285714285714, 0.02040816326530612],
  [17000.0, 0.02040816326530612, 0.12244897959183673],
  [15400.0, 0.12244897959183673, 0.08571428571428572],
  [33000.0, 0.08571428571428572, 0.12698412698412698],
  [12700.0, 0.12698412698412698, 0.11904761904761905],
  [22100.0, 0.11904761904761905, 0.09523809523809523],
  [18100.0, 0.09523809523809523, 0.11904761904761905],
  [32400.0, 0.11904761904761905, 0.08571428571428572],
  [10700.0, 0.08571428571428572, 0.11904761904761905],
  [5300.0, 0.11904761904761905, 0.14285714285714285],
  [3900.0, 0.14285714285714285, 0.14285714285714285],
  [29000.0, 0.14285714285714285, 0.14285714285714285],
  [10100.0, 0.14285714285714285, 0.07142857142857142],
  [48500.0, 0.07142857142857142, 0.14285714285714285],
  [86700.0, 0.14285714285714285, 0.11904761904761905],
  [32000.0, 0.11904761904761905, 0.07142857142857142],
  [66200.0, 0.07142857142857142, 0.14285714285714285],
  [28000.0, 0.14285714285714285, 0.14285714285714285],
  [64700.0, 0.14285714285714285, 0.028571428571428574],
  [8100.0, 0.028571428571428574, 0.12698412698412698],
  [72900.0, 0.12698412698412698, 0.12698412698412698],
  [4900.0, 0.12698412698412698, 0.14285714285714285],
  [49600.0, 0.14285714285714285, 0.14285714285714285],
  [56400.0, 0.14285714285714285, 0.14285714285714285],
  [1900.0, 0.14285714285714285, 0.09523809523809523],
  [6700.0, 0.09523809523809523, 0.02040816326530612],
  [1500.0, 0.02040816326530612, 0.09523809523809523],
  [7100.0, 0.09523809523809523, 0.028571428571428574],
  [32600.0, 0.028571428571428574, 0.09523809523809523],
  [4600.0, 0.09523809523809523, 0.11904761904761905],
  [15600.0, 0.11904761904761905, 0.14285714285714285],
  [12100.0, 0.14285714285714285, 0.07142857142857142],
  [2200.0, 0.07142857142857142, 0.09999999999999999],
  [24200.0, 0.09999999999999999, 0.14285714285714285],
  [2400.0, 0.14285714285714285, 0.07142857142857142],
  [7800.0, 0.07142857142857142, 0.14285714285714285],
  [4200.0, 0.14285714285714285, 0.05194805194805195],
  [23600.0, 0.05194805194805195, 0.14285714285714285],
  [3900.0, 0.14285714285714285, 0.1142857142857143],
  [33700.0, 0.1142857142857143, 0.14285714285714285],
  [45600.0, 0.14285714285714285, 0.14285714285714285],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
