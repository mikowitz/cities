[
  [3700.0, 0.0, 0.0],
  [1600.0, 0.0, 0.14285714285714285],
  [33800.0, 0.14285714285714285, 0.07142857142857142],
  [22700.0, 0.07142857142857142, 0.023809523809523808],
  [1000.0, 0.023809523809523808, 0.1142857142857143],
  [2200.0, 0.1142857142857143, 0.023809523809523808],
  [8900.0, 0.023809523809523808, 0.09523809523809523],
  [33700.0, 0.09523809523809523, 0.05714285714285715],
  [13700.0, 0.05714285714285715, 0.12244897959183673],
  [3900.0, 0.12244897959183673, 0.14285714285714285],
  [4500.0, 0.14285714285714285, 0.1285714285714286],
  [43700.0, 0.1285714285714286, 0.023809523809523808],
  [28100.0, 0.023809523809523808, 0.125],
  [27800.0, 0.125, 0.028571428571428574],
  [5100.0, 0.028571428571428574, 0.12244897959183673],
  [14500.0, 0.12244897959183673, 0.14285714285714285],
  [28200.0, 0.14285714285714285, 0.14285714285714285],
  [92500.0, 0.14285714285714285, 0.08571428571428572],
  [10400.0, 0.08571428571428572, 0.14285714285714285],
  [8000.0, 0.14285714285714285, 0.04081632653061224],
  [8400.0, 0.04081632653061224, 0.14285714285714285],
  [8400.0, 0.14285714285714285, 0.14285714285714285],
  [74000.0, 0.14285714285714285, 0.14285714285714285],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
