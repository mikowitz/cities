[
  [6800.0, 0.0, 0.0],
  [116500.0, 0.0, 0.012987012987012986],
  [23600.0, 0.012987012987012986, 0.025974025974025972],
  [91400.0, 0.025974025974025972, 0.0404040404040404],
  [30300.0, 0.0404040404040404, 0.06818181818181818],
  [52200.0, 0.06818181818181818, 0.05454545454545454],
  [7700.0, 0.05454545454545454, 0.025974025974025972],
  [24900.0, 0.025974025974025972, 0.06818181818181818],
  [24400.0, 0.06818181818181818, 0.01515151515151515],
  [44000.0, 0.01515151515151515, 0.07272727272727274],
  [119600.0, 0.07272727272727274, 0.06818181818181818],
  [1800.0, 0.06818181818181818, 0.05454545454545454],
  [12700.0, 0.05454545454545454, 0.07272727272727274],
  [20500.0, 0.07272727272727274, 0.07575757575757576],
  [1000.0, 0.07575757575757576, 0.07272727272727274],
  [8800.0, 0.07272727272727274, 0.05454545454545454],
  [10400.0, 0.05454545454545454, 0.06818181818181818],
  [18500.0, 0.06818181818181818, 0.06818181818181818],
  [6300.0, 0.06818181818181818, 0.06818181818181818],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.63 => p.pan;
2200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
