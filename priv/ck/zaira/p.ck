[
  [14900.0, 0.0, 0.0],
  [22200.0, 0.0, 0.42857142857142855],
  [2300.0, 0.42857142857142855, 0.4],
  [74100.0, 0.4, 0.5],
  [10600.0, 0.5, 0.46153846153846156],
  [6500.0, 0.46153846153846156, 0.2],
  [6500.0, 0.2, 0.125],
  [300.0, 0.125, 0.25],
  [18300.0, 0.25, 0.3125],
  [16100.0, 0.3125, 0.3125],
  [300.0, 0.3125, 0.25],
  [7300.0, 0.25, 0.3125],
  [300.0, 0.3125, 0.125],
  [18900.0, 0.125, 0.1875],
  [2000.0, 0.1875, 0.21428571428571427],
  [17100.0, 0.21428571428571427, 0.05],
  [24900.0, 0.05, 0.5],
  [9500.0, 0.5, 0.0625],
  [24900.0, 0.0625, 0.4],
  [300.0, 0.4, 0.125],
  [5000.0, 0.125, 0.1875],
  [17400.0, 0.1875, 0.375],
  [48100.0, 0.375, 0.375],
  [47100.0, 0.375, 0.35714285714285715],
  [2200.0, 0.35714285714285715, 0.5],
  [3200.0, 0.5, 0.16666666666666666],
  [4700.0, 0.16666666666666666, 0.21428571428571427],
  [18200.0, 0.21428571428571427, 0.3181818181818182],
  [10500.0, 0.3181818181818182, 0.125],
  [45300.0, 0.125, 0.125],
  [14200.0, 0.125, 0.4],
  [28100.0, 0.4, 0.1],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
