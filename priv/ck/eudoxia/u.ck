[
  [1700.0, 0.0, 0.0],
  [8500.0, 0.0, 0.04081632653061224],
  [28500.0, 0.04081632653061224, 0.023809523809523808],
  [8500.0, 0.023809523809523808, 0.14285714285714285],
  [17200.0, 0.14285714285714285, 0.10714285714285714],
  [13800.0, 0.10714285714285714, 0.04081632653061224],
  [27800.0, 0.04081632653061224, 0.09523809523809523],
  [34400.0, 0.09523809523809523, 0.08928571428571429],
  [2000.0, 0.08928571428571429, 0.07142857142857142],
  [4200.0, 0.07142857142857142, 0.1285714285714286],
  [2600.0, 0.1285714285714286, 0.09523809523809523],
  [1300.0, 0.09523809523809523, 0.14285714285714285],
  [8000.0, 0.14285714285714285, 0.08571428571428572],
  [1700.0, 0.08571428571428572, 0.09523809523809523],
  [41400.0, 0.09523809523809523, 0.14285714285714285],
  [20100.0, 0.14285714285714285, 0.08928571428571429],
  [10700.0, 0.08928571428571429, 0.10714285714285714],
  [8100.0, 0.10714285714285714, 0.10714285714285714],
  [11700.0, 0.10714285714285714, 0.047619047619047616],
  [3900.0, 0.047619047619047616, 0.03571428571428571],
  [4200.0, 0.03571428571428571, 0.07936507936507937],
  [31900.0, 0.07936507936507937, 0.05714285714285715],
  [3600.0, 0.05714285714285715, 0.14285714285714285],
  [25300.0, 0.14285714285714285, 0.09523809523809523],
  [35500.0, 0.09523809523809523, 0.10714285714285714],
  [2700.0, 0.10714285714285714, 0.04081632653061224],
  [3000.0, 0.04081632653061224, 0.09523809523809523],
  [12400.0, 0.09523809523809523, 0.14285714285714285],
  [8500.0, 0.14285714285714285, 0.14285714285714285],
  [32000.0, 0.14285714285714285, 0.14285714285714285],
  [2600.0, 0.14285714285714285, 0.14285714285714285],
  [4100.0, 0.14285714285714285, 0.047619047619047616],
  [5000.0, 0.047619047619047616, 0.11111111111111112],
  [15600.0, 0.11111111111111112, 0.10714285714285714],
  [26900.0, 0.10714285714285714, 0.04081632653061224],
  [18100.0, 0.04081632653061224, 0.08163265306122448],
  [19600.0, 0.08163265306122448, 0.1142857142857143],
  [4200.0, 0.1142857142857143, 0.028571428571428574],
  [5700.0, 0.028571428571428574, 0.1142857142857143],
  [75300.0, 0.1142857142857143, 0.1285714285714286],
  [11100.0, 0.1285714285714286, 0.05714285714285715],
  [1400.0, 0.05714285714285715, 0.047619047619047616],
  [4600.0, 0.047619047619047616, 0.09523809523809523],
  [11100.0, 0.09523809523809523, 0.07142857142857142],
  [28000.0, 0.07142857142857142, 0.1285714285714286],
  [8800.0, 0.1285714285714286, 0.07142857142857142],
  [1500.0, 0.07142857142857142, 0.09523809523809523],
  [1100.0, 0.09523809523809523, 0.14285714285714285],
  [11800.0, 0.14285714285714285, 0.08571428571428572],
  [6800.0, 0.08571428571428572, 0.08571428571428572],
  [3100.0, 0.08571428571428572, 0.10714285714285714],
  [8400.0, 0.10714285714285714, 0.017857142857142856],
  [2800.0, 0.017857142857142856, 0.04081632653061224],
  [11300.0, 0.04081632653061224, 0.07142857142857142],
  [11200.0, 0.07142857142857142, 0.09523809523809523],
  [4300.0, 0.09523809523809523, 0.07142857142857142],
  [2700.0, 0.07142857142857142, 0.061224489795918366],
  [7300.0, 0.061224489795918366, 0.03571428571428571],
  [1800.0, 0.03571428571428571, 0.09523809523809523],
  [12400.0, 0.09523809523809523, 0.07142857142857142],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.56 => p.pan;
2100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
