[
  [1100.0, 0.0, 0.0],
  [100800.0, 0.0, 0.06818181818181818],
  [74700.0, 0.06818181818181818, 0.022727272727272728],
  [109500.0, 0.022727272727272728, 0.09090909090909091],
  [75100.0, 0.09090909090909091, 0.06818181818181818],
  [20100.0, 0.06818181818181818, 0.09090909090909091],
  [178900.0, 0.09090909090909091, 0.09090909090909091],
  [42500.0, 0.09090909090909091, 0.0404040404040404],
  [108900.0, 0.0404040404040404, 0.06493506493506494],
  [117300.0, 0.06493506493506494, 0.0606060606060606],
  [20200.0, 0.0606060606060606, 0.05454545454545454],
  [52000.0, 0.05454545454545454, 0.09090909090909091],
  [58800.0, 0.09090909090909091, 0.06818181818181818],
  [33400.0, 0.06818181818181818, 0.06818181818181818],
  [79700.0, 0.06818181818181818, 0.06818181818181818],
  [133500.0, 0.06818181818181818, 0.09090909090909091],
  [23100.0, 0.09090909090909091, 0.07272727272727274],
  [85800.0, 0.07272727272727274, 0.09090909090909091],
  [40800.0, 0.09090909090909091, 0.06818181818181818],
  [37300.0, 0.06818181818181818, 0.09090909090909091],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.19 => p.pan;
1100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
