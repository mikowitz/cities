[
  [33100.0, 0.0, 0.0],
  [40700.0, 0.0, 0.05555555555555555],
  [24400.0, 0.05555555555555555, 0.3333333333333333],
  [3000.0, 0.3333333333333333, 0.3333333333333333],
  [9000.0, 0.3333333333333333, 0.3333333333333333],
  [51700.0, 0.3333333333333333, 0.3333333333333333],
  [39400.0, 0.3333333333333333, 0.037037037037037035],
  [40700.0, 0.037037037037037035, 0.3333333333333333],
  [15000.0, 0.3333333333333333, 0.047619047619047616],
  [30000.0, 0.047619047619047616, 0.041666666666666664],
  [16600.0, 0.041666666666666664, 0.3333333333333333],
  [26200.0, 0.3333333333333333, 0.25],
  [20500.0, 0.25, 0.08333333333333333],
  [16100.0, 0.08333333333333333, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.3333333333333333],
  [19500.0, 0.3333333333333333, 0.05555555555555555],
  [5200.0, 0.05555555555555555, 0.15555555555555556],
  [9300.0, 0.15555555555555556, 0.3333333333333333],
  [10600.0, 0.3333333333333333, 0.3333333333333333],
  [7900.0, 0.3333333333333333, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.08333333333333333],
  [57900.0, 0.08333333333333333, 0.125],
  [47700.0, 0.125, 0.05555555555555555],
  [5400.0, 0.05555555555555555, 0.037037037037037035],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
