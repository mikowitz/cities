[
  [6100.0, 0.0, 0.0],
  [4800.0, 0.0, 0.07142857142857142],
  [4200.0, 0.07142857142857142, 0.04285714285714286],
  [600.0, 0.04285714285714286, 0.14285714285714285],
  [19700.0, 0.14285714285714285, 0.028571428571428574],
  [600.0, 0.028571428571428574, 0.07142857142857142],
  [16400.0, 0.07142857142857142, 0.09523809523809523],
  [4200.0, 0.09523809523809523, 0.07142857142857142],
  [18600.0, 0.07142857142857142, 0.10714285714285714],
  [2800.0, 0.10714285714285714, 0.09523809523809523],
  [30900.0, 0.09523809523809523, 0.02040816326530612],
  [33100.0, 0.02040816326530612, 0.14285714285714285],
  [73300.0, 0.14285714285714285, 0.1142857142857143],
  [28900.0, 0.1142857142857143, 0.028571428571428574],
  [23800.0, 0.028571428571428574, 0.14285714285714285],
  [59800.0, 0.14285714285714285, 0.023809523809523808],
  [12000.0, 0.023809523809523808, 0.14285714285714285],
  [8400.0, 0.14285714285714285, 0.10714285714285714],
  [18600.0, 0.10714285714285714, 0.14285714285714285],
  [12500.0, 0.14285714285714285, 0.08571428571428572],
  [11400.0, 0.08571428571428572, 0.07142857142857142],
  [6600.0, 0.07142857142857142, 0.03571428571428571],
  [25000.0, 0.03571428571428571, 0.08163265306122448],
  [92800.0, 0.08163265306122448, 0.14285714285714285],
  [3200.0, 0.14285714285714285, 0.14285714285714285],
  [22000.0, 0.14285714285714285, 0.11904761904761905],
  [5300.0, 0.11904761904761905, 0.03571428571428571],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
