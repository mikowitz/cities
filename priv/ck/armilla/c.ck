[
  [11200.0, 0.0, 0.0],
  [11000.0, 0.0, 0.14285714285714285],
  [12000.0, 0.14285714285714285, 0.14285714285714285],
  [4500.0, 0.14285714285714285, 0.06666666666666667],
  [13200.0, 0.06666666666666667, 0.0909090909090909],
  [10800.0, 0.0909090909090909, 0.25],
  [18000.0, 0.25, 0.041666666666666664],
  [2000.0, 0.041666666666666664, 0.08333333333333333],
  [12400.0, 0.08333333333333333, 0.16666666666666666],
  [64800.0, 0.16666666666666666, 0.19999999999999998],
  [46500.0, 0.19999999999999998, 0.14814814814814814],
  [15200.0, 0.14814814814814814, 0.12121212121212122],
  [6700.0, 0.12121212121212122, 0.3333333333333333],
  [6800.0, 0.3333333333333333, 0.2142857142857143],
  [10700.0, 0.2142857142857143, 0.030303030303030304],
  [25400.0, 0.030303030303030304, 0.037037037037037035],
  [2700.0, 0.037037037037037035, 0.05555555555555555],
  [62300.0, 0.05555555555555555, 0.05555555555555555],
  [6400.0, 0.05555555555555555, 0.14285714285714285],
  [32400.0, 0.14285714285714285, 0.19999999999999998],
  [58000.0, 0.19999999999999998, 0.047619047619047616],
  [13500.0, 0.047619047619047616, 0.08333333333333333],
  [28000.0, 0.08333333333333333, 0.037037037037037035],
  [200.0, 0.037037037037037035, 0.06666666666666667],
  [33600.0, 0.06666666666666667, 0.09999999999999999],
  [95300.0, 0.09999999999999999, 0.3333333333333333],
  [3900.0, 0.3333333333333333, 0.08333333333333333],
  [23000.0, 0.08333333333333333, 0.047619047619047616],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.78 => p.pan;
300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
