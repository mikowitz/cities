[
  [3500.0, 0.0, 0.0],
  [10900.0, 0.0, 0.3333333333333333],
  [4700.0, 0.3333333333333333, 0.3333333333333333],
  [2700.0, 0.3333333333333333, 0.08333333333333333],
  [24100.0, 0.08333333333333333, 0.3333333333333333],
  [6900.0, 0.3333333333333333, 0.08333333333333333],
  [8000.0, 0.08333333333333333, 0.041666666666666664],
  [5200.0, 0.041666666666666664, 0.037037037037037035],
  [22000.0, 0.037037037037037035, 0.3333333333333333],
  [28200.0, 0.3333333333333333, 0.3333333333333333],
  [14500.0, 0.3333333333333333, 0.08333333333333333],
  [17200.0, 0.08333333333333333, 0.3333333333333333],
  [8400.0, 0.3333333333333333, 0.3333333333333333],
  [600.0, 0.3333333333333333, 0.2380952380952381],
  [20400.0, 0.2380952380952381, 0.08333333333333333],
  [10900.0, 0.08333333333333333, 0.037037037037037035],
  [3700.0, 0.037037037037037035, 0.3333333333333333],
  [17600.0, 0.3333333333333333, 0.047619047619047616],
  [2200.0, 0.047619047619047616, 0.3333333333333333],
  [7000.0, 0.3333333333333333, 0.16666666666666666],
  [900.0, 0.16666666666666666, 0.08333333333333333],
  [2300.0, 0.08333333333333333, 0.3333333333333333],
  [38700.0, 0.3333333333333333, 0.1111111111111111],
  [57400.0, 0.1111111111111111, 0.08333333333333333],
  [6600.0, 0.08333333333333333, 0.030303030303030304],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
