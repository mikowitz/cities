[
  [13500.0, 0.0, 0.0],
  [178400.0, 0.0, 0.03636363636363637],
  [40000.0, 0.03636363636363637, 0.027972027972027972],
  [32900.0, 0.027972027972027972, 0.08181818181818182],
  [10400.0, 0.08181818181818182, 0.07272727272727274],
  [75000.0, 0.07272727272727274, 0.0606060606060606],
  [11800.0, 0.0606060606060606, 0.06493506493506494],
  [12800.0, 0.06493506493506494, 0.018181818181818184],
  [4700.0, 0.018181818181818184, 0.045454545454545456],
  [26800.0, 0.045454545454545456, 0.07272727272727274],
  [2400.0, 0.07272727272727274, 0.05454545454545454],
  [19000.0, 0.05454545454545454, 0.0303030303030303],
  [19900.0, 0.0303030303030303, 0.012987012987012986],
  [17400.0, 0.012987012987012986, 0.05454545454545454],
  [49200.0, 0.05454545454545454, 0.04132231404958678],
  [400.0, 0.04132231404958678, 0.03409090909090909],
  [2200.0, 0.03409090909090909, 0.06818181818181818],
  [38500.0, 0.06818181818181818, 0.03896103896103896],
  [77500.0, 0.03896103896103896, 0.05454545454545454],
  [23700.0, 0.05454545454545454, 0.05454545454545454],
  [22700.0, 0.05454545454545454, 0.012987012987012986],
  [3800.0, 0.012987012987012986, 0.0404040404040404],
  [3900.0, 0.0404040404040404, 0.03636363636363637],
  [34500.0, 0.03636363636363637, 0.045454545454545456],
  [6000.0, 0.045454545454545456, 0.02727272727272727],
  [11900.0, 0.02727272727272727, 0.07272727272727274],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.63 => p.pan;
2200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
