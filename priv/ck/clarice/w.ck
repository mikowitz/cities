[
  [33300.0, 0.0, 0.0],
  [25300.0, 0.0, 0.021739130434782608],
  [95000.0, 0.021739130434782608, 0.008695652173913044],
  [29600.0, 0.008695652173913044, 0.02898550724637681],
  [23100.0, 0.02898550724637681, 0.010869565217391304],
  [30800.0, 0.010869565217391304, 0.043478260869565216],
  [3300.0, 0.043478260869565216, 0.008695652173913044],
  [45600.0, 0.008695652173913044, 0.014492753623188404],
  [18700.0, 0.014492753623188404, 0.003952569169960474],
  [2100.0, 0.003952569169960474, 0.006211180124223602],
  [500.0, 0.006211180124223602, 0.037267080745341616],
  [17300.0, 0.037267080745341616, 0.010869565217391304],
  [5400.0, 0.010869565217391304, 0.010869565217391304],
  [18600.0, 0.010869565217391304, 0.010869565217391304],
  [14900.0, 0.010869565217391304, 0.014492753623188404],
  [13600.0, 0.014492753623188404, 0.021739130434782608],
  [12500.0, 0.021739130434782608, 0.014492753623188404],
  [44800.0, 0.014492753623188404, 0.014492753623188404],
  [2300.0, 0.014492753623188404, 0.010869565217391304],
  [34900.0, 0.010869565217391304, 0.03260869565217391],
  [9100.0, 0.03260869565217391, 0.043478260869565216],
  [200.0, 0.043478260869565216, 0.043478260869565216],
  [2800.0, 0.043478260869565216, 0.010869565217391304],
  [11500.0, 0.010869565217391304, 0.043478260869565216],
  [21400.0, 0.043478260869565216, 0.043478260869565216],
  [18900.0, 0.043478260869565216, 0.010869565217391304],
  [32700.0, 0.010869565217391304, 0.043478260869565216],
  [3700.0, 0.043478260869565216, 0.014492753623188404],
  [32900.0, 0.014492753623188404, 0.021739130434782608],
  [200.0, 0.021739130434782608, 0.043478260869565216],
  [55100.0, 0.043478260869565216, 0.007246376811594202],
  [7900.0, 0.007246376811594202, 0.010869565217391304],
  [2300.0, 0.010869565217391304, 0.010869565217391304],
  [44900.0, 0.010869565217391304, 0.043478260869565216],
  [15300.0, 0.043478260869565216, 0.007246376811594202],
  [5000.0, 0.007246376811594202, 0.008695652173913044],
  [5200.0, 0.008695652173913044, 0.043478260869565216],
  [13800.0, 0.043478260869565216, 0.043478260869565216],
  [43900.0, 0.043478260869565216, 0.03260869565217391],
  [9800.0, 0.03260869565217391, 0.043478260869565216],
  [11300.0, 0.043478260869565216, 0.010869565217391304],
  [3700.0, 0.010869565217391304, 0.034782608695652174],
  [24900.0, 0.034782608695652174, 0.010869565217391304],
  [2400.0, 0.010869565217391304, 0.024844720496894408],
  [50100.0, 0.024844720496894408, 0.010869565217391304],
  [17100.0, 0.010869565217391304, 0.008695652173913044],
  [11900.0, 0.008695652173913044, 0.014492753623188404],
  [36700.0, 0.014492753623188404, 0.010869565217391304],
  [37200.0, 0.010869565217391304, 0.004347826086956522],
  [17800.0, 0.004347826086956522, 0.010869565217391304],
  [7000.0, 0.010869565217391304, 0.010869565217391304],
  [3300.0, 0.010869565217391304, 0.010869565217391304],
  [9700.0, 0.010869565217391304, 0.010869565217391304],
  [16500.0, 0.010869565217391304, 0.034782608695652174],
  [10000.0, 0.034782608695652174, 0.007246376811594202],
  [33800.0, 0.007246376811594202, 0.010869565217391304],
  [20000.0, 0.010869565217391304, 0.021739130434782608],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.7 => p.pan;
2300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
