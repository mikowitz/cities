[
  [8100.0, 0.0, 0.0],
  [17500.0, 0.0, 0.038461538461538464],
  [1800.0, 0.038461538461538464, 0.057692307692307696],
  [3500.0, 0.057692307692307696, 0.07692307692307693],
  [11600.0, 0.07692307692307693, 0.057692307692307696],
  [8200.0, 0.057692307692307696, 0.057692307692307696],
  [30700.0, 0.057692307692307696, 0.04195804195804195],
  [8200.0, 0.04195804195804195, 0.01282051282051282],
  [17600.0, 0.01282051282051282, 0.04395604395604395],
  [23200.0, 0.04395604395604395, 0.057692307692307696],
  [1600.0, 0.057692307692307696, 0.057692307692307696],
  [20900.0, 0.057692307692307696, 0.07692307692307693],
  [700.0, 0.07692307692307693, 0.009615384615384616],
  [1800.0, 0.009615384615384616, 0.04807692307692308],
  [34900.0, 0.04807692307692308, 0.03076923076923077],
  [4700.0, 0.03076923076923077, 0.07692307692307693],
  [25900.0, 0.07692307692307693, 0.038461538461538464],
  [500.0, 0.038461538461538464, 0.057692307692307696],
  [16900.0, 0.057692307692307696, 0.010989010989010988],
  [13000.0, 0.010989010989010988, 0.07692307692307693],
  [23500.0, 0.07692307692307693, 0.019230769230769232],
  [9500.0, 0.019230769230769232, 0.07692307692307693],
  [21100.0, 0.07692307692307693, 0.01282051282051282],
  [13600.0, 0.01282051282051282, 0.07692307692307693],
  [2000.0, 0.07692307692307693, 0.03076923076923077],
  [38500.0, 0.03076923076923077, 0.057692307692307696],
  [3000.0, 0.057692307692307696, 0.019230769230769232],
  [900.0, 0.019230769230769232, 0.07692307692307693],
  [4300.0, 0.07692307692307693, 0.019230769230769232],
  [34800.0, 0.019230769230769232, 0.04395604395604395],
  [8400.0, 0.04395604395604395, 0.04395604395604395],
  [700.0, 0.04395604395604395, 0.07692307692307693],
  [8100.0, 0.07692307692307693, 0.02564102564102564],
  [12000.0, 0.02564102564102564, 0.01282051282051282],
  [39900.0, 0.01282051282051282, 0.019230769230769232],
  [4700.0, 0.019230769230769232, 0.007692307692307693],
  [4000.0, 0.007692307692307693, 0.019230769230769232],
  [1500.0, 0.019230769230769232, 0.019230769230769232],
  [5200.0, 0.019230769230769232, 0.019230769230769232],
  [4600.0, 0.019230769230769232, 0.05128205128205128],
  [4500.0, 0.05128205128205128, 0.057692307692307696],
  [45900.0, 0.057692307692307696, 0.06410256410256411],
  [31900.0, 0.06410256410256411, 0.038461538461538464],
  [7500.0, 0.038461538461538464, 0.05128205128205128],
  [19800.0, 0.05128205128205128, 0.07692307692307693],
  [17300.0, 0.07692307692307693, 0.007692307692307693],
  [7300.0, 0.007692307692307693, 0.03076923076923077],
  [2200.0, 0.03076923076923077, 0.015384615384615385],
  [27000.0, 0.015384615384615385, 0.019230769230769232],
  [15400.0, 0.019230769230769232, 0.015384615384615385],
  [1000.0, 0.015384615384615385, 0.038461538461538464],
  [12100.0, 0.038461538461538464, 0.019230769230769232],
  [1900.0, 0.019230769230769232, 0.038461538461538464],
  [3200.0, 0.038461538461538464, 0.07692307692307693],
  [20300.0, 0.07692307692307693, 0.038461538461538464],
  [1400.0, 0.038461538461538464, 0.038461538461538464],
  [41100.0, 0.038461538461538464, 0.03076923076923077],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.04 => p.pan;
1300.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
