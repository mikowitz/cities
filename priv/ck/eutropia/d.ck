[
  [38400.0, 0.0, 0.0],
  [11100.0, 0.0, 0.5],
  [32900.0, 0.5, 0.5],
  [10000.0, 0.5, 0.5],
  [9500.0, 0.5, 0.5],
  [14900.0, 0.5, 0.5],
  [21400.0, 0.5, 0.16666666666666666],
  [20600.0, 0.16666666666666666, 0.5],
  [3300.0, 0.5, 0.5],
  [22800.0, 0.5, 0.1],
  [1400.0, 0.1, 0.07142857142857142],
  [21100.0, 0.07142857142857142, 0.35714285714285715],
  [1000.0, 0.35714285714285715, 0.5],
  [10600.0, 0.5, 0.5],
  [11500.0, 0.5, 0.05555555555555555],
  [9000.0, 0.05555555555555555, 0.2222222222222222],
  [1400.0, 0.2222222222222222, 0.3333333333333333],
  [3100.0, 0.3333333333333333, 0.5],
  [5700.0, 0.5, 0.5],
  [9800.0, 0.5, 0.05555555555555555],
  [11300.0, 0.05555555555555555, 0.42857142857142855],
  [14100.0, 0.42857142857142855, 0.5],
  [10200.0, 0.5, 0.05555555555555555],
  [5800.0, 0.05555555555555555, 0.4],
  [19000.0, 0.4, 0.05555555555555555],
  [1500.0, 0.05555555555555555, 0.21428571428571427],
  [5900.0, 0.21428571428571427, 0.5],
  [43900.0, 0.5, 0.041666666666666664],
  [34400.0, 0.041666666666666664, 0.5],
  [14400.0, 0.5, 0.42857142857142855],
  [9400.0, 0.42857142857142855, 0.1111111111111111],
  [200.0, 0.1111111111111111, 0.5],
  [8100.0, 0.5, 0.125],
  [20200.0, 0.125, 0.5],
  [17100.0, 0.5, 0.5],
  [13100.0, 0.5, 0.5],
  [31900.0, 0.5, 0.1111111111111111],
  [10800.0, 0.1111111111111111, 0.5],
  [1900.0, 0.5, 0.5],
  [9800.0, 0.5, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.7 => p.pan;
400.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
