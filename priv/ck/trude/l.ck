[
  [26900.0, 0.0, 0.0],
  [4600.0, 0.0, 0.047619047619047616],
  [6200.0, 0.047619047619047616, 0.26666666666666666],
  [45900.0, 0.26666666666666666, 0.047619047619047616],
  [1900.0, 0.047619047619047616, 0.05555555555555555],
  [6000.0, 0.05555555555555555, 0.2777777777777778],
  [200.0, 0.2777777777777778, 0.1111111111111111],
  [4600.0, 0.1111111111111111, 0.14814814814814814],
  [200.0, 0.14814814814814814, 0.1111111111111111],
  [15700.0, 0.1111111111111111, 0.14814814814814814],
  [17200.0, 0.14814814814814814, 0.1111111111111111],
  [14000.0, 0.1111111111111111, 0.1851851851851852],
  [200.0, 0.1851851851851852, 0.2222222222222222],
  [17000.0, 0.2222222222222222, 0.3333333333333333],
  [5300.0, 0.3333333333333333, 0.09523809523809523],
  [6400.0, 0.09523809523809523, 0.3333333333333333],
  [3400.0, 0.3333333333333333, 0.05555555555555555],
  [8800.0, 0.05555555555555555, 0.09523809523809523],
  [9400.0, 0.09523809523809523, 0.14814814814814814],
  [200.0, 0.14814814814814814, 0.14285714285714285],
  [15400.0, 0.14285714285714285, 0.19047619047619047],
  [200.0, 0.19047619047619047, 0.27272727272727276],
  [400.0, 0.27272727272727276, 0.30303030303030304],
  [9800.0, 0.30303030303030304, 0.047619047619047616],
  [7800.0, 0.047619047619047616, 0.19047619047619047],
  [8200.0, 0.19047619047619047, 0.2777777777777778],
  [2600.0, 0.2777777777777778, 0.2777777777777778],
  [4300.0, 0.2777777777777778, 0.09523809523809523],
  [8100.0, 0.09523809523809523, 0.06666666666666667],
  [6600.0, 0.06666666666666667, 0.1111111111111111],
  [8900.0, 0.1111111111111111, 0.08333333333333333],
  [200.0, 0.08333333333333333, 0.25],
  [10900.0, 0.25, 0.3333333333333333],
  [1500.0, 0.3333333333333333, 0.16666666666666666],
  [4200.0, 0.16666666666666666, 0.3],
  [2500.0, 0.3, 0.3333333333333333],
  [2600.0, 0.3333333333333333, 0.3333333333333333],
  [4600.0, 0.3333333333333333, 0.26666666666666666],
  [14500.0, 0.26666666666666666, 0.25],
  [10800.0, 0.25, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.11 => p.pan;
1200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
