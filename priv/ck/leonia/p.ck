[
  [21000.0, 0.0, 0.0],
  [500.0, 0.0, 0.08333333333333333],
  [15200.0, 0.08333333333333333, 0.3333333333333333],
  [300.0, 0.3333333333333333, 0.38461538461538464],
  [2500.0, 0.38461538461538464, 0.4230769230769231],
  [25900.0, 0.4230769230769231, 0.5],
  [22400.0, 0.5, 0.25],
  [12300.0, 0.25, 0.125],
  [1700.0, 0.125, 0.125],
  [31300.0, 0.125, 0.07142857142857142],
  [9900.0, 0.07142857142857142, 0.3],
  [500.0, 0.3, 0.25],
  [8000.0, 0.25, 0.35],
  [300.0, 0.35, 0.2222222222222222],
  [9800.0, 0.2222222222222222, 0.2777777777777778],
  [2000.0, 0.2777777777777778, 0.3076923076923077],
  [2500.0, 0.3076923076923077, 0.08333333333333333],
  [44100.0, 0.08333333333333333, 0.05555555555555555],
  [40500.0, 0.05555555555555555, 0.125],
  [29600.0, 0.125, 0.07142857142857142],
  [21700.0, 0.07142857142857142, 0.16666666666666666],
  [49300.0, 0.16666666666666666, 0.1875],
  [13300.0, 0.1875, 0.2],
  [5300.0, 0.2, 0.25],
  [2200.0, 0.25, 0.07142857142857142],
  [60900.0, 0.07142857142857142, 0.42857142857142855],
  [27600.0, 0.42857142857142855, 0.21428571428571427],
  [19900.0, 0.21428571428571427, 0.1],
  [33400.0, 0.1, 0.05555555555555555],
  [77600.0, 0.05555555555555555, 0.1875],
  [15600.0, 0.1875, 0.25],
  [27100.0, 0.25, 0.125],
  [21000.0, 0.125, 0.05555555555555555],
  [2800.0, 0.05555555555555555, 0.2777777777777778],
  [2500.0, 0.2777777777777778, 0.1],
  [2800.0, 0.1, 0.5],
  [56500.0, 0.5, 0.2777777777777778],
  [14600.0, 0.2777777777777778, 0.5],
  [5100.0, 0.5, 0.0625],
  [18400.0, 0.0625, 0.07142857142857142],
  [2200.0, 0.07142857142857142, 0.07142857142857142],
  [35400.0, 0.07142857142857142, 0.42857142857142855],
  [8400.0, 0.42857142857142855, 0.3],
  [23400.0, 0.3, 0.25],
  [12200.0, 0.25, 0.25],
  [300.0, 0.25, 0.21428571428571427],
  [6900.0, 0.21428571428571427, 0.2857142857142857],
  [94100.0, 0.2857142857142857, 0.5],
  [22700.0, 0.5, 0.125],
  [43500.0, 0.125, 0.125],
  [40900.0, 0.125, 0.3],
  [11700.0, 0.3, 0.125],
  [19100.0, 0.125, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
