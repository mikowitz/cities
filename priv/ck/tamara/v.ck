[
  [76600.0, 0.0, 0.0],
  [127400.0, 0.0, 0.022727272727272728],
  [82600.0, 0.022727272727272728, 0.045454545454545456],
  [57300.0, 0.045454545454545456, 0.05454545454545454],
  [90800.0, 0.05454545454545454, 0.0707070707070707],
  [60000.0, 0.0707070707070707, 0.022727272727272728],
  [11700.0, 0.022727272727272728, 0.012987012987012986],
  [6900.0, 0.012987012987012986, 0.011363636363636364],
  [35100.0, 0.011363636363636364, 0.07272727272727274],
  [2500.0, 0.07272727272727274, 0.012987012987012986],
  [12400.0, 0.012987012987012986, 0.022727272727272728],
  [27400.0, 0.022727272727272728, 0.006493506493506493],
  [27300.0, 0.006493506493506493, 0.018181818181818184],
  [2700.0, 0.018181818181818184, 0.07792207792207792],
  [35500.0, 0.07792207792207792, 0.011363636363636364],
  [21400.0, 0.011363636363636364, 0.06493506493506494],
  [11100.0, 0.06493506493506494, 0.06818181818181818],
  [6700.0, 0.06818181818181818, 0.07272727272727274],
  [1900.0, 0.07272727272727274, 0.06818181818181818],
  [40100.0, 0.06818181818181818, 0.05454545454545454],
  [33000.0, 0.05454545454545454, 0.06818181818181818],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.63 => p.pan;
2200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
