[
  [38100.0, 0.0, 0.0],
  [71600.0, 0.0, 0.375],
  [300.0, 0.375, 0.22727272727272727],
  [42500.0, 0.22727272727272727, 0.2727272727272727],
  [119300.0, 0.2727272727272727, 0.2],
  [500.0, 0.2, 0.08333333333333333],
  [27100.0, 0.08333333333333333, 0.3333333333333333],
  [300.0, 0.3333333333333333, 0.16666666666666666],
  [48100.0, 0.16666666666666666, 0.25],
  [85000.0, 0.25, 0.16666666666666666],
  [500.0, 0.16666666666666666, 0.08333333333333333],
  [23700.0, 0.08333333333333333, 0.3333333333333333],
  [5400.0, 0.3333333333333333, 0.4166666666666667],
  [14800.0, 0.4166666666666667, 0.13636363636363635],
  [28600.0, 0.13636363636363635, 0.08333333333333333],
  [37900.0, 0.08333333333333333, 0.4],
  [16700.0, 0.4, 0.5],
  [49000.0, 0.5, 0.15],
  [3700.0, 0.15, 0.25],
  [300.0, 0.25, 0.18181818181818182],
  [41900.0, 0.18181818181818182, 0.22727272727272727],
  [2200.0, 0.22727272727272727, 0.07142857142857142],
  [48100.0, 0.07142857142857142, 0.42857142857142855],
  [13100.0, 0.42857142857142855, 0.4583333333333333],
  [2200.0, 0.4583333333333333, 0.07142857142857142],
  [23900.0, 0.07142857142857142, 0.42857142857142855],
  [500.0, 0.42857142857142855, 0.08333333333333333],
  [25300.0, 0.08333333333333333, 0.3333333333333333],
  [300.0, 0.3333333333333333, 0.3],
  [500.0, 0.3, 0.4],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
