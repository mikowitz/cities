[
  [22800.0, 0.0, 0.0],
  [18600.0, 0.0, 0.07142857142857142],
  [62900.0, 0.07142857142857142, 0.0625],
  [16500.0, 0.0625, 0.125],
  [9800.0, 0.125, 0.2857142857142857],
  [3800.0, 0.2857142857142857, 0.3],
  [5400.0, 0.3, 0.0625],
  [1300.0, 0.0625, 0.1],
  [13500.0, 0.1, 0.4],
  [2300.0, 0.4, 0.16666666666666666],
  [25800.0, 0.16666666666666666, 0.07142857142857142],
  [15500.0, 0.07142857142857142, 0.25],
  [14400.0, 0.25, 0.08333333333333333],
  [4900.0, 0.08333333333333333, 0.16666666666666666],
  [21700.0, 0.16666666666666666, 0.25],
  [109900.0, 0.25, 0.1],
  [24800.0, 0.1, 0.25],
  [7400.0, 0.25, 0.07142857142857142],
  [3600.0, 0.07142857142857142, 0.125],
  [7100.0, 0.125, 0.25],
  [8000.0, 0.25, 0.2],
  [25900.0, 0.2, 0.25],
  [22000.0, 0.25, 0.16666666666666666],
  [1900.0, 0.16666666666666666, 0.125],
  [18700.0, 0.125, 0.125],
  [16500.0, 0.125, 0.08333333333333333],
  [25300.0, 0.08333333333333333, 0.07142857142857142],
  [300.0, 0.07142857142857142, 0.21428571428571427],
  [24600.0, 0.21428571428571427, 0.2857142857142857],
  [13900.0, 0.2857142857142857, 0.18181818181818182],
  [72800.0, 0.18181818181818182, 0.42857142857142855],
  [46100.0, 0.42857142857142855, 0.25],
  [18400.0, 0.25, 0.08333333333333333],
  [300.0, 0.08333333333333333, 0.21428571428571427],
  [4200.0, 0.21428571428571427, 0.2857142857142857],
  [12100.0, 0.2857142857142857, 0.25],
  [8800.0, 0.25, 0.08333333333333333],
  [4900.0, 0.08333333333333333, 0.05555555555555555],
  [300.0, 0.05555555555555555, 0.21428571428571427],
  [47600.0, 0.21428571428571427, 0.2857142857142857],
  [4100.0, 0.2857142857142857, 0.08333333333333333],
  [7800.0, 0.08333333333333333, 0.05],
  [6100.0, 0.05, 0.25],
  [300.0, 0.25, 0.21428571428571427],
  [24400.0, 0.21428571428571427, 0.2857142857142857],
  [4700.0, 0.2857142857142857, 0.05],
  [25100.0, 0.05, 0.07142857142857142],
  [63300.0, 0.07142857142857142, 0.125],
  [18100.0, 0.125, 0.1],
  [10700.0, 0.1, 0.08333333333333333],
  [39600.0, 0.08333333333333333, 0.15],
  [52700.0, 0.15, 0.2727272727272727],
  [14200.0, 0.2727272727272727, 0.4166666666666667],
  [43000.0, 0.4166666666666667, 0.05],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.85 => p.pan;
200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
