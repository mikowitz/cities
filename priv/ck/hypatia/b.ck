[
  [39100.0, 0.0, 0.0],
  [12000.0, 0.0, 0.07142857142857142],
  [27900.0, 0.07142857142857142, 0.16666666666666666],
  [21600.0, 0.16666666666666666, 0.125],
  [5800.0, 0.125, 0.05555555555555555],
  [3600.0, 0.05555555555555555, 0.07142857142857142],
  [3100.0, 0.07142857142857142, 0.16666666666666666],
  [6500.0, 0.16666666666666666, 0.08333333333333333],
  [2100.0, 0.08333333333333333, 0.4],
  [52400.0, 0.4, 0.08333333333333333],
  [39700.0, 0.08333333333333333, 0.35714285714285715],
  [3000.0, 0.35714285714285715, 0.08333333333333333],
  [13000.0, 0.08333333333333333, 0.25],
  [15000.0, 0.25, 0.1],
  [1600.0, 0.1, 0.08333333333333333],
  [37200.0, 0.08333333333333333, 0.08333333333333333],
  [3800.0, 0.08333333333333333, 0.21428571428571427],
  [15300.0, 0.21428571428571427, 0.08333333333333333],
  [9200.0, 0.08333333333333333, 0.0625],
  [9600.0, 0.0625, 0.25],
  [9100.0, 0.25, 0.3333333333333333],
  [13100.0, 0.3333333333333333, 0.07142857142857142],
  [89900.0, 0.07142857142857142, 0.21428571428571427],
  [116300.0, 0.21428571428571427, 0.16666666666666666],
  [12000.0, 0.16666666666666666, 0.2857142857142857],
  [97000.0, 0.2857142857142857, 0.05555555555555555],
  [20300.0, 0.05555555555555555, 0.25],
  [41900.0, 0.25, 0.4],
  [12900.0, 0.4, 0.25],
  [2500.0, 0.25, 0.3333333333333333],
  [3200.0, 0.3333333333333333, 0.16666666666666666],
  [18000.0, 0.16666666666666666, 0.5],
  [3800.0, 0.5, 0.25],
  [6400.0, 0.25, 0.16666666666666666],
  [13300.0, 0.16666666666666666, 0.25],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.85 => p.pan;
200.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
