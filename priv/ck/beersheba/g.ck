[
  [86600.0, 0.0, 0.0],
  [2700.0, 0.0, 0.1142857142857143],
  [14400.0, 0.1142857142857143, 0.08571428571428572],
  [10600.0, 0.08571428571428572, 0.03571428571428571],
  [23200.0, 0.03571428571428571, 0.028571428571428574],
  [41600.0, 0.028571428571428574, 0.08571428571428572],
  [3200.0, 0.08571428571428572, 0.14285714285714285],
  [600.0, 0.14285714285714285, 0.05357142857142857],
  [67500.0, 0.05357142857142857, 0.07142857142857142],
  [11800.0, 0.07142857142857142, 0.07792207792207792],
  [56200.0, 0.07792207792207792, 0.14285714285714285],
  [7700.0, 0.14285714285714285, 0.08163265306122448],
  [23800.0, 0.08163265306122448, 0.07792207792207792],
  [15400.0, 0.07792207792207792, 0.023809523809523808],
  [5000.0, 0.023809523809523808, 0.06349206349206349],
  [4500.0, 0.06349206349206349, 0.10714285714285714],
  [39000.0, 0.10714285714285714, 0.14285714285714285],
  [2200.0, 0.14285714285714285, 0.09999999999999999],
  [23300.0, 0.09999999999999999, 0.14285714285714285],
  [140700.0, 0.14285714285714285, 0.04081632653061224],
  [43400.0, 0.04081632653061224, 0.08928571428571429],
  [9300.0, 0.08928571428571429, 0.03571428571428571],
  [9400.0, 0.03571428571428571, 0.14285714285714285],
  [6400.0, 0.14285714285714285, 0.10204081632653061],
  [2200.0, 0.10204081632653061, 0.08163265306122448],
  [15900.0, 0.08163265306122448, 0.14285714285714285],
  [22800.0, 0.14285714285714285, 0.14285714285714285],
  [26100.0, 0.14285714285714285, 0.03571428571428571],
  [22900.0, 0.03571428571428571, 0.017857142857142856],
  [14600.0, 0.017857142857142856, 0.07142857142857142],
  [34000.0, 0.07142857142857142, 0.014285714285714287],
  [23800.0, 0.014285714285714287, 0.11904761904761905],
  [10200.0, 0.11904761904761905, 0.12698412698412698],
  [7200.0, 0.12698412698412698, 0.031746031746031744],
  [6300.0, 0.031746031746031744, 0.1349206349206349],
  [600.0, 0.1349206349206349, 0.031746031746031744],
  [17900.0, 0.031746031746031744, 0.047619047619047616],
  [52800.0, 0.047619047619047616, 0.05714285714285715],
  [600.0, 0.05714285714285715, 0.14285714285714285],
  [2300.0, 0.14285714285714285, 0.023809523809523808],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.48 => p.pan;
700.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
