[
  [5100.0, 0.0, 0.0],
  [1500.0, 0.0, 0.5],
  [4800.0, 0.5, 0.2222222222222222],
  [5500.0, 0.2222222222222222, 0.15384615384615385],
  [2400.0, 0.15384615384615385, 0.375],
  [9300.0, 0.375, 0.35714285714285715],
  [1800.0, 0.35714285714285715, 0.18181818181818182],
  [22500.0, 0.18181818181818182, 0.36363636363636365],
  [3500.0, 0.36363636363636365, 0.3],
  [2100.0, 0.3, 0.375],
  [600.0, 0.375, 0.11538461538461539],
  [3200.0, 0.11538461538461539, 0.23076923076923078],
  [9200.0, 0.23076923076923078, 0.05555555555555555],
  [1500.0, 0.05555555555555555, 0.25],
  [1600.0, 0.25, 0.5],
  [7300.0, 0.5, 0.16666666666666666],
  [500.0, 0.16666666666666666, 0.3],
  [4600.0, 0.3, 0.05555555555555555],
  [15600.0, 0.05555555555555555, 0.08333333333333333],
  [1900.0, 0.08333333333333333, 0.375],
  [4800.0, 0.375, 0.3333333333333333],
  [800.0, 0.3333333333333333, 0.25],
  [6500.0, 0.25, 0.1],
  [1800.0, 0.1, 0.18181818181818182],
  [1900.0, 0.18181818181818182, 0.36363636363636365],
  [3500.0, 0.36363636363636365, 0.3],
  [3200.0, 0.3, 0.16666666666666666],
  [8300.0, 0.16666666666666666, 0.25],
  [9300.0, 0.25, 0.16666666666666666],
  [3600.0, 0.16666666666666666, 0.3333333333333333],
  [2600.0, 0.3333333333333333, 0.5],
  [3500.0, 0.5, 0.25],
  [15700.0, 0.25, 0.14285714285714285],
  [4400.0, 0.14285714285714285, 0.4375],
  [1800.0, 0.4375, 0.25],
  [5000.0, 0.25, 0.1111111111111111],
  [5700.0, 0.1111111111111111, 0.25],
  [3000.0, 0.25, 0.16666666666666666],
  [6100.0, 0.16666666666666666, 0.375],
  [2700.0, 0.375, 0.3],
  [8300.0, 0.3, 0.375],
  [2200.0, 0.375, 0.5],
  [2300.0, 0.5, 0.16666666666666666],
  [13600.0, 0.16666666666666666, 0.16666666666666666],
  [4400.0, 0.16666666666666666, 0.5],
  [400.0, 0.5, 0.3],
  [2900.0, 0.3, 0.5],
  [1600.0, 0.5, 0.42857142857142855],
  [18000.0, 0.42857142857142855, 0.14285714285714285],
  [1100.0, 0.14285714285714285, 0.16666666666666666],
  [1900.0, 0.16666666666666666, 0.25],
  [7000.0, 0.25, 0.25],
  [2200.0, 0.25, 0.42857142857142855],
  [7000.0, 0.42857142857142855, 0.375],
  [500.0, 0.375, 0.07142857142857142],
  [3200.0, 0.07142857142857142, 0.21428571428571427],
  [1500.0, 0.21428571428571427, 0.16666666666666666],
  [3000.0, 0.16666666666666666, 0.25],
  [8400.0, 0.25, 0.16666666666666666],
  [3400.0, 0.16666666666666666, 0.14285714285714285],
  [400.0, 0.14285714285714285, 0.125],
  [5400.0, 0.125, 0.375],
  [14600.0, 0.375, 0.16666666666666666],
  [10100.0, 0.16666666666666666, 0.5],
  [500.0, 0.5, 0.05555555555555555],
  [9500.0, 0.05555555555555555, 0.16666666666666666],
  [4900.0, 0.16666666666666666, 0.2],
  [8300.0, 0.2, 0.25],
  [7600.0, 0.25, 0.375],
  [400.0, 0.375, 0.125],
  [8700.0, 0.125, 0.375],
  [2100.0, 0.375, 0.3888888888888889],
  [7500.0, 0.3888888888888889, 0.15384615384615385],
  [2000.0, 0.15384615384615385, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.93 => p.pan;
100.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
