[
  [8000.0, 0.0, 0.0],
  [500.0, 0.0, 0.08333333333333333],
  [48200.0, 0.08333333333333333, 0.3333333333333333],
  [11700.0, 0.3333333333333333, 0.1],
  [33100.0, 0.1, 0.2222222222222222],
  [300.0, 0.2222222222222222, 0.25],
  [13600.0, 0.25, 0.3125],
  [24700.0, 0.3125, 0.07142857142857142],
  [28600.0, 0.07142857142857142, 0.375],
  [97700.0, 0.375, 0.375],
  [37100.0, 0.375, 0.5],
  [3200.0, 0.5, 0.3333333333333333],
  [9400.0, 0.3333333333333333, 0.16666666666666666],
  [500.0, 0.16666666666666666, 0.08333333333333333],
  [1300.0, 0.08333333333333333, 0.3333333333333333],
  [300.0, 0.3333333333333333, 0.25],
  [43800.0, 0.25, 0.3333333333333333],
  [300.0, 0.3333333333333333, 0.25],
  [21600.0, 0.25, 0.3125],
  [49400.0, 0.3125, 0.13636363636363635],
  [33600.0, 0.13636363636363635, 0.25],
  [6800.0, 0.25, 0.1111111111111111],
  [5500.0, 0.1111111111111111, 0.07142857142857142],
  [11500.0, 0.07142857142857142, 0.08333333333333333],
  [4900.0, 0.08333333333333333, 0.0625],
  [14100.0, 0.0625, 0.05555555555555555],
  [300.0, 0.05555555555555555, 0.09090909090909091],
  [15100.0, 0.09090909090909091, 0.13636363636363635],
  [300.0, 0.13636363636363635, 0.5],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
