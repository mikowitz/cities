[
  [37500.0, 0.0, 0.0],
  [18800.0, 0.0, 0.0625],
  [47800.0, 0.0625, 0.05],
  [15500.0, 0.05, 0.36363636363636365],
  [38600.0, 0.36363636363636365, 0.05555555555555555],
  [9300.0, 0.05555555555555555, 0.0625],
  [40700.0, 0.0625, 0.05555555555555555],
  [5100.0, 0.05555555555555555, 0.08333333333333333],
  [11000.0, 0.08333333333333333, 0.1875],
  [16000.0, 0.1875, 0.16666666666666666],
  [400.0, 0.16666666666666666, 0.05],
  [9200.0, 0.05, 0.15],
  [4000.0, 0.15, 0.041666666666666664],
  [23400.0, 0.041666666666666664, 0.3333333333333333],
  [82000.0, 0.3333333333333333, 0.08333333333333333],
  [39900.0, 0.08333333333333333, 0.1875],
  [10000.0, 0.1875, 0.16666666666666666],
  [9900.0, 0.16666666666666666, 0.4],
  [10600.0, 0.4, 0.0625],
  [300.0, 0.0625, 0.25],
  [3500.0, 0.25, 0.3333333333333333],
  [37900.0, 0.3333333333333333, 0.08333333333333333],
  [30100.0, 0.08333333333333333, 0.3],
  [12500.0, 0.3, 0.16666666666666666],
  [33100.0, 0.16666666666666666, 0.14285714285714285],
  [43500.0, 0.14285714285714285, 0.08333333333333333],
  [21400.0, 0.08333333333333333, 0.2222222222222222],
  [300.0, 0.2222222222222222, 0.125],
  [5900.0, 0.125, 0.1875],
  [73600.0, 0.1875, 0.125],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.19 => p.pan;
1600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
