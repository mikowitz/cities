[
  [2300.0, 0.0, 0.0],
  [13400.0, 0.0, 0.2],
  [35500.0, 0.2, 0.2],
  [5000.0, 0.2, 0.2],
  [16100.0, 0.2, 0.2],
  [12400.0, 0.2, 0.2],
  [79400.0, 0.2, 0.03333333333333333],
  [106200.0, 0.03333333333333333, 0.2],
  [22200.0, 0.2, 0.2],
  [36300.0, 0.2, 0.125],
  [72900.0, 0.125, 0.2],
  [9500.0, 0.2, 0.2],
  [32600.0, 0.2, 0.15],
  [19100.0, 0.15, 0.2],
  [17300.0, 0.2, 0.1],
  [700.0, 0.1, 0.2],
  [8800.0, 0.2, 0.2],
  [55400.0, 0.2, 0.2],
  [15100.0, 0.2, 0.2],
  [9200.0, 0.2, 0.2],
  [4900.0, 0.2, 0.18571428571428572],
  [13500.0, 0.18571428571428572, 0.2],
  [700.0, 0.2, 0.2],
  [3100.0, 0.2, 0.2],
  [3000.0, 0.2, 0.2],
  [2800.0, 0.2, 0.2],
  [29600.0, 0.2, 0.2],
  [2700.0, 0.2, 0.2],
  [4200.0, 0.2, 0.2],
  [20300.0, 0.2, 0.2],
  [5500.0, 0.2, 0.05],
  [700.0, 0.05, 0.2],
  [29400.0, 0.2, 0.2],
  [33500.0, 0.2, 0.1],
  [11000.0, 0.1, 0.11428571428571428],
  [1200.0, 0.11428571428571428, 0.2],
  [700.0, 0.2, 0.2],
  [16200.0, 0.2, 0.2],
  [23300.0, 0.2, 0.2],
  [1200.0, 0.2, 0.2],
  [700.0, 0.2, 0.2],
  [17200.0, 0.2, 0.2],
  [600.0, 0.2, 0.2],
  [11200.0, 0.2, 0.2],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
0.85 => p.pan;
2500.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
