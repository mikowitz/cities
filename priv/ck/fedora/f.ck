[
  [5300.0, 0.0, 0.0],
  [200.0, 0.0, 0.3333333333333333],
  [44200.0, 0.3333333333333333, 0.05555555555555555],
  [1500.0, 0.05555555555555555, 0.3333333333333333],
  [200.0, 0.3333333333333333, 0.1111111111111111],
  [2600.0, 0.1111111111111111, 0.14814814814814814],
  [5700.0, 0.14814814814814814, 0.05555555555555555],
  [9700.0, 0.05555555555555555, 0.06666666666666667],
  [200.0, 0.06666666666666667, 0.3333333333333333],
  [26200.0, 0.3333333333333333, 0.1111111111111111],
  [9300.0, 0.1111111111111111, 0.05555555555555555],
  [25500.0, 0.05555555555555555, 0.3333333333333333],
  [11300.0, 0.3333333333333333, 0.05555555555555555],
  [14500.0, 0.05555555555555555, 0.16666666666666666],
  [24700.0, 0.16666666666666666, 0.05555555555555555],
  [45000.0, 0.05555555555555555, 0.047619047619047616],
  [17700.0, 0.047619047619047616, 0.09999999999999999],
  [3600.0, 0.09999999999999999, 0.3333333333333333],
  [10700.0, 0.3333333333333333, 0.3333333333333333],
  [16500.0, 0.3333333333333333, 0.08333333333333333],
  [8400.0, 0.08333333333333333, 0.1111111111111111],
  [5500.0, 0.1111111111111111, 0.08333333333333333],
  [1800.0, 0.08333333333333333, 0.1111111111111111],
  [21800.0, 0.1111111111111111, 0.3333333333333333],
  [4000.0, 0.3333333333333333, 0.06666666666666667],
  [9800.0, 0.06666666666666667, 0.08333333333333333],
  [17200.0, 0.08333333333333333, 0.3333333333333333],
  [5800.0, 0.3333333333333333, 0.1111111111111111],
  [6200.0, 0.1111111111111111, 0.05555555555555555],
  [73600.0, 0.05555555555555555, 0.047619047619047616],
] @=> float fades[][];

Gain g => dac;
0.0 => g.gain;

SinOsc s => Pan2 p => g;
-0.56 => p.pan;
600.0 => s.freq;

for (0 => int i; i < fades.size(); i++) {
fades[i][0] => float totalMs;
fades[i][1] => float startGain;
fades[i][2] => float stopGain;

totalMs::ms + now => time stopTime;

0 => float progress;

(stopGain - startGain) * (1 / totalMs) => float stepChange;

while ( now < stopTime ) {
  1 +=> progress;
  stepChange + g.gain() => g.gain;
  1::ms => now;
}
}

s =< g;
